{
  "android": {
    "support": {
      "v4": {
        "app": {
          "TaskStackBuilder": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html",
            "create": {
              "!type": "fn(context: +android.content.Context) -> +android.support.v4.app.TaskStackBuilder",
              "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#create(android.content.Context)"
            },
            "from": {
              "!type": "fn(context: +android.content.Context) -> +android.support.v4.app.TaskStackBuilder",
              "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#from(android.content.Context)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "startActivities": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#startActivities()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "iterator": {
                "!type": "fn() -> +java.util.Iterator",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#iterator()"
              },
              "getIntentCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#getIntentCount()"
              },
              "addParentStack": {
                "!type": "fn(sourceActivity: +android.app.Activity) -> +android.support.v4.app.TaskStackBuilder",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#addParentStack(android.app.Activity)"
              },
              "getPendingIntent": {
                "!type": "fn(requestCode: number, flags: number) -> +android.app.PendingIntent",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#getPendingIntent(int, int)"
              },
              "getIntent": {
                "!type": "fn(index: number) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#getIntent(int)"
              },
              "addNextIntent": {
                "!type": "fn(nextIntent: +android.content.Intent) -> +android.support.v4.app.TaskStackBuilder",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#addNextIntent(android.content.Intent)"
              },
              "getIntents": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#getIntents()"
              },
              "addNextIntentWithParentStack": {
                "!type": "fn(nextIntent: +android.content.Intent) -> +android.support.v4.app.TaskStackBuilder",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#addNextIntentWithParentStack(android.content.Intent)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "editIntentAt": {
                "!type": "fn(index: number) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html#editIntentAt(int)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "Fragment": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html",
            "!type": "fn()",
            "SavedState": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html",
              "CREATOR": {
                "!type": "+android.os.Parcelable.Creator",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html#CREATOR"
              },
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "describeContents": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html#describeContents()"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "writeToParcel": {
                  "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html#writeToParcel(android.os.Parcel, int)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "InstantiationException": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.InstantiationException.html",
              "!type": "fn(msg: string, cause: +java.lang.Exception)",
              "prototype": {
                "initCause": {
                  "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
                },
                "getLocalizedMessage": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
                },
                "getStackTrace": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
                },
                "printStackTrace": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
                },
                "addSuppressed": {
                  "!type": "fn(throwable: +java.lang.Throwable) -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "fillInStackTrace": {
                  "!type": "fn() -> +java.lang.Throwable",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
                },
                "setStackTrace": {
                  "!type": "fn(trace: +java.newArray) -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
                },
                "getSuppressed": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
                },
                "getCause": {
                  "!type": "fn() -> +java.lang.Throwable",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
                },
                "getMessage": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "instantiate": {
              "!type": "fn(context: +android.content.Context, fname: string) -> +android.support.v4.app.Fragment",
              "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
            },
            "prototype": {
              "getReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReturnTransition()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hashCode()"
              },
              "isResumed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isResumed()"
              },
              "setSharedElementReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementReturnTransition(java.lang.Object)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "onResume": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onResume()"
              },
              "onCreateOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
              },
              "getReenterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReenterTransition()"
              },
              "getString": {
                "!type": "fn(resId: number) -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getString(int)"
              },
              "hasOptionsMenu": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hasOptionsMenu()"
              },
              "onDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroy()"
              },
              "setEnterSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "onContextItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
              },
              "getTag": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTag()"
              },
              "isRemoving": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isRemoving()"
              },
              "onDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDetach()"
              },
              "getFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getFragmentManager()"
              },
              "setHasOptionsMenu": {
                "!type": "fn(hasMenu: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setHasOptionsMenu(boolean)"
              },
              "setEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterTransition(java.lang.Object)"
              },
              "getParentFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getParentFragment()"
              },
              "setInitialSavedState": {
                "!type": "fn(state: +android.support.v4.app.Fragment.SavedState) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setInitialSavedState(android.support.v4.app.Fragment.SavedState)"
              },
              "getId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getId()"
              },
              "getSharedElementReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementReturnTransition()"
              },
              "getAllowEnterTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowEnterTransitionOverlap()"
              },
              "onPrepareOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
              },
              "onCreateContextMenu": {
                "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
              },
              "setMenuVisibility": {
                "!type": "fn(menuVisible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setMenuVisibility(boolean)"
              },
              "isDetached": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isDetached()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#equals(java.lang.Object)"
              },
              "onViewCreated": {
                "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
              },
              "getSharedElementEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementEnterTransition()"
              },
              "getEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getEnterTransition()"
              },
              "setUserVisibleHint": {
                "!type": "fn(isVisibleToUser: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setUserVisibleHint(boolean)"
              },
              "onCreate": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreate(android.os.Bundle)"
              },
              "onLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onLowMemory()"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getContext()"
              },
              "getExitTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getExitTransition()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "setAllowEnterTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
              },
              "onActivityResult": {
                "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
              },
              "onCreateAnimation": {
                "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.view.animation.Animation",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateAnimation(int, boolean, int)"
              },
              "isHidden": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isHidden()"
              },
              "onViewStateRestored": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
              },
              "onRequestPermissionsResult": {
                "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
              },
              "onOptionsMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
              },
              "getView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getView()"
              },
              "setArguments": {
                "!type": "fn(args: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setArguments(android.os.Bundle)"
              },
              "getText": {
                "!type": "fn(resId: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getText(int)"
              },
              "onOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
              },
              "onStop": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStop()"
              },
              "isInLayout": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isInLayout()"
              },
              "setSharedElementEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementEnterTransition(java.lang.Object)"
              },
              "onSaveInstanceState": {
                "!type": "fn(outState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onSaveInstanceState(android.os.Bundle)"
              },
              "startActivity": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivity(android.content.Intent)"
              },
              "getTargetFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetFragment()"
              },
              "getArguments": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getArguments()"
              },
              "isAdded": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isAdded()"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "onStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStart()"
              },
              "setExitTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitTransition(java.lang.Object)"
              },
              "onDestroyView": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyView()"
              },
              "onCreateView": {
                "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
              },
              "getUserVisibleHint": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getUserVisibleHint()"
              },
              "getLoaderManager": {
                "!type": "fn() -> +android.support.v4.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLoaderManager()"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "unregisterForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#unregisterForContextMenu(android.view.View)"
              },
              "getRetainInstance": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getRetainInstance()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#toString()"
              },
              "getHost": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getHost()"
              },
              "requestPermissions": {
                "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#requestPermissions(java.lang.String[], int)"
              },
              "onInflate": {
                "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)"
              },
              "registerForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#registerForContextMenu(android.view.View)"
              },
              "getActivity": {
                "!type": "fn() -> +android.support.v4.app.FragmentActivity",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getActivity()"
              },
              "getAllowReturnTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowReturnTransitionOverlap()"
              },
              "setTargetFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setTargetFragment(android.support.v4.app.Fragment, int)"
              },
              "onDestroyOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyOptionsMenu()"
              },
              "onActivityCreated": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityCreated(android.os.Bundle)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setExitSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "onHiddenChanged": {
                "!type": "fn(hidden: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onHiddenChanged(boolean)"
              },
              "setReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReturnTransition(java.lang.Object)"
              },
              "onAttach": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onAttach(android.content.Context)"
              },
              "isMenuVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isMenuVisible()"
              },
              "setRetainInstance": {
                "!type": "fn(retain: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setRetainInstance(boolean)"
              },
              "setAllowReturnTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
              },
              "getTargetRequestCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetRequestCode()"
              },
              "getChildFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getChildFragmentManager()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getLayoutInflater": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
              },
              "isVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isVisible()"
              },
              "onPause": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPause()"
              },
              "setReenterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReenterTransition(java.lang.Object)"
              },
              "startActivityForResult": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
              },
              "shouldShowRequestPermissionRationale": {
                "!type": "fn(permission: string) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getResources()"
              }
            }
          },
          "FragmentPagerAdapter": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html",
            "!type": "fn(fm: +android.support.v4.app.FragmentManager)",
            "POSITION_UNCHANGED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#POSITION_UNCHANGED"
            },
            "POSITION_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#POSITION_NONE"
            },
            "prototype": {
              "isViewFromObject": {
                "!type": "fn(view: +android.view.View, object: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#isViewFromObject(android.view.View, java.lang.Object)"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getPageWidth": {
                "!type": "fn(position: number) -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getPageWidth(int)"
              },
              "setPrimaryItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number, object: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#setPrimaryItem(android.view.ViewGroup, int, java.lang.Object)"
              },
              "notifyDataSetChanged": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#notifyDataSetChanged()"
              },
              "finishUpdate": {
                "!type": "fn(container: +android.view.ViewGroup) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#finishUpdate(android.view.ViewGroup)"
              },
              "destroyItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number, object: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#destroyItem(android.view.ViewGroup, int, java.lang.Object)"
              },
              "getItem": {
                "!type": "fn(position: number) -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#getItem(int)"
              },
              "getItemId": {
                "!type": "fn(position: number) -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#getItemId(int)"
              },
              "saveState": {
                "!type": "fn() -> +android.os.Parcelable",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#saveState()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getPageTitle": {
                "!type": "fn(position: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getPageTitle(int)"
              },
              "registerDataSetObserver": {
                "!type": "fn(observer: +android.database.DataSetObserver) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#registerDataSetObserver(android.database.DataSetObserver)"
              },
              "unregisterDataSetObserver": {
                "!type": "fn(observer: +android.database.DataSetObserver) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#unregisterDataSetObserver(android.database.DataSetObserver)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "restoreState": {
                "!type": "fn(state: +android.os.Parcelable, loader: +java.lang.ClassLoader) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#restoreState(android.os.Parcelable, java.lang.ClassLoader)"
              },
              "getCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getCount()"
              },
              "startUpdate": {
                "!type": "fn(container: +android.view.ViewGroup) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#startUpdate(android.view.ViewGroup)"
              },
              "getItemPosition": {
                "!type": "fn(object: +java.lang.Object) -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getItemPosition(java.lang.Object)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "instantiateItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number) -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html#instantiateItem(android.view.ViewGroup, int)"
              }
            }
          },
          "NotificationCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html",
            "!type": "fn()",
            "Builder": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html",
              "!type": "fn(context: +android.content.Context)",
              "prototype": {
                "setLargeIcon": {
                  "!type": "fn(icon: +android.graphics.Bitmap) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setLargeIcon(android.graphics.Bitmap)"
                },
                "setContentIntent": {
                  "!type": "fn(intent: +android.app.PendingIntent) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setContentIntent(android.app.PendingIntent)"
                },
                "setContentText": {
                  "!type": "fn(text: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setContentText(java.lang.CharSequence)"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "addPerson": {
                  "!type": "fn(uri: string) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#addPerson(java.lang.String)"
                },
                "setContent": {
                  "!type": "fn(views: +android.widget.RemoteViews) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setContent(android.widget.RemoteViews)"
                },
                "setLocalOnly": {
                  "!type": "fn(b: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setLocalOnly(boolean)"
                },
                "setSubText": {
                  "!type": "fn(text: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setSubText(java.lang.CharSequence)"
                },
                "getNotification": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#getNotification()"
                },
                "setOngoing": {
                  "!type": "fn(ongoing: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setOngoing(boolean)"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "setWhen": {
                  "!type": "fn(when: +java.lang.Long) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setWhen(long)"
                },
                "setVibrate": {
                  "!type": "fn(pattern: +java.newArray) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setVibrate(long[])"
                },
                "setDeleteIntent": {
                  "!type": "fn(intent: +android.app.PendingIntent) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setDeleteIntent(android.app.PendingIntent)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "extend": {
                  "!type": "fn(extender: +android.support.v4.app.NotificationCompat.Extender) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#extend(android.support.v4.app.NotificationCompat.Extender)"
                },
                "setGroup": {
                  "!type": "fn(groupKey: string) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setGroup(java.lang.String)"
                },
                "setCategory": {
                  "!type": "fn(category: string) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setCategory(java.lang.String)"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getExtras": {
                  "!type": "fn() -> +android.os.Bundle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#getExtras()"
                },
                "setColor": {
                  "!type": "fn(argb: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setColor(int)"
                },
                "setVisibility": {
                  "!type": "fn(visibility: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setVisibility(int)"
                },
                "setSound": {
                  "!type": "fn(sound: +android.net.Uri) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setSound(android.net.Uri)"
                },
                "setContentInfo": {
                  "!type": "fn(info: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setContentInfo(java.lang.CharSequence)"
                },
                "setPriority": {
                  "!type": "fn(pri: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setPriority(int)"
                },
                "setPublicVersion": {
                  "!type": "fn(n: +android.app.Notification) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setPublicVersion(android.app.Notification)"
                },
                "setExtras": {
                  "!type": "fn(extras: +android.os.Bundle) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setExtras(android.os.Bundle)"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setFullScreenIntent": {
                  "!type": "fn(intent: +android.app.PendingIntent, highPriority: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setFullScreenIntent(android.app.PendingIntent, boolean)"
                },
                "setSmallIcon": {
                  "!type": "fn(icon: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setSmallIcon(int)"
                },
                "setContentTitle": {
                  "!type": "fn(title: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setContentTitle(java.lang.CharSequence)"
                },
                "setOnlyAlertOnce": {
                  "!type": "fn(onlyAlertOnce: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setOnlyAlertOnce(boolean)"
                },
                "setProgress": {
                  "!type": "fn(max: number, progress: number, indeterminate: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setProgress(int, int, boolean)"
                },
                "setShowWhen": {
                  "!type": "fn(show: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setShowWhen(boolean)"
                },
                "setNumber": {
                  "!type": "fn(number: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setNumber(int)"
                },
                "setStyle": {
                  "!type": "fn(style: +android.support.v4.app.NotificationCompat.Style) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setStyle(android.support.v4.app.NotificationCompat.Style)"
                },
                "addExtras": {
                  "!type": "fn(extras: +android.os.Bundle) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#addExtras(android.os.Bundle)"
                },
                "build": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#build()"
                },
                "setDefaults": {
                  "!type": "fn(defaults: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setDefaults(int)"
                },
                "setUsesChronometer": {
                  "!type": "fn(b: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setUsesChronometer(boolean)"
                },
                "setGroupSummary": {
                  "!type": "fn(isGroupSummary: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setGroupSummary(boolean)"
                },
                "setLights": {
                  "!type": "fn(argb: number, onMs: number, offMs: number) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setLights(int, int, int)"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "setTicker": {
                  "!type": "fn(tickerText: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setTicker(java.lang.CharSequence)"
                },
                "addAction": {
                  "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#addAction(int, java.lang.CharSequence, android.app.PendingIntent)"
                },
                "setSortKey": {
                  "!type": "fn(sortKey: string) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setSortKey(java.lang.String)"
                },
                "setAutoCancel": {
                  "!type": "fn(autoCancel: bool) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html#setAutoCancel(boolean)"
                }
              }
            },
            "Style": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setBuilder": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#setBuilder(android.support.v4.app.NotificationCompat.Builder)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "build": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#build()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "BigPictureStyle": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setBuilder": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#setBuilder(android.support.v4.app.NotificationCompat.Builder)"
                },
                "bigPicture": {
                  "!type": "fn(b: +android.graphics.Bitmap) -> +android.support.v4.app.NotificationCompat.BigPictureStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html#bigPicture(android.graphics.Bitmap)"
                },
                "setBigContentTitle": {
                  "!type": "fn(title: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.BigPictureStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html#setBigContentTitle(java.lang.CharSequence)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "setSummaryText": {
                  "!type": "fn(cs: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.BigPictureStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html#setSummaryText(java.lang.CharSequence)"
                },
                "bigLargeIcon": {
                  "!type": "fn(b: +android.graphics.Bitmap) -> +android.support.v4.app.NotificationCompat.BigPictureStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html#bigLargeIcon(android.graphics.Bitmap)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "build": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#build()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "BigTextStyle": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setBuilder": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#setBuilder(android.support.v4.app.NotificationCompat.Builder)"
                },
                "setBigContentTitle": {
                  "!type": "fn(title: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.BigTextStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html#setBigContentTitle(java.lang.CharSequence)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "bigText": {
                  "!type": "fn(cs: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.BigTextStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html#bigText(java.lang.CharSequence)"
                },
                "setSummaryText": {
                  "!type": "fn(cs: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.BigTextStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html#setSummaryText(java.lang.CharSequence)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "build": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#build()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "InboxStyle": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setBuilder": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#setBuilder(android.support.v4.app.NotificationCompat.Builder)"
                },
                "setBigContentTitle": {
                  "!type": "fn(title: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.InboxStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html#setBigContentTitle(java.lang.CharSequence)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "setSummaryText": {
                  "!type": "fn(cs: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.InboxStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html#setSummaryText(java.lang.CharSequence)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "build": {
                  "!type": "fn() -> +android.app.Notification",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html#build()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "addLine": {
                  "!type": "fn(cs: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.InboxStyle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html#addLine(java.lang.CharSequence)"
                }
              }
            },
            "Action": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html",
              "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent)",
              "Builder": {
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html",
                "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent)",
                "prototype": {
                  "notifyAll": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                  },
                  "toString": {
                    "!type": "fn() -> string",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                  },
                  "equals": {
                    "!type": "fn(o: +java.lang.Object) -> bool",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                  },
                  "wait": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                  },
                  "addRemoteInput": {
                    "!type": "fn(remoteInput: +android.support.v4.app.RemoteInput) -> +android.support.v4.app.NotificationCompat.Action.Builder",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html#addRemoteInput(android.support.v4.app.RemoteInput)"
                  },
                  "extend": {
                    "!type": "fn(extender: +android.support.v4.app.NotificationCompat.Action.Extender) -> +android.support.v4.app.NotificationCompat.Action.Builder",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html#extend(android.support.v4.app.NotificationCompat.Action.Extender)"
                  },
                  "addExtras": {
                    "!type": "fn(extras: +android.os.Bundle) -> +android.support.v4.app.NotificationCompat.Action.Builder",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html#addExtras(android.os.Bundle)"
                  },
                  "hashCode": {
                    "!type": "fn() -> number",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                  },
                  "build": {
                    "!type": "fn() -> +android.support.v4.app.NotificationCompat.Action",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html#build()"
                  },
                  "getClass": {
                    "!type": "fn() -> +java.lang.Class",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                  },
                  "notify": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                  },
                  "getExtras": {
                    "!type": "fn() -> +android.os.Bundle",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html#getExtras()"
                  }
                }
              },
              "WearableExtender": {
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html",
                "!type": "fn()",
                "prototype": {
                  "setCancelLabel": {
                    "!type": "fn(label: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Action.WearableExtender",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#setCancelLabel(java.lang.CharSequence)"
                  },
                  "notifyAll": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                  },
                  "setAvailableOffline": {
                    "!type": "fn(availableOffline: bool) -> +android.support.v4.app.NotificationCompat.Action.WearableExtender",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#setAvailableOffline(boolean)"
                  },
                  "toString": {
                    "!type": "fn() -> string",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                  },
                  "equals": {
                    "!type": "fn(o: +java.lang.Object) -> bool",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                  },
                  "getCancelLabel": {
                    "!type": "fn() -> +java.lang.CharSequence",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#getCancelLabel()"
                  },
                  "wait": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                  },
                  "getConfirmLabel": {
                    "!type": "fn() -> +java.lang.CharSequence",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#getConfirmLabel()"
                  },
                  "setInProgressLabel": {
                    "!type": "fn(label: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Action.WearableExtender",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#setInProgressLabel(java.lang.CharSequence)"
                  },
                  "extend": {
                    "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Action.Builder) -> +android.support.v4.app.NotificationCompat.Action.Builder",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#extend(android.support.v4.app.NotificationCompat.Action.Builder)"
                  },
                  "clone": {
                    "!type": "fn() -> +android.support.v4.app.NotificationCompat.Action.WearableExtender",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#clone()"
                  },
                  "getInProgressLabel": {
                    "!type": "fn() -> +java.lang.CharSequence",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#getInProgressLabel()"
                  },
                  "hashCode": {
                    "!type": "fn() -> number",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                  },
                  "getClass": {
                    "!type": "fn() -> +java.lang.Class",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                  },
                  "isAvailableOffline": {
                    "!type": "fn() -> bool",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#isAvailableOffline()"
                  },
                  "notify": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                  },
                  "setConfirmLabel": {
                    "!type": "fn(label: +java.lang.CharSequence) -> +android.support.v4.app.NotificationCompat.Action.WearableExtender",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html#setConfirmLabel(java.lang.CharSequence)"
                  }
                }
              },
              "FACTORY": {
                "!type": "+android.support.v4.app.NotificationCompatBase.Action.Factory",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#FACTORY"
              },
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "getTitle": {
                  "!type": "fn() -> +java.lang.CharSequence",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#getTitle()"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getRemoteInputs": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#getRemoteInputs()"
                },
                "getActionIntent": {
                  "!type": "fn() -> +android.app.PendingIntent",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#getActionIntent()"
                },
                "getIcon": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#getIcon()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getExtras": {
                  "!type": "fn() -> +android.os.Bundle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html#getExtras()"
                }
              }
            },
            "WearableExtender": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html",
              "!type": "fn()",
              "SIZE_SMALL": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_SMALL"
              },
              "SIZE_MEDIUM": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_MEDIUM"
              },
              "SIZE_XSMALL": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_XSMALL"
              },
              "SIZE_DEFAULT": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_DEFAULT"
              },
              "SIZE_FULL_SCREEN": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_FULL_SCREEN"
              },
              "SIZE_LARGE": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SIZE_LARGE"
              },
              "SCREEN_TIMEOUT_LONG": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SCREEN_TIMEOUT_LONG"
              },
              "UNSET_ACTION_INDEX": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#UNSET_ACTION_INDEX"
              },
              "SCREEN_TIMEOUT_SHORT": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#SCREEN_TIMEOUT_SHORT"
              },
              "prototype": {
                "getContentIcon": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getContentIcon()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "getGravity": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getGravity()"
                },
                "setStartScrollBottom": {
                  "!type": "fn(startScrollBottom: bool) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setStartScrollBottom(boolean)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getCustomContentHeight": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getCustomContentHeight()"
                },
                "getActions": {
                  "!type": "fn() -> +java.util.List",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getActions()"
                },
                "getContentIconGravity": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getContentIconGravity()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "setHintHideIcon": {
                  "!type": "fn(hintHideIcon: bool) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setHintHideIcon(boolean)"
                },
                "addActions": {
                  "!type": "fn(actions: +java.util.List) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#addActions(java.util.List)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "setHintAvoidBackgroundClipping": {
                  "!type": "fn(hintAvoidBackgroundClipping: bool) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setHintAvoidBackgroundClipping(boolean)"
                },
                "setContentAction": {
                  "!type": "fn(actionIndex: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setContentAction(int)"
                },
                "extend": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#extend(android.support.v4.app.NotificationCompat.Builder)"
                },
                "addPages": {
                  "!type": "fn(pages: +java.util.List) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#addPages(java.util.List)"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getDisplayIntent": {
                  "!type": "fn() -> +android.app.PendingIntent",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getDisplayIntent()"
                },
                "getBackground": {
                  "!type": "fn() -> +android.graphics.Bitmap",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getBackground()"
                },
                "clearPages": {
                  "!type": "fn() -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#clearPages()"
                },
                "clearActions": {
                  "!type": "fn() -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#clearActions()"
                },
                "setCustomSizePreset": {
                  "!type": "fn(sizePreset: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setCustomSizePreset(int)"
                },
                "addPage": {
                  "!type": "fn(page: +android.app.Notification) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#addPage(android.app.Notification)"
                },
                "clone": {
                  "!type": "fn() -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#clone()"
                },
                "getStartScrollBottom": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getStartScrollBottom()"
                },
                "getCustomSizePreset": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getCustomSizePreset()"
                },
                "setHintShowBackgroundOnly": {
                  "!type": "fn(hintShowBackgroundOnly: bool) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setHintShowBackgroundOnly(boolean)"
                },
                "setHintScreenTimeout": {
                  "!type": "fn(timeout: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setHintScreenTimeout(int)"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "getContentIntentAvailableOffline": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getContentIntentAvailableOffline()"
                },
                "setGravity": {
                  "!type": "fn(gravity: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setGravity(int)"
                },
                "getContentAction": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getContentAction()"
                },
                "setContentIconGravity": {
                  "!type": "fn(contentIconGravity: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setContentIconGravity(int)"
                },
                "getHintAvoidBackgroundClipping": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getHintAvoidBackgroundClipping()"
                },
                "setBackground": {
                  "!type": "fn(background: +android.graphics.Bitmap) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setBackground(android.graphics.Bitmap)"
                },
                "getHintShowBackgroundOnly": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getHintShowBackgroundOnly()"
                },
                "setContentIntentAvailableOffline": {
                  "!type": "fn(contentIntentAvailableOffline: bool) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setContentIntentAvailableOffline(boolean)"
                },
                "setContentIcon": {
                  "!type": "fn(icon: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setContentIcon(int)"
                },
                "getHintScreenTimeout": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getHintScreenTimeout()"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "getHintHideIcon": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getHintHideIcon()"
                },
                "setDisplayIntent": {
                  "!type": "fn(intent: +android.app.PendingIntent) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setDisplayIntent(android.app.PendingIntent)"
                },
                "addAction": {
                  "!type": "fn(action: +android.support.v4.app.NotificationCompat.Action) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#addAction(android.support.v4.app.NotificationCompat.Action)"
                },
                "setCustomContentHeight": {
                  "!type": "fn(height: number) -> +android.support.v4.app.NotificationCompat.WearableExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#setCustomContentHeight(int)"
                },
                "getPages": {
                  "!type": "fn() -> +java.util.List",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html#getPages()"
                }
              }
            },
            "CarExtender": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html",
              "!type": "fn()",
              "UnreadConversation": {
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html",
                "Builder": {
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html",
                  "!type": "fn(name: string)",
                  "prototype": {
                    "notifyAll": {
                      "!type": "fn() -> void",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                    },
                    "toString": {
                      "!type": "fn() -> string",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                    },
                    "equals": {
                      "!type": "fn(o: +java.lang.Object) -> bool",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                    },
                    "setLatestTimestamp": {
                      "!type": "fn(timestamp: +java.lang.Long) -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder",
                      "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html#setLatestTimestamp(long)"
                    },
                    "wait": {
                      "!type": "fn() -> void",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                    },
                    "setReplyAction": {
                      "!type": "fn(pendingIntent: +android.app.PendingIntent, remoteInput: +android.support.v4.app.RemoteInput) -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder",
                      "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html#setReplyAction(android.app.PendingIntent, android.support.v4.app.RemoteInput)"
                    },
                    "hashCode": {
                      "!type": "fn() -> number",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                    },
                    "addMessage": {
                      "!type": "fn(message: string) -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder",
                      "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html#addMessage(java.lang.String)"
                    },
                    "build": {
                      "!type": "fn() -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation",
                      "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html#build()"
                    },
                    "getClass": {
                      "!type": "fn() -> +java.lang.Class",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                    },
                    "notify": {
                      "!type": "fn() -> void",
                      "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                    },
                    "setReadPendingIntent": {
                      "!type": "fn(pendingIntent: +android.app.PendingIntent) -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder",
                      "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html#setReadPendingIntent(android.app.PendingIntent)"
                    }
                  }
                },
                "prototype": {
                  "notifyAll": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                  },
                  "toString": {
                    "!type": "fn() -> string",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                  },
                  "equals": {
                    "!type": "fn(o: +java.lang.Object) -> bool",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                  },
                  "getRemoteInput": {
                    "!type": "fn() -> +android.support.v4.app.RemoteInput",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getRemoteInput()"
                  },
                  "getLatestTimestamp": {
                    "!type": "fn() -> +java.lang.Long",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getLatestTimestamp()"
                  },
                  "getReplyPendingIntent": {
                    "!type": "fn() -> +android.app.PendingIntent",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getReplyPendingIntent()"
                  },
                  "wait": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                  },
                  "hashCode": {
                    "!type": "fn() -> number",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                  },
                  "getClass": {
                    "!type": "fn() -> +java.lang.Class",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                  },
                  "getReadPendingIntent": {
                    "!type": "fn() -> +android.app.PendingIntent",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getReadPendingIntent()"
                  },
                  "getMessages": {
                    "!type": "fn() -> +java.newArray",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getMessages()"
                  },
                  "notify": {
                    "!type": "fn() -> void",
                    "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                  },
                  "getParticipants": {
                    "!type": "fn() -> +java.newArray",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getParticipants()"
                  },
                  "getParticipant": {
                    "!type": "fn() -> string",
                    "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html#getParticipant()"
                  }
                }
              },
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setLargeIcon": {
                  "!type": "fn(largeIcon: +android.graphics.Bitmap) -> +android.support.v4.app.NotificationCompat.CarExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#setLargeIcon(android.graphics.Bitmap)"
                },
                "setUnreadConversation": {
                  "!type": "fn(unreadConversation: +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation) -> +android.support.v4.app.NotificationCompat.CarExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#setUnreadConversation(android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getUnreadConversation": {
                  "!type": "fn() -> +android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#getUnreadConversation()"
                },
                "extend": {
                  "!type": "fn(builder: +android.support.v4.app.NotificationCompat.Builder) -> +android.support.v4.app.NotificationCompat.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#extend(android.support.v4.app.NotificationCompat.Builder)"
                },
                "getLargeIcon": {
                  "!type": "fn() -> +android.graphics.Bitmap",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#getLargeIcon()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "setColor": {
                  "!type": "fn(color: number) -> +android.support.v4.app.NotificationCompat.CarExtender",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#setColor(int)"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getColor": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html#getColor()"
                }
              }
            },
            "DEFAULT_SOUND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#DEFAULT_SOUND"
            },
            "CATEGORY_RECOMMENDATION": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_RECOMMENDATION"
            },
            "EXTRA_TEXT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_TEXT"
            },
            "FLAG_AUTO_CANCEL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_AUTO_CANCEL"
            },
            "FLAG_ONGOING_EVENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_ONGOING_EVENT"
            },
            "EXTRA_TEXT_LINES": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_TEXT_LINES"
            },
            "EXTRA_LARGE_ICON_BIG": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_LARGE_ICON_BIG"
            },
            "CATEGORY_STATUS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_STATUS"
            },
            "EXTRA_TEMPLATE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_TEMPLATE"
            },
            "CATEGORY_ALARM": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_ALARM"
            },
            "EXTRA_SUMMARY_TEXT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_SUMMARY_TEXT"
            },
            "DEFAULT_ALL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#DEFAULT_ALL"
            },
            "STREAM_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#STREAM_DEFAULT"
            },
            "CATEGORY_SOCIAL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_SOCIAL"
            },
            "COLOR_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#COLOR_DEFAULT"
            },
            "PRIORITY_MAX": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#PRIORITY_MAX"
            },
            "FLAG_LOCAL_ONLY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_LOCAL_ONLY"
            },
            "EXTRA_SHOW_CHRONOMETER": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_SHOW_CHRONOMETER"
            },
            "PRIORITY_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#PRIORITY_DEFAULT"
            },
            "FLAG_FOREGROUND_SERVICE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_FOREGROUND_SERVICE"
            },
            "EXTRA_PROGRESS_INDETERMINATE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_PROGRESS_INDETERMINATE"
            },
            "EXTRA_PICTURE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_PICTURE"
            },
            "EXTRA_PEOPLE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_PEOPLE"
            },
            "FLAG_HIGH_PRIORITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_HIGH_PRIORITY"
            },
            "FLAG_ONLY_ALERT_ONCE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_ONLY_ALERT_ONCE"
            },
            "CATEGORY_TRANSPORT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_TRANSPORT"
            },
            "EXTRA_TITLE_BIG": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_TITLE_BIG"
            },
            "VISIBILITY_SECRET": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#VISIBILITY_SECRET"
            },
            "CATEGORY_EMAIL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_EMAIL"
            },
            "CATEGORY_SYSTEM": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_SYSTEM"
            },
            "PRIORITY_HIGH": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#PRIORITY_HIGH"
            },
            "EXTRA_SMALL_ICON": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_SMALL_ICON"
            },
            "CATEGORY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_SERVICE"
            },
            "CATEGORY_ERROR": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_ERROR"
            },
            "EXTRA_COMPACT_ACTIONS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_COMPACT_ACTIONS"
            },
            "EXTRA_TITLE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_TITLE"
            },
            "CATEGORY_PROMO": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_PROMO"
            },
            "EXTRA_PROGRESS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_PROGRESS"
            },
            "CATEGORY_PROGRESS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_PROGRESS"
            },
            "EXTRA_INFO_TEXT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_INFO_TEXT"
            },
            "FLAG_INSISTENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_INSISTENT"
            },
            "CATEGORY_MESSAGE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_MESSAGE"
            },
            "EXTRA_LARGE_ICON": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_LARGE_ICON"
            },
            "VISIBILITY_PUBLIC": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#VISIBILITY_PUBLIC"
            },
            "EXTRA_MEDIA_SESSION": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_MEDIA_SESSION"
            },
            "DEFAULT_LIGHTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#DEFAULT_LIGHTS"
            },
            "EXTRA_PROGRESS_MAX": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_PROGRESS_MAX"
            },
            "EXTRA_SHOW_WHEN": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_SHOW_WHEN"
            },
            "EXTRA_SUB_TEXT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_SUB_TEXT"
            },
            "VISIBILITY_PRIVATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#VISIBILITY_PRIVATE"
            },
            "FLAG_GROUP_SUMMARY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_GROUP_SUMMARY"
            },
            "PRIORITY_MIN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#PRIORITY_MIN"
            },
            "FLAG_NO_CLEAR": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_NO_CLEAR"
            },
            "FLAG_SHOW_LIGHTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#FLAG_SHOW_LIGHTS"
            },
            "PRIORITY_LOW": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#PRIORITY_LOW"
            },
            "EXTRA_BACKGROUND_IMAGE_URI": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_BACKGROUND_IMAGE_URI"
            },
            "EXTRA_BIG_TEXT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#EXTRA_BIG_TEXT"
            },
            "CATEGORY_CALL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_CALL"
            },
            "DEFAULT_VIBRATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#DEFAULT_VIBRATE"
            },
            "CATEGORY_EVENT": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#CATEGORY_EVENT"
            },
            "isGroupSummary": {
              "!type": "fn(notif: +android.app.Notification) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#isGroupSummary(android.app.Notification)"
            },
            "getGroup": {
              "!type": "fn(notif: +android.app.Notification) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getGroup(android.app.Notification)"
            },
            "getExtras": {
              "!type": "fn(notif: +android.app.Notification) -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getExtras(android.app.Notification)"
            },
            "getSortKey": {
              "!type": "fn(notif: +android.app.Notification) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getSortKey(android.app.Notification)"
            },
            "getAction": {
              "!type": "fn(notif: +android.app.Notification, actionIndex: number) -> +android.support.v4.app.NotificationCompat.Action",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getAction(android.app.Notification, int)"
            },
            "getActionCount": {
              "!type": "fn(notif: +android.app.Notification) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getActionCount(android.app.Notification)"
            },
            "getLocalOnly": {
              "!type": "fn(notif: +android.app.Notification) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getLocalOnly(android.app.Notification)"
            },
            "getCategory": {
              "!type": "fn(notif: +android.app.Notification) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompat.html#getCategory(android.app.Notification)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "NotificationManagerCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html",
            "ACTION_BIND_SIDE_CHANNEL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#ACTION_BIND_SIDE_CHANNEL"
            },
            "EXTRA_USE_SIDE_CHANNEL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#EXTRA_USE_SIDE_CHANNEL"
            },
            "getEnabledListenerPackages": {
              "!type": "fn(context: +android.content.Context) -> +java.util.Set",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#getEnabledListenerPackages(android.content.Context)"
            },
            "from": {
              "!type": "fn(context: +android.content.Context) -> +android.support.v4.app.NotificationManagerCompat",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#from(android.content.Context)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "cancelAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#cancelAll()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn(id: number, notification: +android.app.Notification) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#notify(int, android.app.Notification)"
              },
              "cancel": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html#cancel(int)"
              }
            }
          },
          "ActionBarDrawerToggle": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html",
            "!type": "fn(activity: +android.app.Activity, drawerLayout: +android.support.v4.widget.DrawerLayout, drawerImageRes: number, openDrawerContentDescRes: number, closeDrawerContentDescRes: number)",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "onDrawerSlide": {
                "!type": "fn(drawerView: +android.view.View, slideOffset: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onDrawerSlide(android.view.View, float)"
              },
              "onOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onOptionsItemSelected(android.view.MenuItem)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "setDrawerIndicatorEnabled": {
                "!type": "fn(enable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#setDrawerIndicatorEnabled(boolean)"
              },
              "onDrawerStateChanged": {
                "!type": "fn(newState: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onDrawerStateChanged(int)"
              },
              "isDrawerIndicatorEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#isDrawerIndicatorEnabled()"
              },
              "onDrawerOpened": {
                "!type": "fn(drawerView: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onDrawerOpened(android.view.View)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "onDrawerClosed": {
                "!type": "fn(drawerView: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onDrawerClosed(android.view.View)"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setHomeAsUpIndicator": {
                "!type": "fn(indicator: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#setHomeAsUpIndicator(android.graphics.drawable.Drawable)"
              },
              "syncState": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html#syncState()"
              }
            }
          },
          "FragmentTransaction": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html",
            "!type": "fn()",
            "TRANSIT_EXIT_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_EXIT_MASK"
            },
            "TRANSIT_FRAGMENT_OPEN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_FRAGMENT_OPEN"
            },
            "TRANSIT_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_NONE"
            },
            "TRANSIT_ENTER_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_ENTER_MASK"
            },
            "TRANSIT_FRAGMENT_FADE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_FRAGMENT_FADE"
            },
            "TRANSIT_UNSET": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_UNSET"
            },
            "TRANSIT_FRAGMENT_CLOSE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#TRANSIT_FRAGMENT_CLOSE"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "setTransition": {
                "!type": "fn(transit: number) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#setTransition(int)"
              },
              "commitAllowingStateLoss": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commitAllowingStateLoss()"
              },
              "isAddToBackStackAllowed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#isAddToBackStackAllowed()"
              },
              "addSharedElement": {
                "!type": "fn(sharedElement: +android.view.View, name: string) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#addSharedElement(android.view.View, java.lang.String)"
              },
              "setBreadCrumbShortTitle": {
                "!type": "fn(res: number) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#setBreadCrumbShortTitle(int)"
              },
              "commit": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commit()"
              },
              "addToBackStack": {
                "!type": "fn(name: string) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#addToBackStack(java.lang.String)"
              },
              "setTransitionStyle": {
                "!type": "fn(styleRes: number) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#setTransitionStyle(int)"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "hide": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#hide(android.support.v4.app.Fragment)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "isEmpty": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#isEmpty()"
              },
              "add": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, tag: string) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#add(android.support.v4.app.Fragment, java.lang.String)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "disallowAddToBackStack": {
                "!type": "fn() -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#disallowAddToBackStack()"
              },
              "attach": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#attach(android.support.v4.app.Fragment)"
              },
              "replace": {
                "!type": "fn(containerViewId: number, fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#replace(int, android.support.v4.app.Fragment)"
              },
              "show": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#show(android.support.v4.app.Fragment)"
              },
              "setCustomAnimations": {
                "!type": "fn(enter: number, exit: number) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#setCustomAnimations(int, int)"
              },
              "detach": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#detach(android.support.v4.app.Fragment)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "setBreadCrumbTitle": {
                "!type": "fn(res: number) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#setBreadCrumbTitle(int)"
              },
              "remove": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#remove(android.support.v4.app.Fragment)"
              }
            }
          },
          "DialogFragment": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html",
            "!type": "fn()",
            "STYLE_NO_FRAME": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#STYLE_NO_FRAME"
            },
            "STYLE_NO_TITLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#STYLE_NO_TITLE"
            },
            "STYLE_NO_INPUT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#STYLE_NO_INPUT"
            },
            "STYLE_NORMAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#STYLE_NORMAL"
            },
            "instantiate": {
              "!type": "fn(context: +android.content.Context, fname: string) -> +android.support.v4.app.Fragment",
              "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
            },
            "prototype": {
              "getReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReturnTransition()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hashCode()"
              },
              "isResumed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isResumed()"
              },
              "setSharedElementReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementReturnTransition(java.lang.Object)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "onCreateOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
              },
              "onResume": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onResume()"
              },
              "getReenterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReenterTransition()"
              },
              "getString": {
                "!type": "fn(resId: number) -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getString(int)"
              },
              "hasOptionsMenu": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hasOptionsMenu()"
              },
              "onDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroy()"
              },
              "getDialog": {
                "!type": "fn() -> +android.app.Dialog",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#getDialog()"
              },
              "show": {
                "!type": "fn(manager: +android.support.v4.app.FragmentManager, tag: string) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#show(android.support.v4.app.FragmentManager, java.lang.String)"
              },
              "setEnterSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "dismissAllowingStateLoss": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#dismissAllowingStateLoss()"
              },
              "onContextItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
              },
              "getTag": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTag()"
              },
              "isRemoving": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isRemoving()"
              },
              "onDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onDetach()"
              },
              "getFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getFragmentManager()"
              },
              "setHasOptionsMenu": {
                "!type": "fn(hasMenu: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setHasOptionsMenu(boolean)"
              },
              "setEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterTransition(java.lang.Object)"
              },
              "onCancel": {
                "!type": "fn(dialog: +android.content.DialogInterface) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onCancel(android.content.DialogInterface)"
              },
              "dismiss": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#dismiss()"
              },
              "setupDialog": {
                "!type": "fn(dialog: +android.app.Dialog, style: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#setupDialog(android.app.Dialog, int)"
              },
              "getParentFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getParentFragment()"
              },
              "setInitialSavedState": {
                "!type": "fn(state: +android.support.v4.app.Fragment.SavedState) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setInitialSavedState(android.support.v4.app.Fragment.SavedState)"
              },
              "onDismiss": {
                "!type": "fn(dialog: +android.content.DialogInterface) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onDismiss(android.content.DialogInterface)"
              },
              "getId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getId()"
              },
              "getSharedElementReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementReturnTransition()"
              },
              "getAllowEnterTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowEnterTransitionOverlap()"
              },
              "onPrepareOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
              },
              "onCreateDialog": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.app.Dialog",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onCreateDialog(android.os.Bundle)"
              },
              "setStyle": {
                "!type": "fn(style: number, theme: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#setStyle(int, int)"
              },
              "onCreateContextMenu": {
                "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
              },
              "setMenuVisibility": {
                "!type": "fn(menuVisible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setMenuVisibility(boolean)"
              },
              "isDetached": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isDetached()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#equals(java.lang.Object)"
              },
              "onViewCreated": {
                "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
              },
              "getSharedElementEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementEnterTransition()"
              },
              "getEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getEnterTransition()"
              },
              "setUserVisibleHint": {
                "!type": "fn(isVisibleToUser: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setUserVisibleHint(boolean)"
              },
              "onLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onLowMemory()"
              },
              "onCreate": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onCreate(android.os.Bundle)"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getContext()"
              },
              "getExitTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getExitTransition()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "setAllowEnterTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
              },
              "setShowsDialog": {
                "!type": "fn(showsDialog: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#setShowsDialog(boolean)"
              },
              "onActivityResult": {
                "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
              },
              "onCreateAnimation": {
                "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.view.animation.Animation",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateAnimation(int, boolean, int)"
              },
              "isHidden": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isHidden()"
              },
              "onViewStateRestored": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
              },
              "onOptionsMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
              },
              "onRequestPermissionsResult": {
                "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
              },
              "getView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getView()"
              },
              "onOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
              },
              "setArguments": {
                "!type": "fn(args: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setArguments(android.os.Bundle)"
              },
              "getText": {
                "!type": "fn(resId: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getText(int)"
              },
              "onStop": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onStop()"
              },
              "isInLayout": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isInLayout()"
              },
              "getShowsDialog": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#getShowsDialog()"
              },
              "setSharedElementEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementEnterTransition(java.lang.Object)"
              },
              "onSaveInstanceState": {
                "!type": "fn(outState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onSaveInstanceState(android.os.Bundle)"
              },
              "startActivity": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivity(android.content.Intent)"
              },
              "getTargetFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetFragment()"
              },
              "getArguments": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getArguments()"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "isAdded": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isAdded()"
              },
              "onStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onStart()"
              },
              "setExitTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitTransition(java.lang.Object)"
              },
              "onDestroyView": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onDestroyView()"
              },
              "onCreateView": {
                "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
              },
              "getUserVisibleHint": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getUserVisibleHint()"
              },
              "getLoaderManager": {
                "!type": "fn() -> +android.support.v4.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLoaderManager()"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "unregisterForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#unregisterForContextMenu(android.view.View)"
              },
              "getRetainInstance": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getRetainInstance()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#toString()"
              },
              "getTheme": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#getTheme()"
              },
              "getHost": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getHost()"
              },
              "requestPermissions": {
                "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#requestPermissions(java.lang.String[], int)"
              },
              "onInflate": {
                "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)"
              },
              "registerForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#registerForContextMenu(android.view.View)"
              },
              "getActivity": {
                "!type": "fn() -> +android.support.v4.app.FragmentActivity",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getActivity()"
              },
              "getAllowReturnTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowReturnTransitionOverlap()"
              },
              "setTargetFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setTargetFragment(android.support.v4.app.Fragment, int)"
              },
              "onDestroyOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyOptionsMenu()"
              },
              "onActivityCreated": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onActivityCreated(android.os.Bundle)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setExitSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "onHiddenChanged": {
                "!type": "fn(hidden: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onHiddenChanged(boolean)"
              },
              "setReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReturnTransition(java.lang.Object)"
              },
              "onAttach": {
                "!type": "fn(activity: +android.app.Activity) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#onAttach(android.app.Activity)"
              },
              "setCancelable": {
                "!type": "fn(cancelable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#setCancelable(boolean)"
              },
              "isMenuVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isMenuVisible()"
              },
              "setRetainInstance": {
                "!type": "fn(retain: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setRetainInstance(boolean)"
              },
              "setAllowReturnTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
              },
              "getTargetRequestCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetRequestCode()"
              },
              "getChildFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getChildFragmentManager()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getLayoutInflater": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#getLayoutInflater(android.os.Bundle)"
              },
              "isVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isVisible()"
              },
              "onPause": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPause()"
              },
              "isCancelable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/DialogFragment.html#isCancelable()"
              },
              "setReenterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReenterTransition(java.lang.Object)"
              },
              "startActivityForResult": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
              },
              "shouldShowRequestPermissionRationale": {
                "!type": "fn(permission: string) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getResources()"
              }
            }
          },
          "NavUtils": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html",
            "PARENT_ACTIVITY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#PARENT_ACTIVITY"
            },
            "navigateUpFromSameTask": {
              "!type": "fn(sourceActivity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#navigateUpFromSameTask(android.app.Activity)"
            },
            "getParentActivityIntent": {
              "!type": "fn(sourceActivity: +android.app.Activity) -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityIntent(android.app.Activity)"
            },
            "navigateUpTo": {
              "!type": "fn(sourceActivity: +android.app.Activity, upIntent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#navigateUpTo(android.app.Activity, android.content.Intent)"
            },
            "getParentActivityName": {
              "!type": "fn(sourceActivity: +android.app.Activity) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityName(android.app.Activity)"
            },
            "shouldUpRecreateTask": {
              "!type": "fn(sourceActivity: +android.app.Activity, targetIntent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NavUtils.html#shouldUpRecreateTask(android.app.Activity, android.content.Intent)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "NotificationCompatBase": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.html",
            "!type": "fn()",
            "Action": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "getTitle": {
                  "!type": "fn() -> +java.lang.CharSequence",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html#getTitle()"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getRemoteInputs": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html#getRemoteInputs()"
                },
                "getActionIntent": {
                  "!type": "fn() -> +android.app.PendingIntent",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html#getActionIntent()"
                },
                "getIcon": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html#getIcon()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getExtras": {
                  "!type": "fn() -> +android.os.Bundle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.Action.html#getExtras()"
                }
              }
            },
            "UnreadConversation": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatBase.UnreadConversation.html",
              "!type": "fn()",
              "prototype": {
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                }
              }
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ListFragment": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html",
            "!type": "fn()",
            "instantiate": {
              "!type": "fn(context: +android.content.Context, fname: string) -> +android.support.v4.app.Fragment",
              "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
            },
            "prototype": {
              "getReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReturnTransition()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hashCode()"
              },
              "isResumed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isResumed()"
              },
              "setSharedElementReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementReturnTransition(java.lang.Object)"
              },
              "getSelectedItemPosition": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#getSelectedItemPosition()"
              },
              "onListItemClick": {
                "!type": "fn(l: +android.widget.ListView, v: +android.view.View, position: number, id: +java.lang.Long) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#onListItemClick(android.widget.ListView, android.view.View, int, long)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "onCreateOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
              },
              "onResume": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onResume()"
              },
              "getReenterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getReenterTransition()"
              },
              "getString": {
                "!type": "fn(resId: number) -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getString(int)"
              },
              "hasOptionsMenu": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#hasOptionsMenu()"
              },
              "onDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroy()"
              },
              "setEnterSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "setEmptyText": {
                "!type": "fn(text: +java.lang.CharSequence) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#setEmptyText(java.lang.CharSequence)"
              },
              "onContextItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
              },
              "onDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDetach()"
              },
              "getTag": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTag()"
              },
              "isRemoving": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isRemoving()"
              },
              "getFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getFragmentManager()"
              },
              "setHasOptionsMenu": {
                "!type": "fn(hasMenu: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setHasOptionsMenu(boolean)"
              },
              "setEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setEnterTransition(java.lang.Object)"
              },
              "getListView": {
                "!type": "fn() -> +android.widget.ListView",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#getListView()"
              },
              "getParentFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getParentFragment()"
              },
              "setInitialSavedState": {
                "!type": "fn(state: +android.support.v4.app.Fragment.SavedState) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setInitialSavedState(android.support.v4.app.Fragment.SavedState)"
              },
              "getId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getId()"
              },
              "getSharedElementReturnTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementReturnTransition()"
              },
              "getAllowEnterTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowEnterTransitionOverlap()"
              },
              "onPrepareOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
              },
              "onCreateContextMenu": {
                "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
              },
              "setMenuVisibility": {
                "!type": "fn(menuVisible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setMenuVisibility(boolean)"
              },
              "isDetached": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isDetached()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#equals(java.lang.Object)"
              },
              "onViewCreated": {
                "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#onViewCreated(android.view.View, android.os.Bundle)"
              },
              "getSharedElementEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getSharedElementEnterTransition()"
              },
              "getEnterTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getEnterTransition()"
              },
              "setUserVisibleHint": {
                "!type": "fn(isVisibleToUser: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setUserVisibleHint(boolean)"
              },
              "onCreate": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreate(android.os.Bundle)"
              },
              "onLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onLowMemory()"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getContext()"
              },
              "getExitTransition": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getExitTransition()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "setAllowEnterTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
              },
              "onActivityResult": {
                "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
              },
              "onCreateAnimation": {
                "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.view.animation.Animation",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateAnimation(int, boolean, int)"
              },
              "isHidden": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isHidden()"
              },
              "onViewStateRestored": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
              },
              "onOptionsMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
              },
              "onRequestPermissionsResult": {
                "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
              },
              "getView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getView()"
              },
              "onOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
              },
              "setArguments": {
                "!type": "fn(args: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setArguments(android.os.Bundle)"
              },
              "getText": {
                "!type": "fn(resId: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getText(int)"
              },
              "onStop": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStop()"
              },
              "isInLayout": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isInLayout()"
              },
              "setSharedElementEnterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setSharedElementEnterTransition(java.lang.Object)"
              },
              "onSaveInstanceState": {
                "!type": "fn(outState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onSaveInstanceState(android.os.Bundle)"
              },
              "startActivity": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivity(android.content.Intent)"
              },
              "getSelectedItemId": {
                "!type": "fn() -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#getSelectedItemId()"
              },
              "setListShownNoAnimation": {
                "!type": "fn(shown: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#setListShownNoAnimation(boolean)"
              },
              "getTargetFragment": {
                "!type": "fn() -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetFragment()"
              },
              "getArguments": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getArguments()"
              },
              "isAdded": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isAdded()"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "onStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStart()"
              },
              "setListShown": {
                "!type": "fn(shown: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#setListShown(boolean)"
              },
              "setExitTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitTransition(java.lang.Object)"
              },
              "onDestroyView": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#onDestroyView()"
              },
              "onCreateView": {
                "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
              },
              "getUserVisibleHint": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getUserVisibleHint()"
              },
              "getLoaderManager": {
                "!type": "fn() -> +android.support.v4.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLoaderManager()"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "unregisterForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#unregisterForContextMenu(android.view.View)"
              },
              "getRetainInstance": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getRetainInstance()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#toString()"
              },
              "getHost": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getHost()"
              },
              "requestPermissions": {
                "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#requestPermissions(java.lang.String[], int)"
              },
              "onInflate": {
                "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)"
              },
              "registerForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#registerForContextMenu(android.view.View)"
              },
              "getActivity": {
                "!type": "fn() -> +android.support.v4.app.FragmentActivity",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getActivity()"
              },
              "getAllowReturnTransitionOverlap": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getAllowReturnTransitionOverlap()"
              },
              "setTargetFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setTargetFragment(android.support.v4.app.Fragment, int)"
              },
              "setListAdapter": {
                "!type": "fn(adapter: +android.widget.ListAdapter) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#setListAdapter(android.widget.ListAdapter)"
              },
              "onDestroyOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyOptionsMenu()"
              },
              "setSelection": {
                "!type": "fn(position: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#setSelection(int)"
              },
              "onActivityCreated": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityCreated(android.os.Bundle)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setExitSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "onHiddenChanged": {
                "!type": "fn(hidden: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onHiddenChanged(boolean)"
              },
              "setReturnTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReturnTransition(java.lang.Object)"
              },
              "onAttach": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onAttach(android.content.Context)"
              },
              "isMenuVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isMenuVisible()"
              },
              "getListAdapter": {
                "!type": "fn() -> +android.widget.ListAdapter",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ListFragment.html#getListAdapter()"
              },
              "setRetainInstance": {
                "!type": "fn(retain: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setRetainInstance(boolean)"
              },
              "setAllowReturnTransitionOverlap": {
                "!type": "fn(allow: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
              },
              "getTargetRequestCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetRequestCode()"
              },
              "getChildFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getChildFragmentManager()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getLayoutInflater": {
                "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
              },
              "isVisible": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#isVisible()"
              },
              "onPause": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPause()"
              },
              "setReenterTransition": {
                "!type": "fn(transition: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#setReenterTransition(java.lang.Object)"
              },
              "startActivityForResult": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
              },
              "shouldShowRequestPermissionRationale": {
                "!type": "fn(permission: string) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/support/v4/app/Fragment.html#getResources()"
              }
            }
          },
          "ServiceCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ServiceCompat.html",
            "START_STICKY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ServiceCompat.html#START_STICKY"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ActivityCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html",
            "!type": "fn()",
            "getObbDirs": {
              "!type": "fn(context: +android.content.Context) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getObbDirs(android.content.Context)"
            },
            "setEnterSharedElementCallback": {
              "!type": "fn(activity: +android.app.Activity, callback: +android.support.v4.app.SharedElementCallback) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#setEnterSharedElementCallback(android.app.Activity, android.support.v4.app.SharedElementCallback)"
            },
            "getDrawable": {
              "!type": "fn(context: +android.content.Context, id: number) -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getDrawable(android.content.Context, int)"
            },
            "getExternalFilesDirs": {
              "!type": "fn(context: +android.content.Context, type: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getExternalFilesDirs(android.content.Context, java.lang.String)"
            },
            "getColor": {
              "!type": "fn(context: +android.content.Context, id: number) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getColor(android.content.Context, int)"
            },
            "requestPermissions": {
              "!type": "fn(activity: +android.app.Activity, permissions: +java.newArray, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#requestPermissions(android.app.Activity, java.lang.String[], int)"
            },
            "checkSelfPermission": {
              "!type": "fn(context: +android.content.Context, permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#checkSelfPermission(android.content.Context, java.lang.String)"
            },
            "startActivityForResult": {
              "!type": "fn(activity: +android.app.Activity, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#startActivityForResult(android.app.Activity, android.content.Intent, int, android.os.Bundle)"
            },
            "postponeEnterTransition": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#postponeEnterTransition(android.app.Activity)"
            },
            "setExitSharedElementCallback": {
              "!type": "fn(activity: +android.app.Activity, callback: +android.support.v4.app.SharedElementCallback) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#setExitSharedElementCallback(android.app.Activity, android.support.v4.app.SharedElementCallback)"
            },
            "startActivities": {
              "!type": "fn(context: +android.content.Context, intents: +java.newArray) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#startActivities(android.content.Context, android.content.Intent[])"
            },
            "finishAffinity": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#finishAffinity(android.app.Activity)"
            },
            "invalidateOptionsMenu": {
              "!type": "fn(activity: +android.app.Activity) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#invalidateOptionsMenu(android.app.Activity)"
            },
            "startActivity": {
              "!type": "fn(activity: +android.app.Activity, intent: +android.content.Intent, options: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#startActivity(android.app.Activity, android.content.Intent, android.os.Bundle)"
            },
            "getColorStateList": {
              "!type": "fn(context: +android.content.Context, id: number) -> +android.content.res.ColorStateList",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getColorStateList(android.content.Context, int)"
            },
            "finishAfterTransition": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#finishAfterTransition(android.app.Activity)"
            },
            "startPostponedEnterTransition": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#startPostponedEnterTransition(android.app.Activity)"
            },
            "getExternalCacheDirs": {
              "!type": "fn(context: +android.content.Context) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getExternalCacheDirs(android.content.Context)"
            },
            "shouldShowRequestPermissionRationale": {
              "!type": "fn(activity: +android.app.Activity, permission: string) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getNoBackupFilesDir": {
                "!type": "fn(context: +android.content.Context) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getNoBackupFilesDir(android.content.Context)"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getReferrer": {
                "!type": "fn(activity: +android.app.Activity) -> +android.net.Uri",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html#getReferrer(android.app.Activity)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getCodeCacheDir": {
                "!type": "fn(context: +android.content.Context) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getCodeCacheDir(android.content.Context)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "FragmentManager": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html",
            "!type": "fn()",
            "POP_BACK_STACK_INCLUSIVE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#POP_BACK_STACK_INCLUSIVE"
            },
            "enableDebugLogging": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#enableDebugLogging(boolean)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "putFragment": {
                "!type": "fn(bundle: +android.os.Bundle, key: string, fragment: +android.support.v4.app.Fragment) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#putFragment(android.os.Bundle, java.lang.String, android.support.v4.app.Fragment)"
              },
              "saveFragmentInstanceState": {
                "!type": "fn(f: +android.support.v4.app.Fragment) -> +android.support.v4.app.Fragment.SavedState",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#saveFragmentInstanceState(android.support.v4.app.Fragment)"
              },
              "getFragments": {
                "!type": "fn() -> +java.util.List",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#getFragments()"
              },
              "isDestroyed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#isDestroyed()"
              },
              "popBackStackImmediate": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#popBackStackImmediate()"
              },
              "popBackStack": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#popBackStack()"
              },
              "executePendingTransactions": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#executePendingTransactions()"
              },
              "addOnBackStackChangedListener": {
                "!type": "fn(listener: +android.support.v4.app.FragmentManager.OnBackStackChangedListener) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#addOnBackStackChangedListener(android.support.v4.app.FragmentManager.OnBackStackChangedListener)"
              },
              "getBackStackEntryAt": {
                "!type": "fn(index: number) -> +android.support.v4.app.FragmentManager.BackStackEntry",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#getBackStackEntryAt(int)"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "openTransaction": {
                "!type": "fn() -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#openTransaction()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "findFragmentByTag": {
                "!type": "fn(tag: string) -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#findFragmentByTag(java.lang.String)"
              },
              "removeOnBackStackChangedListener": {
                "!type": "fn(listener: +android.support.v4.app.FragmentManager.OnBackStackChangedListener) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#removeOnBackStackChangedListener(android.support.v4.app.FragmentManager.OnBackStackChangedListener)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "beginTransaction": {
                "!type": "fn() -> +android.support.v4.app.FragmentTransaction",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#beginTransaction()"
              },
              "getBackStackEntryCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#getBackStackEntryCount()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "findFragmentById": {
                "!type": "fn(id: number) -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#findFragmentById(int)"
              },
              "getFragment": {
                "!type": "fn(bundle: +android.os.Bundle, key: string) -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentManager.html#getFragment(android.os.Bundle, java.lang.String)"
              }
            }
          },
          "FragmentContainer": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentContainer.html",
            "!type": "fn()",
            "prototype": {
              "onHasView": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentContainer.html#onHasView()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "onFindViewById": {
                "!type": "fn(id: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentContainer.html#onFindViewById(int)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "FragmentTabHost": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html",
            "!type": "fn(context: +android.content.Context)",
            "OVER_SCROLL_ALWAYS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
            },
            "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
            },
            "LAYOUT_DIRECTION_INHERIT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
            },
            "ACCESSIBILITY_LIVE_REGION_POLITE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
            },
            "SCROLL_INDICATOR_TOP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
            },
            "TEXT_DIRECTION_RTL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
            },
            "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
            },
            "LAYOUT_MODE_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
            },
            "ROTATION_Y": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
            },
            "ROTATION_X": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
            },
            "STATUS_BAR_HIDDEN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
            },
            "SCROLL_AXIS_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
            },
            "TEXT_ALIGNMENT_VIEW_START": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
            },
            "TRANSLATION_Z": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
            },
            "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
            },
            "FOCUS_BLOCK_DESCENDANTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
            },
            "TRANSLATION_Y": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
            },
            "INVISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
            },
            "TRANSLATION_X": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
            },
            "SCROLL_INDICATOR_LEFT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
            },
            "NO_ID": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
            },
            "LAYOUT_DIRECTION_RTL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
            },
            "SOUND_EFFECTS_ENABLED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
            },
            "TEXT_DIRECTION_LTR": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
            },
            "ALPHA": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
            },
            "LAYER_TYPE_HARDWARE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
            },
            "TEXT_DIRECTION_LOCALE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
            },
            "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
            },
            "DRAWING_CACHE_QUALITY_HIGH": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
            },
            "FOCUS_LEFT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
            },
            "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
            },
            "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
            },
            "LAYER_TYPE_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
            },
            "TEXT_ALIGNMENT_INHERIT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
            },
            "STATUS_BAR_DISABLE_BACK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
            },
            "PERSISTENT_ALL_CACHES": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
            },
            "FOCUSABLES_ALL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
            },
            "SCROLL_AXIS_VERTICAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
            },
            "STATUS_BAR_TRANSLUCENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
            },
            "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
            },
            "DEBUG_DRAW": {
              "!type": "bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
            },
            "SCALE_Y": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
            },
            "SCALE_X": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
            },
            "SCROLLBAR_POSITION_LEFT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
            },
            "STATUS_BAR_UNHIDE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
            },
            "LAYOUT_MODE_OPTICAL_BOUNDS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
            },
            "LAYOUT_DIRECTION_LTR": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
            },
            "NAVIGATION_BAR_TRANSIENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
            },
            "GONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
            },
            "SCROLLBARS_INSIDE_INSET": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
            },
            "FOCUS_BACKWARD": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
            },
            "FOCUS_AFTER_DESCENDANTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
            },
            "STATUS_BAR_DISABLE_SEARCH": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
            },
            "STATUS_BAR_DISABLE_HOME": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
            },
            "FOCUSABLES_TOUCH_MODE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
            },
            "SYSTEM_UI_LAYOUT_FLAGS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
            },
            "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
            },
            "HAPTIC_FEEDBACK_ENABLED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
            },
            "STATUS_BAR_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
            },
            "FOCUS_FORWARD": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
            },
            "LAYOUT_MODE_CLIP_BOUNDS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
            },
            "DRAG_FLAG_GLOBAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
            },
            "SYSTEM_UI_FLAG_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
            },
            "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
            },
            "SYSTEM_UI_FLAG_IMMERSIVE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
            },
            "STATUS_BAR_TRANSIENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
            },
            "MEASURED_STATE_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
            },
            "ACCESSIBILITY_LIVE_REGION_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
            },
            "SCROLLBARS_OUTSIDE_OVERLAY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
            },
            "TEXT_ALIGNMENT_GRAVITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
            },
            "DRAWING_CACHE_QUALITY_AUTO": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
            },
            "TEXT_ALIGNMENT_VIEW_END": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
            },
            "Z": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#Z"
            },
            "Y": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#Y"
            },
            "X": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#X"
            },
            "SCROLL_INDICATOR_START": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
            },
            "VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
            },
            "TEXT_ALIGNMENT_TEXT_START": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
            },
            "SCROLL_AXIS_HORIZONTAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
            },
            "IMPORTANT_FOR_ACCESSIBILITY_NO": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
            },
            "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
            },
            "OVER_SCROLL_IF_CONTENT_SCROLLS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
            },
            "FOCUS_RIGHT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
            },
            "OVER_SCROLL_NEVER": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
            },
            "TEXT_DIRECTION_FIRST_STRONG_RTL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
            },
            "SCROLL_INDICATOR_BOTTOM": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
            },
            "NAVIGATION_BAR_TRANSLUCENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
            },
            "SYSTEM_UI_TRANSPARENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
            },
            "SCREEN_STATE_ON": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
            },
            "PERSISTENT_ANIMATION_CACHE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
            },
            "TEXT_DIRECTION_INHERIT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
            },
            "IMPORTANT_FOR_ACCESSIBILITY_YES": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
            },
            "SCROLLBARS_INSIDE_OVERLAY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
            },
            "ROTATION": {
              "!type": "+android.util.Property",
              "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
            },
            "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
            },
            "SCROLL_INDICATOR_END": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
            },
            "NAVIGATION_BAR_UNHIDE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
            },
            "MEASURED_HEIGHT_STATE_SHIFT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
            },
            "TEXT_DIRECTION_FIRST_STRONG_LTR": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
            },
            "KEEP_SCREEN_ON": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
            },
            "TEXT_DIRECTION_FIRST_STRONG": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
            },
            "STATUS_BAR_DISABLE_CLOCK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
            },
            "STATUS_BAR_DISABLE_EXPAND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
            },
            "FOCUS_BEFORE_DESCENDANTS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
            },
            "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
            },
            "SCREEN_STATE_OFF": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
            },
            "TEXT_ALIGNMENT_TEXT_END": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
            },
            "SYSTEM_UI_FLAG_FULLSCREEN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
            },
            "FIND_VIEWS_WITH_TEXT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
            },
            "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
            },
            "PERSISTENT_NO_CACHE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
            },
            "STATUS_BAR_DISABLE_RECENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
            },
            "STATUS_BAR_DISABLE_SYSTEM_INFO": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
            },
            "DRAWING_CACHE_QUALITY_LOW": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
            },
            "PERSISTENT_SCROLLING_CACHE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
            },
            "SCROLL_INDICATOR_RIGHT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
            },
            "MEASURED_STATE_TOO_SMALL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
            },
            "TEXT_ALIGNMENT_CENTER": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
            },
            "SCROLLBARS_OUTSIDE_INSET": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
            },
            "TEXT_DIRECTION_ANY_RTL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
            },
            "LAYER_TYPE_SOFTWARE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
            },
            "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
            },
            "MEASURED_SIZE_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
            },
            "mDebugViewAttributes": {
              "!type": "bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
            },
            "SCROLLBAR_POSITION_RIGHT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
            },
            "LAYOUT_DIRECTION_LOCALE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
            },
            "LAYOUT_DIRECTION_UNDEFINED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
            },
            "SCROLLBAR_POSITION_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
            },
            "RECENT_APPS_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
            },
            "DEBUG_LAYOUT_PROPERTY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
            },
            "SYSTEM_UI_CLEARABLE_FLAGS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
            },
            "FOCUS_UP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
            },
            "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
            },
            "SYSTEM_UI_FLAG_LOW_PROFILE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
            },
            "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
            },
            "FOCUS_DOWN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
            },
            "getDefaultSize": {
              "!type": "fn(size: number, measureSpec: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
            },
            "combineMeasuredStates": {
              "!type": "fn(curState: number, newState: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
            },
            "getChildMeasureSpec": {
              "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
            },
            "resolveSizeAndState": {
              "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
            },
            "resolveSize": {
              "!type": "fn(size: number, measureSpec: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
            },
            "generateViewId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
            },
            "isLayoutModeOptical": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
            },
            "inflate": {
              "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
            },
            "prototype": {
              "setFitsSystemWindows": {
                "!type": "fn(fitSystemWindows: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
              },
              "dispatchSystemUiVisibilityChanged": {
                "!type": "fn(visible: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "isScrollbarFadingEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
              },
              "setPressed": {
                "!type": "fn(pressed: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
              },
              "startAnimation": {
                "!type": "fn(animation: +android.view.animation.Animation) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
              },
              "getDrawingTime": {
                "!type": "fn() -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
              },
              "setHorizontalScrollBarEnabled": {
                "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
              },
              "setTagInternal": {
                "!type": "fn(key: number, tag: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
              },
              "removeCallbacks": {
                "!type": "fn(action: +java.lang.Runnable) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
              },
              "isShown": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
              },
              "onTouchEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)"
              },
              "cancelPendingInputEvents": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
              },
              "setTransitionVisibility": {
                "!type": "fn(visibility: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
              },
              "getClipChildren": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
              },
              "setEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
              },
              "setVerticalScrollBarEnabled": {
                "!type": "fn(verticalScrollBarEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
              },
              "getRawLayoutDirection": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
              },
              "setRight": {
                "!type": "fn(right: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
              },
              "getAccessibilityClassName": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getAccessibilityClassName()"
              },
              "getNextFocusDownId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
              },
              "onRequestSendAccessibilityEventInternal": {
                "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
              },
              "getTransitionName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
              },
              "getTop": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
              },
              "dispatchNestedFling": {
                "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
              },
              "onKeyUp": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
              },
              "setScrollContainer": {
                "!type": "fn(isScrollContainer: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
              },
              "getVisibility": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
              },
              "requestFitSystemWindows": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
              },
              "setAccessibilitySelection": {
                "!type": "fn(start: number, end: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
              },
              "getLeft": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
              },
              "dispatchWindowFocusChanged": {
                "!type": "fn(hasFocus: bool) -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#dispatchWindowFocusChanged(boolean)"
              },
              "findViewByPredicateInsideOut": {
                "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
              },
              "getForeground": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
              },
              "requestChildRectangleOnScreen": {
                "!type": "fn(child: +android.view.View, rectangle: +android.graphics.Rect, immediate: bool) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
              },
              "performAccessibilityActionInternal": {
                "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
              },
              "getClipToOutline": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
              },
              "setMeasureAllChildren": {
                "!type": "fn(measureAll: bool) -> void",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#setMeasureAllChildren(boolean)"
              },
              "isSelected": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
              },
              "scrollBy": {
                "!type": "fn(x: number, y: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
              },
              "hasNestedScrollingParent": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
              },
              "getGlobalVisibleRect": {
                "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
              },
              "setKeepScreenOn": {
                "!type": "fn(keepScreenOn: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
              },
              "setTranslationZ": {
                "!type": "fn(translationZ: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
              },
              "setTranslationY": {
                "!type": "fn(translationY: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
              },
              "setTranslationX": {
                "!type": "fn(translationX: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
              },
              "setDuplicateParentStateEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
              },
              "getTabContentView": {
                "!type": "fn() -> +android.widget.FrameLayout",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getTabContentView()"
              },
              "onFilterTouchEventForSecurity": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
              },
              "setTop": {
                "!type": "fn(top: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
              },
              "getHardwareRenderer": {
                "!type": "fn() -> +android.view.HardwareRenderer",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
              },
              "onInterceptHoverEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
              },
              "getLocationInWindow": {
                "!type": "fn(location: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
              },
              "pointInView": {
                "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
              },
              "setAlpha": {
                "!type": "fn(alpha: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
              },
              "getConsiderGoneChildrenWhenMeasuring": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#getConsiderGoneChildrenWhenMeasuring()"
              },
              "setAnimationMatrix": {
                "!type": "fn(matrix: +android.graphics.Matrix) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
              },
              "getApplicationWindowToken": {
                "!type": "fn() -> +android.os.IBinder",
                "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
              },
              "resetRtlProperties": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
              },
              "getMeasuredHeightAndState": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
              },
              "getDrawingCacheBackgroundColor": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
              },
              "resolveRtlPropertiesIfNeeded": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
              },
              "transformMatrixToGlobal": {
                "!type": "fn(m: +android.graphics.Matrix) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
              },
              "setClickable": {
                "!type": "fn(clickable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
              },
              "offsetLeftAndRight": {
                "!type": "fn(offset: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
              },
              "getFilterTouchesWhenObscured": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
              },
              "performAccessibilityAction": {
                "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
              },
              "isHorizontalFadingEdgeEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
              },
              "setBackgroundTintMode": {
                "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
              },
              "createContextMenu": {
                "!type": "fn(menu: +android.view.ContextMenu) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
              },
              "getCameraDistance": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
              },
              "isPressed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
              },
              "getScrollBarStyle": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
              },
              "saveHierarchyState": {
                "!type": "fn(container: +android.util.SparseArray) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
              },
              "setSoundEffectsEnabled": {
                "!type": "fn(soundEffectsEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
              },
              "setLayoutMode": {
                "!type": "fn(layoutMode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
              },
              "performHapticFeedback": {
                "!type": "fn(feedbackConstant: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
              },
              "onKeyLongPress": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
              },
              "getLayoutMode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
              },
              "getWindowSystemUiVisibility": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
              },
              "getPersistentDrawingCache": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
              },
              "animate": {
                "!type": "fn() -> +android.view.ViewPropertyAnimator",
                "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
              },
              "addView": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)"
              },
              "getOnFocusChangeListener": {
                "!type": "fn() -> +android.view.View.OnFocusChangeListener",
                "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
              },
              "isPaddingRelative": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
              },
              "hasOverlappingRendering": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
              },
              "isEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
              },
              "setBottom": {
                "!type": "fn(bottom: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
              },
              "isTextAlignmentInherited": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
              },
              "onHoverChanged": {
                "!type": "fn(hovered: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
              },
              "sendAccessibilityEventInternal": {
                "!type": "fn(eventType: number) -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#sendAccessibilityEventInternal(int)"
              },
              "setOnTabChangedListener": {
                "!type": "fn(l: +android.widget.TabHost.OnTabChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html#setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)"
              },
              "canHaveDisplayList": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
              },
              "dispatchStartTemporaryDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
              },
              "onResolveDrawables": {
                "!type": "fn(layoutDirection: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
              },
              "setLongClickable": {
                "!type": "fn(longClickable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
              },
              "dispatchNestedScroll": {
                "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
              },
              "getScrollBarFadeDuration": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
              },
              "removeAllViewsInLayout": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
              },
              "getHeight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
              },
              "setOnKeyListener": {
                "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
              },
              "sendAccessibilityEventUnchecked": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
              },
              "onCreateInputConnection": {
                "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
                "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
              },
              "performContextClick": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
              },
              "isHovered": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
              },
              "getScrollBarDefaultDelayBeforeFade": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
              },
              "setVerticalScrollbarPosition": {
                "!type": "fn(position: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
              },
              "setVerticalFadingEdgeEnabled": {
                "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
              },
              "setVisibility": {
                "!type": "fn(visibility: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
              },
              "suppressLayout": {
                "!type": "fn(suppress: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
              },
              "getTranslationZ": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
              },
              "getKeepScreenOn": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
              },
              "getAnimation": {
                "!type": "fn() -> +android.view.animation.Animation",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
              },
              "getTranslationY": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
              },
              "getTranslationX": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
              },
              "getHandler": {
                "!type": "fn() -> +android.os.Handler",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
              },
              "setForeground": {
                "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
              },
              "onKeyShortcut": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
              },
              "dispatchWindowVisibilityChanged": {
                "!type": "fn(visibility: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
              },
              "setForegroundTintList": {
                "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
              },
              "shouldDelayChildPressedState": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#shouldDelayChildPressedState()"
              },
              "onInitializeAccessibilityEventInternal": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
              },
              "postOnAnimationDelayed": {
                "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
              },
              "postInvalidateOnAnimation": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
              },
              "resetResolvedLayoutDirection": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
              },
              "getInverseMatrix": {
                "!type": "fn() -> +android.graphics.Matrix",
                "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
              },
              "setSystemUiVisibility": {
                "!type": "fn(visibility: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
              },
              "isScrollContainer": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
              },
              "onNestedScrollAccepted": {
                "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
              },
              "getLabelFor": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
              },
              "isSaveEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
              },
              "onNestedPreFling": {
                "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
              },
              "setRotationY": {
                "!type": "fn(rotationY: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
              },
              "setRotationX": {
                "!type": "fn(rotationX: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
              },
              "findViewWithTag": {
                "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
              },
              "getOutlineProvider": {
                "!type": "fn() -> +android.view.ViewOutlineProvider",
                "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
              },
              "setDisabledSystemUiVisibility": {
                "!type": "fn(flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
              },
              "dispatchWindowSystemUiVisiblityChanged": {
                "!type": "fn(visible: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
              },
              "onStartTemporaryDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
              },
              "invalidate": {
                "!type": "fn(dirty: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
              },
              "getForegroundGravity": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
              },
              "toGlobalMotionEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
              },
              "dispatchTrackballEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
              },
              "clearChildFocus": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
              },
              "setAccessibilityDelegate": {
                "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "hackTurnOffWindowResizeAnim": {
                "!type": "fn(off: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
              },
              "onDrawForeground": {
                "!type": "fn(canvas: +android.graphics.Canvas) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
              },
              "setElevation": {
                "!type": "fn(elevation: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
              },
              "onNestedScroll": {
                "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
              },
              "isMotionEventSplittingEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
              },
              "notifyViewAccessibilityStateChangedIfNeeded": {
                "!type": "fn(changeType: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
              },
              "getMeasuredWidthAndState": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
              },
              "setLeft": {
                "!type": "fn(left: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
              },
              "setDrawingCacheBackgroundColor": {
                "!type": "fn(color: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
              },
              "resolvePadding": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
              },
              "isLaidOut": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
              },
              "outputDirtyFlags": {
                "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
              },
              "hasFocusable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
              },
              "getWindowVisibleDisplayFrame": {
                "!type": "fn(outRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
              },
              "setDrawingCacheQuality": {
                "!type": "fn(quality: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
              },
              "onFinishTemporaryDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
              },
              "isNestedScrollingEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
              },
              "getOpticalInsets": {
                "!type": "fn() -> +android.graphics.Insets",
                "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
              },
              "setOnFocusChangeListener": {
                "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
              },
              "setOnDragListener": {
                "!type": "fn(l: +android.view.View.OnDragListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
              },
              "cancelLongPress": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
              },
              "getMeasuredState": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
              },
              "setHorizontalFadingEdgeEnabled": {
                "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
              },
              "dispatchDrawableHotspotChanged": {
                "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
              },
              "dispatchSetSelected": {
                "!type": "fn(selected: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
              },
              "onDragEvent": {
                "!type": "fn(event: +android.view.DragEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
              },
              "getCurrentTabTag": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getCurrentTabTag()"
              },
              "requestApplyInsets": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
              },
              "setScrollIndicators": {
                "!type": "fn(indicators: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
              },
              "onStopNestedScroll": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
              },
              "setScaleY": {
                "!type": "fn(scaleY: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
              },
              "setScaleX": {
                "!type": "fn(scaleX: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
              },
              "startActionMode": {
                "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
                "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
              },
              "getChildCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
              },
              "setNextFocusForwardId": {
                "!type": "fn(nextFocusForwardId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
              },
              "setAccessibilityTraversalBefore": {
                "!type": "fn(beforeId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
              },
              "findFocus": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
              },
              "getTag": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
              },
              "setFocusable": {
                "!type": "fn(focusable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
              },
              "isVerticalScrollBarEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
              },
              "getNextFocusLeftId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
              },
              "onStartNestedScroll": {
                "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
              },
              "isVerticalFadingEdgeEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
              },
              "onKeyMultiple": {
                "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
              },
              "generateLayoutParams": {
                "!type": "fn(attrs: +android.util.AttributeSet) -> +android.widget.FrameLayout.LayoutParams",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#generateLayoutParams(android.util.AttributeSet)"
              },
              "setTransitionAlpha": {
                "!type": "fn(alpha: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
              },
              "getMeasuredWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
              },
              "getLocationOnScreen": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
              },
              "encode": {
                "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
              },
              "getTransientView": {
                "!type": "fn(position: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
              },
              "addChildrenForAccessibility": {
                "!type": "fn(outChildren: +java.util.ArrayList) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
              },
              "onActivityResult": {
                "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
              },
              "isTextDirectionResolved": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
              },
              "setRotation": {
                "!type": "fn(rotation: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
              },
              "getTransientViewCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
              },
              "resolveLayoutDirection": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
              },
              "getPaddingRight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
              },
              "getZ": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
              },
              "getNestedScrollAxes": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
              },
              "getY": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
              },
              "getX": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
              },
              "setPadding": {
                "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
              },
              "setLayoutAnimationListener": {
                "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
              },
              "damageChildDeferred": {
                "!type": "fn(child: +android.view.View) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
              },
              "setForegroundTintMode": {
                "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
              },
              "gatherTransparentRegion": {
                "!type": "fn(region: +android.graphics.Region) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
              },
              "showContextMenu": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
              },
              "isHorizontalScrollBarEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
              },
              "onCheckIsTextEditor": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
              },
              "setLayoutTransition": {
                "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
              },
              "setOnSystemUiVisibilityChangeListener": {
                "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
              },
              "setBackgroundColor": {
                "!type": "fn(color: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
              },
              "captureTransitioningViews": {
                "!type": "fn(transitioningViews: +java.util.List) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
              },
              "setOnHierarchyChangeListener": {
                "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
              },
              "setNextFocusRightId": {
                "!type": "fn(nextFocusRightId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
              },
              "makeOptionalFitsSystemWindows": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
              },
              "setTag": {
                "!type": "fn(tag: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
              },
              "onInitializeAccessibilityNodeInfo": {
                "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
              },
              "willNotDraw": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
              },
              "setCameraDistance": {
                "!type": "fn(distance: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
              },
              "removeViewInLayout": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
              },
              "setTransitionGroup": {
                "!type": "fn(isTransitionGroup: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
              },
              "hasWindowFocus": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "startActionModeForChild": {
                "!type": "fn(originalView: +android.view.View, callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback)"
              },
              "getPaddingEnd": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
              },
              "getRootWindowInsets": {
                "!type": "fn() -> +android.view.WindowInsets",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
              },
              "onNestedPreScroll": {
                "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
              },
              "setContentDescription": {
                "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
              },
              "onWindowFocusChanged": {
                "!type": "fn(hasWindowFocus: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
              },
              "getRootView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
              },
              "addOnLayoutChangeListener": {
                "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
              },
              "getParentForAccessibility": {
                "!type": "fn() -> +android.view.ViewParent",
                "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
              },
              "isDirty": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
              },
              "requestDisallowInterceptTouchEvent": {
                "!type": "fn(disallowIntercept: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
              },
              "focusSearch": {
                "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
              },
              "findNamedViews": {
                "!type": "fn(namedElements: +java.util.Map) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
              },
              "post": {
                "!type": "fn(action: +java.lang.Runnable) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
              },
              "announceForAccessibility": {
                "!type": "fn(text: +java.lang.CharSequence) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
              },
              "getTouchscreenBlocksFocus": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
              },
              "getRawTextDirection": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
              },
              "canResolveTextDirection": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
              },
              "setClipToOutline": {
                "!type": "fn(clipToOutline: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
              },
              "getFitsSystemWindows": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
              },
              "getRawTextAlignment": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
              },
              "getDescendantFocusability": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
              },
              "isAlwaysDrawnWithCacheEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
              },
              "buildLayer": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
              },
              "getOutsets": {
                "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
              },
              "setTransitionName": {
                "!type": "fn(transitionName: string) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
              },
              "getRight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
              },
              "getNextFocusUpId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
              },
              "onWindowSystemUiVisibilityChanged": {
                "!type": "fn(visible: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
              },
              "onScreenStateChanged": {
                "!type": "fn(screenState: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
              },
              "setZ": {
                "!type": "fn(z: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
              },
              "setY": {
                "!type": "fn(y: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
              },
              "setX": {
                "!type": "fn(x: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
              },
              "setPivotY": {
                "!type": "fn(pivotY: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
              },
              "getPaddingBottom": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
              },
              "setPivotX": {
                "!type": "fn(pivotX: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
              },
              "setOnContextClickListener": {
                "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
              },
              "setScrollBarFadeDuration": {
                "!type": "fn(scrollBarFadeDuration: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
              },
              "setActivated": {
                "!type": "fn(activated: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
              },
              "getTabWidget": {
                "!type": "fn() -> +android.widget.TabWidget",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getTabWidget()"
              },
              "getDrawingCacheQuality": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
              },
              "getBottom": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
              },
              "setPersistentDrawingCache": {
                "!type": "fn(drawingCacheToKeep: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
              },
              "includeForAccessibility": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
              },
              "startLayoutAnimation": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
              },
              "getId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
              },
              "getLayoutAnimationListener": {
                "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
              },
              "resolveTextDirection": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
              },
              "setOnApplyWindowInsetsListener": {
                "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
              },
              "setStateListAnimator": {
                "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
              },
              "canScrollVertically": {
                "!type": "fn(direction: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
              },
              "setContextClickable": {
                "!type": "fn(contextClickable: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
              },
              "updateDisplayListIfDirty": {
                "!type": "fn() -> +android.view.RenderNode",
                "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
              },
              "resolveTextAlignment": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
              },
              "dispatchKeyEventPreIme": {
                "!type": "fn(event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
              },
              "removeTransientView": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
              },
              "setScrollY": {
                "!type": "fn(value: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
              },
              "setScrollX": {
                "!type": "fn(value: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
              },
              "setWillNotCacheDrawing": {
                "!type": "fn(willNotCacheDrawing: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
              },
              "setHapticFeedbackEnabled": {
                "!type": "fn(hapticFeedbackEnabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
              },
              "performLongClick": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performLongClick()"
              },
              "onHoverEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
              },
              "onKeyDown": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
              },
              "requestFocus": {
                "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestFocus(int, android.graphics.Rect)"
              },
              "getMinimumHeight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
              },
              "dispatchPopulateAccessibilityEvent": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
              },
              "setSelected": {
                "!type": "fn(selected: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
              },
              "hasTransientState": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
              },
              "setAddStatesFromChildren": {
                "!type": "fn(addsStates: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
              },
              "postOnAnimation": {
                "!type": "fn(action: +java.lang.Runnable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
              },
              "onInitializeAccessibilityEvent": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
              },
              "setOpticalInsets": {
                "!type": "fn(insets: +android.graphics.Insets) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
              },
              "isClickable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
              },
              "isLayoutRtl": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
              },
              "setLayoutDirection": {
                "!type": "fn(layoutDirection: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
              },
              "postInvalidateDelayed": {
                "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
              },
              "isInScrollingContainer": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
              },
              "jumpDrawablesToCurrentState": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
              },
              "notifySubtreeAccessibilityStateChangedIfNeeded": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
              },
              "setScrollBarDefaultDelayBeforeFade": {
                "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
              },
              "getDrawingRect": {
                "!type": "fn(outRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
              },
              "getBackgroundTintList": {
                "!type": "fn() -> +android.content.res.ColorStateList",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
              },
              "getTouchables": {
                "!type": "fn() -> +java.util.ArrayList",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
              },
              "getAlpha": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
              },
              "onNestedPrePerformAccessibilityAction": {
                "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
              },
              "onKeyPreIme": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "clearAllTabs": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#clearAllTabs()"
              },
              "setScrollBarStyle": {
                "!type": "fn(style: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
              },
              "getLocalVisibleRect": {
                "!type": "fn(r: +android.graphics.Rect) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
              },
              "getSolidColor": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
              },
              "offsetRectIntoDescendantCoords": {
                "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
              },
              "toLocalMotionEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
              },
              "isInLayout": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
              },
              "requestTransitionStart": {
                "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
              },
              "removeAllViews": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
              },
              "onCloseSystemDialogs": {
                "!type": "fn(reason: string) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
              },
              "getVerticalScrollbarWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
              },
              "isAccessibilitySelectionExtendable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
              },
              "getAccessibilityTraversalAfter": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
              },
              "onProvideVirtualStructure": {
                "!type": "fn(structure: +android.view.ViewStructure) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
              },
              "canResolveLayoutDirection": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
              },
              "scheduleLayoutAnimation": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
              },
              "getScrollIndicators": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
              },
              "getScrollBarSize": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
              },
              "dispatchApplyWindowInsets": {
                "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
              },
              "getAccessibilityViewId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
              },
              "isTransitionGroup": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
              },
              "transformPointToViewLocal": {
                "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
              },
              "onPopulateAccessibilityEventInternal": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
              },
              "isDrawingCacheEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
              },
              "getOverlay": {
                "!type": "fn() -> +android.view.ViewGroupOverlay",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
              },
              "onProvideStructure": {
                "!type": "fn(structure: +android.view.ViewStructure) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
              },
              "setNextFocusDownId": {
                "!type": "fn(nextFocusDownId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
              },
              "getVerticalScrollbarPosition": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
              },
              "childHasTransientStateChanged": {
                "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
              },
              "setFilterTouchesWhenObscured": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
              },
              "getMeasuredHeight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
              },
              "getFocusables": {
                "!type": "fn(direction: number) -> +java.util.ArrayList",
                "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
              },
              "setOnTouchListener": {
                "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
              },
              "getOverScrollMode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
              },
              "endViewTransition": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
              },
              "refreshDrawableState": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
              },
              "requestSendAccessibilityEvent": {
                "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
              },
              "isInEditMode": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
              },
              "canResolveTextAlignment": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
              },
              "startViewTransition": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
              },
              "dispatchTouchEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
              },
              "dispatchUnhandledMove": {
                "!type": "fn(focused: +android.view.View, direction: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
              },
              "setImportantForAccessibility": {
                "!type": "fn(mode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
              },
              "setMotionEventSplittingEnabled": {
                "!type": "fn(split: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
              },
              "focusableViewAvailable": {
                "!type": "fn(v: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
              },
              "isLayoutRequested": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
              },
              "invalidateChild": {
                "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
              },
              "getCurrentTabView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getCurrentTabView()"
              },
              "onTabChanged": {
                "!type": "fn(tabId: string) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html#onTabChanged(java.lang.String)"
              },
              "setSaveFromParentEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
              },
              "dispatchGenericMotionEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
              },
              "getLayerType": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
              },
              "getHotspotBounds": {
                "!type": "fn(outRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
              },
              "setScrollbarFadingEnabled": {
                "!type": "fn(fadeScrollbars: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
              },
              "getLayoutTransition": {
                "!type": "fn() -> +android.animation.LayoutTransition",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
              },
              "removeViewAt": {
                "!type": "fn(index: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
              },
              "recomputeViewAttributes": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
              },
              "getMeasureAllChildren": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#getMeasureAllChildren()"
              },
              "setBackground": {
                "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
              },
              "getRotation": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
              },
              "drawableHotspotChanged": {
                "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
              },
              "getNextFocusRightId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
              },
              "getFocusedChild": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
              },
              "isHardwareAccelerated": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
              },
              "setAlwaysDrawnWithCacheEnabled": {
                "!type": "fn(always: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
              },
              "getBackground": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
              },
              "requestAccessibilityFocus": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
              },
              "removeViews": {
                "!type": "fn(start: number, count: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
              },
              "setAnimation": {
                "!type": "fn(animation: +android.view.animation.Animation) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
              },
              "getAccessibilityNodeProvider": {
                "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
              },
              "resetResolvedPadding": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
              },
              "getScaleY": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
              },
              "forceLayout": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
              },
              "isLayoutDirectionResolved": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
              },
              "getScaleX": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
              },
              "setFocusableInTouchMode": {
                "!type": "fn(focusableInTouchMode: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
              },
              "updateViewLayout": {
                "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
              },
              "addStatesFromChildren": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
              },
              "setAnimationCacheEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
              },
              "getTransitionAlpha": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
              },
              "getWindowId": {
                "!type": "fn() -> +android.view.WindowId",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
              },
              "transformMatrixToLocal": {
                "!type": "fn(m: +android.graphics.Matrix) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
              },
              "dispatchFinishTemporaryDetach": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
              },
              "getViewTreeObserver": {
                "!type": "fn() -> +android.view.ViewTreeObserver",
                "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
              },
              "clearAnimation": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
              },
              "onPopulateAccessibilityEvent": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
              },
              "unscheduleDrawable": {
                "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
              },
              "getVerticalFadingEdgeLength": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
              },
              "setCurrentTabByTag": {
                "!type": "fn(tag: string) -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#setCurrentTabByTag(java.lang.String)"
              },
              "onViewRemoved": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
              },
              "requestLayout": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "setLayoutAnimation": {
                "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
              },
              "dispatchNestedPreFling": {
                "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
              },
              "setOnClickListener": {
                "!type": "fn(l: +android.view.View.OnClickListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
              },
              "isTextDirectionInherited": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
              },
              "onApplyWindowInsets": {
                "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
                "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
              },
              "setNextFocusUpId": {
                "!type": "fn(nextFocusUpId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getChildAt": {
                "!type": "fn(index: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
              },
              "getBackgroundTintMode": {
                "!type": "fn() -> +android.graphics.PorterDuff.Mode",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
              },
              "onCancelPendingInputEvents": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
              },
              "getHorizontalFadingEdgeLength": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
              },
              "sendAccessibilityEvent": {
                "!type": "fn(eventType: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
              },
              "getPaddingLeft": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
              },
              "setRevealClip": {
                "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
              },
              "newTabSpec": {
                "!type": "fn(tag: string) -> +android.widget.TabHost.TabSpec",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#newTabSpec(java.lang.String)"
              },
              "isFocused": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
              },
              "removeViewsInLayout": {
                "!type": "fn(start: number, count: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
              },
              "onInitializeAccessibilityNodeInfoInternal": {
                "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
              },
              "isAssistBlocked": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
              },
              "showContextMenuForChild": {
                "!type": "fn(originalView: +android.view.View) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
              },
              "getWindowToken": {
                "!type": "fn() -> +android.os.IBinder",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
              },
              "startDrag": {
                "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
              },
              "scheduleDrawable": {
                "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
              },
              "canScrollHorizontally": {
                "!type": "fn(direction: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
              },
              "invalidateChildInParent": {
                "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
              },
              "dispatchNestedPreScroll": {
                "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
              },
              "getLayoutParams": {
                "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
              },
              "getScrollY": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
              },
              "getScrollX": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
              },
              "postDelayed": {
                "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
              },
              "getKeyDispatcherState": {
                "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
                "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
              },
              "setMinimumHeight": {
                "!type": "fn(minHeight: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
              },
              "hasFocus": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
              },
              "scrollTo": {
                "!type": "fn(x: number, y: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
              },
              "setAccessibilityTraversalAfter": {
                "!type": "fn(afterId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
              },
              "getClipToPadding": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
              },
              "isHapticFeedbackEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
              },
              "isFocusable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
              },
              "getTransientViewIndex": {
                "!type": "fn(position: number) -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
              },
              "requestRectangleOnScreen": {
                "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
              },
              "isSoundEffectsEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
              },
              "findViewByPredicate": {
                "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
              },
              "startActivityForResult": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
              },
              "setLayerPaint": {
                "!type": "fn(paint: +android.graphics.Paint) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
              },
              "setLayoutParams": {
                "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
              },
              "isContextClickable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
              },
              "isImportantForAccessibility": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
              },
              "dispatchPointerEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
              },
              "invalidateOutline": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
              },
              "getTouchDelegate": {
                "!type": "fn() -> +android.view.TouchDelegate",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
              },
              "setHasTransientState": {
                "!type": "fn(hasTransientState: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
              },
              "getIterableTextForAccessibility": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
              },
              "checkInputConnectionProxy": {
                "!type": "fn(view: +android.view.View) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
              },
              "getChildVisibleRect": {
                "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
              },
              "findViewByAccessibilityIdTraversal": {
                "!type": "fn(accessibilityId: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
              },
              "clearFocus": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
              },
              "findViewsWithText": {
                "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
              },
              "addTransientView": {
                "!type": "fn(view: +android.view.View, index: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
              },
              "invalidateDrawable": {
                "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
              },
              "getViewRootImpl": {
                "!type": "fn() -> +android.view.ViewRootImpl",
                "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
              },
              "setOnHoverListener": {
                "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
              },
              "getForegroundTintList": {
                "!type": "fn() -> +android.content.res.ColorStateList",
                "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
              },
              "setNestedScrollingEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
              },
              "clearAccessibilityFocus": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
              },
              "buildDrawingCache": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
              },
              "onTouchModeChanged": {
                "!type": "fn(isInTouchMode: bool) -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#onTouchModeChanged(boolean)"
              },
              "getTextDirection": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
              },
              "getWindowVisibility": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
              },
              "onInterceptTouchEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
              },
              "clearDisappearingChildren": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
              },
              "setDescendantFocusability": {
                "!type": "fn(focusability: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
              },
              "setId": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
              },
              "setAccessibilityLiveRegion": {
                "!type": "fn(mode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
              },
              "getTextAlignment": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
              },
              "setMinimumWidth": {
                "!type": "fn(minWidth: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
              },
              "bringToFront": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
              },
              "isTextAlignmentResolved": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
              },
              "setCurrentTab": {
                "!type": "fn(index: number) -> void",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#setCurrentTab(int)"
              },
              "hasOnClickListeners": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
              },
              "getSystemUiVisibility": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
              },
              "findViewById": {
                "!type": "fn(id: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
              },
              "getPivotY": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
              },
              "getPivotX": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
              },
              "getStateListAnimator": {
                "!type": "fn() -> +android.animation.StateListAnimator",
                "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
              },
              "getPaddingStart": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
              },
              "getCurrentTab": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getCurrentTab()"
              },
              "resolveLayoutParams": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
              },
              "dispatchActivityResult": {
                "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
              },
              "setScrollBarSize": {
                "!type": "fn(scrollBarSize: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
              },
              "dispatchDisplayHint": {
                "!type": "fn(hint: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
              },
              "debug": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
              },
              "getBoundsOnScreen": {
                "!type": "fn(outRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
              },
              "setOutlineProvider": {
                "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
              },
              "measure": {
                "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
              },
              "dispatchKeyEvent": {
                "!type": "fn(event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#dispatchKeyEvent(android.view.KeyEvent)"
              },
              "getMatrix": {
                "!type": "fn() -> +android.graphics.Matrix",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
              },
              "setOnScrollChangeListener": {
                "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
              },
              "isActionableForAccessibility": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
              },
              "dispatchProvideStructure": {
                "!type": "fn(structure: +android.view.ViewStructure) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
              },
              "draw": {
                "!type": "fn(canvas: +android.graphics.Canvas) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
              },
              "callOnClick": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
              },
              "resetPaddingToInitialValues": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
              },
              "getRotationY": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
              },
              "setClipBounds": {
                "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
              },
              "getRotationX": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
              },
              "getHitRect": {
                "!type": "fn(outRect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
              },
              "removeView": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
              },
              "getAccessibilitySelectionEnd": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
              },
              "sendAccessibilityEventUncheckedInternal": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
              },
              "getClipBounds": {
                "!type": "fn() -> +android.graphics.Rect",
                "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
              },
              "addTouchables": {
                "!type": "fn(views: +java.util.ArrayList) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
              },
              "getLayoutDirection": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
              },
              "dispatchConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
              },
              "isAttachedToWindow": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
              },
              "onTrackballEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
              },
              "resetResolvedTextDirection": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
              },
              "restoreHierarchyState": {
                "!type": "fn(container: +android.util.SparseArray) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
              },
              "hasShadow": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
              },
              "getElevation": {
                "!type": "fn() -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
              },
              "setLeftTopRightBottom": {
                "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
              },
              "resetResolvedTextAlignment": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
              },
              "isSaveFromParentEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
              },
              "willNotCacheDrawing": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
              },
              "removeOnAttachStateChangeListener": {
                "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
              },
              "offsetTopAndBottom": {
                "!type": "fn(offset: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
              },
              "isRootNamespace": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
              },
              "setOverScrollMode": {
                "!type": "fn(overScrollMode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
              },
              "getDrawableState": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
              },
              "stopNestedScroll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
              },
              "addOnAttachStateChangeListener": {
                "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
              },
              "onRequestSendAccessibilityEvent": {
                "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
              },
              "dispatchPopulateAccessibilityEventInternal": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
              },
              "getAccessibilitySelectionStart": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
              },
              "setOnGenericMotionListener": {
                "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
              },
              "postInvalidate": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
              },
              "dispatchNestedPrePerformAccessibilityAction": {
                "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
              },
              "isActivated": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
              },
              "setup": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html#setup()"
              },
              "setWillNotDraw": {
                "!type": "fn(willNotDraw: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
              },
              "getNextFocusForwardId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
              },
              "isAnimationCacheEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
              },
              "setNextFocusLeftId": {
                "!type": "fn(nextFocusLeftId: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
              },
              "requestChildFocus": {
                "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
              },
              "isLongClickable": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
              },
              "childDrawableStateChanged": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
              },
              "applyDrawableToTransparentRegion": {
                "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
              },
              "addFocusables": {
                "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
              },
              "isAccessibilityFocused": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
              },
              "getDrawingCache": {
                "!type": "fn() -> +android.graphics.Bitmap",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
              },
              "getWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
              },
              "computeScroll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
              },
              "getAccessibilityLiveRegion": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
              },
              "isFocusableInTouchMode": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
              },
              "getMinimumWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
              },
              "indexOfChild": {
                "!type": "fn(child: +android.view.View) -> number",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
              },
              "dispatchSetActivated": {
                "!type": "fn(activated: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
              },
              "setLayerType": {
                "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
              },
              "isInTouchMode": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
              },
              "isLayoutDirectionInherited": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
              },
              "isDuplicateParentStateEnabled": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
              },
              "getDisplay": {
                "!type": "fn() -> +android.view.Display",
                "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
              },
              "offsetChildrenTopAndBottom": {
                "!type": "fn(offset: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
              },
              "setTouchscreenBlocksFocus": {
                "!type": "fn(touchscreenBlocksFocus: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
              },
              "getIteratorForGranularity": {
                "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
                "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
              },
              "getForegroundTintMode": {
                "!type": "fn() -> +android.graphics.PorterDuff.Mode",
                "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
              },
              "getBaseline": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
              },
              "setFadingEdgeLength": {
                "!type": "fn(length: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
              },
              "fitsSystemWindows": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
              },
              "setSaveEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
              },
              "setClipChildren": {
                "!type": "fn(clipChildren: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
              },
              "createAccessibilityNodeInfo": {
                "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
                "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
              },
              "getParent": {
                "!type": "fn() -> +android.view.ViewParent",
                "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
              },
              "bringChildToFront": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
              },
              "setHovered": {
                "!type": "fn(hovered: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
              },
              "dispatchKeyShortcutEvent": {
                "!type": "fn(event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
              },
              "getAccessibilityWindowId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
              },
              "requestUnbufferedDispatch": {
                "!type": "fn(event: +android.view.MotionEvent) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
              },
              "onNestedFling": {
                "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
              },
              "startNestedScroll": {
                "!type": "fn(axes: number) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
              },
              "onRtlPropertiesChanged": {
                "!type": "fn(layoutDirection: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
              },
              "playSoundEffect": {
                "!type": "fn(soundConstant: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
              },
              "requestFocusFromTouch": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
              },
              "createAccessibilityNodeInfoInternal": {
                "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
                "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
              },
              "setClipToPadding": {
                "!type": "fn(clipToPadding: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
              },
              "isLayoutSuppressed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
              },
              "setIsRootNamespace": {
                "!type": "fn(isRoot: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
              },
              "destroyDrawingCache": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
              },
              "getCurrentView": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/widget/TabHost.html#getCurrentView()"
              },
              "setForegroundGravity": {
                "!type": "fn(foregroundGravity: number) -> void",
                "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#setForegroundGravity(int)"
              },
              "getContentDescription": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
              },
              "setTouchDelegate": {
                "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
              },
              "setOnCreateContextMenuListener": {
                "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
              },
              "getAccessibilityTraversalBefore": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
              },
              "onGenericMotionEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#onGenericMotionEvent(android.view.MotionEvent)"
              },
              "getAccessibilityDelegate": {
                "!type": "fn() -> +android.view.View.AccessibilityDelegate",
                "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
              },
              "setLabelFor": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
              },
              "setOnLongClickListener": {
                "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
              },
              "setBackgroundDrawable": {
                "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
              },
              "damageChild": {
                "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
              },
              "notifySubtreeAccessibilityStateChanged": {
                "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
              },
              "computeSystemWindowInsets": {
                "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
                "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
              },
              "offsetDescendantRectToMyCoords": {
                "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
              },
              "getLayoutAnimation": {
                "!type": "fn() -> +android.view.animation.LayoutAnimationController",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
              },
              "removeOnLayoutChangeListener": {
                "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
              },
              "setPaddingRelative": {
                "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
              },
              "isOpaque": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
              },
              "performClick": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
              },
              "setTextDirection": {
                "!type": "fn(textDirection: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
              },
              "getFocusedRect": {
                "!type": "fn(r: +android.graphics.Rect) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
              },
              "setBackgroundTintList": {
                "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
              },
              "addTab": {
                "!type": "fn(tabSpec: +android.widget.TabHost.TabSpec, clss: +java.lang.Class, args: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html#addTab(android.widget.TabHost.TabSpec, java.lang.Class, android.os.Bundle)"
              },
              "setDrawingCacheEnabled": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
              },
              "onViewAdded": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
              },
              "setAssistBlocked": {
                "!type": "fn(enabled: bool) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
              },
              "layout": {
                "!type": "fn(l: number, t: number, r: number, b: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
              },
              "dispatchDragEvent": {
                "!type": "fn(event: +android.view.DragEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
              },
              "isForegroundInsidePadding": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
              },
              "setTextAlignment": {
                "!type": "fn(textAlignment: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
              },
              "setBackgroundResource": {
                "!type": "fn(resid: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
              },
              "getImportantForAccessibility": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
              },
              "getPaddingTop": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
              },
              "requestTransparentRegion": {
                "!type": "fn(child: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
              }
            }
          },
          "FragmentHostCallback": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html",
            "!type": "fn(context: +android.content.Context, handler: +android.os.Handler, windowAnimations: number)",
            "prototype": {
              "onDump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "onHasWindowAnimations": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onHasWindowAnimations()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "onFindViewById": {
                "!type": "fn(id: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onFindViewById(int)"
              },
              "onRequestPermissionsFromFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, permissions: +java.newArray, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onRequestPermissionsFromFragment(android.support.v4.app.Fragment, java.lang.String[], int)"
              },
              "onGetWindowAnimations": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onGetWindowAnimations()"
              },
              "onHasView": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onHasView()"
              },
              "onGetLayoutInflater": {
                "!type": "fn() -> +android.view.LayoutInflater",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onGetLayoutInflater()"
              },
              "onGetHost": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onGetHost()"
              },
              "onShouldShowRequestPermissionRationale": {
                "!type": "fn(permission: string) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onShouldShowRequestPermissionRationale(java.lang.String)"
              },
              "onShouldSaveFragmentState": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onShouldSaveFragmentState(android.support.v4.app.Fragment)"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "onSupportInvalidateOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onSupportInvalidateOptionsMenu()"
              },
              "onStartActivityFromFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html#onStartActivityFromFragment(android.support.v4.app.Fragment, android.content.Intent, int)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              }
            }
          },
          "NotificationCompatSideChannelService": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html",
            "!type": "fn()",
            "BIND_WAIVE_PRIORITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
            },
            "MEDIA_PROJECTION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
            },
            "ETHERNET_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
            },
            "WIFI_RTT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
            },
            "SENSOR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
            },
            "TELEPHONY_SUBSCRIPTION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
            },
            "CAPTIONING_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
            },
            "START_CONTINUATION_MASK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
            },
            "CAMERA_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
            },
            "BIND_DEBUG_UNBIND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
            },
            "STATUS_BAR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
            },
            "DEVICE_POLICY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
            },
            "BIND_IMPORTANT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
            },
            "NSD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
            },
            "DOWNLOAD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
            },
            "BIND_NOT_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
            },
            "CONTEXT_IGNORE_SECURITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
            },
            "USAGE_STATS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
            },
            "START_FLAG_RETRY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
            },
            "MODE_WORLD_READABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
            },
            "KEYGUARD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
            },
            "BIND_ADJUST_WITH_ACTIVITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
            },
            "UI_MODE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
            },
            "MODE_PRIVATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
            },
            "CONTEXT_INCLUDE_CODE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
            },
            "ACCESSIBILITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
            },
            "HDMI_CONTROL_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
            },
            "BIND_SHOWING_UI": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
            },
            "MODE_APPEND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
            },
            "AUDIO_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
            },
            "NETWORK_SCORE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
            },
            "UPDATE_LOCK_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
            },
            "MEDIA_ROUTER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
            },
            "JOB_SCHEDULER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
            },
            "DEVICE_IDLE_CONTROLLER": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
            },
            "INPUT_METHOD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
            },
            "BIND_ABOVE_CLIENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
            },
            "START_STICKY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
            },
            "INPUT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
            },
            "MODE_WORLD_WRITEABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
            },
            "NETWORKMANAGEMENT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
            },
            "WINDOW_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
            },
            "MEDIA_SESSION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
            },
            "WIFI_P2P_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
            },
            "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
            },
            "WIFI_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
            },
            "PERSISTENT_DATA_BLOCK_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
            },
            "TV_INPUT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
            },
            "SIP_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
            },
            "FINGERPRINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
            },
            "LOCATION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
            },
            "LAUNCHER_APPS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
            },
            "NETWORK_STATS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
            },
            "VOICE_INTERACTION_MANAGER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
            },
            "TELECOM_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
            },
            "SEARCH_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
            },
            "RADIO_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
            },
            "BIND_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
            },
            "BIND_NOT_FOREGROUND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
            },
            "CONTEXT_RESTRICTED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
            },
            "USER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
            },
            "DROPBOX_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
            },
            "BIND_TREAT_LIKE_ACTIVITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
            },
            "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
            },
            "CLIPBOARD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
            },
            "START_TASK_REMOVED_COMPLETE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
            },
            "LAYOUT_INFLATER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
            },
            "WIFI_SCANNING_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
            },
            "PRINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
            },
            "WALLPAPER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
            },
            "ALARM_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
            },
            "ACCOUNT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
            },
            "TRUST_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
            },
            "VIBRATOR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
            },
            "START_REDELIVER_INTENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
            },
            "NFC_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
            },
            "NOTIFICATION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
            },
            "BLUETOOTH_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
            },
            "POWER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
            },
            "BIND_ALLOW_OOM_MANAGEMENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
            },
            "START_FLAG_REDELIVERY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
            },
            "BACKUP_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
            },
            "COUNTRY_DETECTOR": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
            },
            "SERIAL_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
            },
            "WIFI_PASSPOINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
            },
            "CONSUMER_IR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
            },
            "APP_OPS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
            },
            "ACTIVITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
            },
            "STORAGE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
            },
            "BIND_FOREGROUND_SERVICE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
            },
            "RESTRICTIONS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
            },
            "CONNECTIVITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
            },
            "START_NOT_STICKY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
            },
            "TEXT_SERVICES_MANAGER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
            },
            "USB_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
            },
            "START_STICKY_COMPATIBILITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
            },
            "APPWIDGET_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
            },
            "CONTEXT_REGISTER_PACKAGE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
            },
            "CARRIER_CONFIG_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
            },
            "NETWORK_POLICY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
            },
            "MIDI_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
            },
            "BATTERY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
            },
            "MODE_MULTI_PROCESS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
            },
            "BIND_AUTO_CREATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
            },
            "DISPLAY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
            },
            "TELEPHONY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
            },
            "prototype": {
              "getExternalCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "openFileInput": {
                "!type": "fn(name: string) -> +java.io.FileInputStream",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
              },
              "getBaseContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
              },
              "checkPermission": {
                "!type": "fn(permission: string, pid: number, uid: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
              },
              "openFileOutput": {
                "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
              },
              "deleteDatabase": {
                "!type": "fn(name: string) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
              },
              "startActivityAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "getOpPackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "getObbDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
              },
              "startForeground": {
                "!type": "fn(id: number, notification: +android.app.Notification) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
              },
              "getString": {
                "!type": "fn(resId: number) -> string",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
              },
              "getDatabasePath": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
              },
              "sendOrderedBroadcast": {
                "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
              },
              "stopForeground": {
                "!type": "fn(removeNotification: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
              },
              "onDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onDestroy()"
              },
              "bindServiceAsUser": {
                "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
              },
              "cancelAll": {
                "!type": "fn(packageName: string) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html#cancelAll(java.lang.String)"
              },
              "getNoBackupFilesDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
              },
              "fileList": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
              },
              "bindService": {
                "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
              },
              "checkSelfPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
              },
              "removeStickyBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
              },
              "sendStickyBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "setForeground": {
                "!type": "fn(isForeground: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
              },
              "stopSelf": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
              },
              "enforceCallingPermission": {
                "!type": "fn(permission: string, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
              },
              "getCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
              },
              "getSharedPrefsFile": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
              },
              "deleteFile": {
                "!type": "fn(name: string) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
              },
              "createApplicationContext": {
                "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
              },
              "getExternalFilesDirs": {
                "!type": "fn(type: string) -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
              },
              "isRestricted": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
              },
              "startInstrumentation": {
                "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
              },
              "createPackageContext": {
                "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
              },
              "obtainStyledAttributes": {
                "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
                "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
              },
              "setWallpaper": {
                "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
              },
              "setTheme": {
                "!type": "fn(resid: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
              },
              "sendStickyOrderedBroadcast": {
                "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "enforcePermission": {
                "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
              },
              "getDir": {
                "!type": "fn(name: string, mode: number) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
              },
              "checkCallingOrSelfUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
              },
              "sendBroadcastMultiplePermissions": {
                "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
              },
              "getExternalFilesDir": {
                "!type": "fn(type: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
              },
              "openOrCreateDatabase": {
                "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
              },
              "getContentResolver": {
                "!type": "fn() -> +android.content.ContentResolver",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
              },
              "getThemeResId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getObbDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
              },
              "getDisplayAdjustments": {
                "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
              },
              "checkCallingOrSelfPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
              },
              "unregisterReceiver": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
              },
              "clearWallpaper": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
              },
              "createPackageContextAsUser": {
                "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
              },
              "onTaskRemoved": {
                "!type": "fn(rootIntent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
              },
              "onCreate": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onCreate()"
              },
              "onLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
              },
              "startServiceAsUser": {
                "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getWallpaper": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
              },
              "peekWallpaper": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
              },
              "getApplicationContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
              },
              "getFilesDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
              },
              "getCodeCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
              },
              "sendOrderedBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "getColor": {
                "!type": "fn(id: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
              },
              "registerReceiverAsUser": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
              },
              "getText": {
                "!type": "fn(resId: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
              },
              "getMainLooper": {
                "!type": "fn() -> +android.os.Looper",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
              },
              "startActivity": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
              },
              "getColorStateList": {
                "!type": "fn(id: number) -> +android.content.res.ColorStateList",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
              },
              "enforceCallingOrSelfUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
              },
              "getAssets": {
                "!type": "fn() -> +android.content.res.AssetManager",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "onStart": {
                "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onStart(android.content.Intent, int)"
              },
              "onTrimMemory": {
                "!type": "fn(level: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
              },
              "onStartCommand": {
                "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onStartCommand(android.content.Intent, int, int)"
              },
              "grantUriPermission": {
                "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
              },
              "canStartActivityForResult": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
              },
              "getBasePackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
              },
              "onUnbind": {
                "!type": "fn(intent: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
              },
              "attach": {
                "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
              },
              "onBind": {
                "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html#onBind(android.content.Intent)"
              },
              "getApplication": {
                "!type": "fn() -> +android.app.Application",
                "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
              },
              "registerReceiver": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "stopService": {
                "!type": "fn(name: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
              },
              "getWallpaperDesiredMinimumHeight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
              },
              "getExternalCacheDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
              },
              "getTheme": {
                "!type": "fn() -> +android.content.res.Resources.Theme",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
              },
              "getPackageCodePath": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
              },
              "registerComponentCallbacks": {
                "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
                "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
              },
              "enforceUriPermission": {
                "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
              },
              "getSystemServiceName": {
                "!type": "fn(serviceClass: +java.lang.Class) -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
              },
              "getApplicationInfo": {
                "!type": "fn() -> +android.content.pm.ApplicationInfo",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
              },
              "createDisplayContext": {
                "!type": "fn(display: +android.view.Display) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
              },
              "getSharedPreferences": {
                "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
              },
              "enforceCallingUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
              },
              "stopSelfResult": {
                "!type": "fn(startId: number) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
              },
              "getSystemService": {
                "!type": "fn(name: string) -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
              },
              "unbindService": {
                "!type": "fn(conn: +android.content.ServiceConnection) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
              },
              "sendStickyOrderedBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "getClassLoader": {
                "!type": "fn() -> +java.lang.ClassLoader",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
              },
              "notify": {
                "!type": "fn(packageName: string, id: number, tag: string, notification: +android.app.Notification) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html#notify(java.lang.String, int, java.lang.String, android.app.Notification)"
              },
              "databaseList": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
              },
              "checkCallingUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
              },
              "enforceCallingOrSelfPermission": {
                "!type": "fn(permission: string, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
              },
              "createConfigurationContext": {
                "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
              },
              "removeStickyBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "getFileStreamPath": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
              },
              "checkUriPermission": {
                "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
              },
              "onRebind": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
              },
              "startService": {
                "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
              },
              "checkCallingPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
              },
              "getPackageManager": {
                "!type": "fn() -> +android.content.pm.PackageManager",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "startActivitiesAsUser": {
                "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
              },
              "sendBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "sendBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
              },
              "getPackageResourcePath": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
              },
              "startIntentSender": {
                "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
              },
              "startActivityForResult": {
                "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
              },
              "startActivities": {
                "!type": "fn(intents: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
              },
              "getDrawable": {
                "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
              },
              "getPackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
              },
              "cancel": {
                "!type": "fn(packageName: string, id: number, tag: string) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html#cancel(java.lang.String, int, java.lang.String)"
              },
              "revokeUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
              },
              "getUserId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
              },
              "unregisterComponentCallbacks": {
                "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
                "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
              },
              "stopServiceAsUser": {
                "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "sendStickyBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
              },
              "getExternalMediaDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
              },
              "getWallpaperDesiredMinimumWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
              }
            }
          },
          "FragmentStatePagerAdapter": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html",
            "!type": "fn(fm: +android.support.v4.app.FragmentManager)",
            "POSITION_UNCHANGED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#POSITION_UNCHANGED"
            },
            "POSITION_NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#POSITION_NONE"
            },
            "prototype": {
              "isViewFromObject": {
                "!type": "fn(view: +android.view.View, object: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#isViewFromObject(android.view.View, java.lang.Object)"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getPageWidth": {
                "!type": "fn(position: number) -> +java.lang.Float",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getPageWidth(int)"
              },
              "setPrimaryItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number, object: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#setPrimaryItem(android.view.ViewGroup, int, java.lang.Object)"
              },
              "notifyDataSetChanged": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#notifyDataSetChanged()"
              },
              "finishUpdate": {
                "!type": "fn(container: +android.view.ViewGroup) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#finishUpdate(android.view.ViewGroup)"
              },
              "destroyItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number, object: +java.lang.Object) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#destroyItem(android.view.ViewGroup, int, java.lang.Object)"
              },
              "getItem": {
                "!type": "fn(position: number) -> +android.support.v4.app.Fragment",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#getItem(int)"
              },
              "saveState": {
                "!type": "fn() -> +android.os.Parcelable",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#saveState()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getPageTitle": {
                "!type": "fn(position: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getPageTitle(int)"
              },
              "registerDataSetObserver": {
                "!type": "fn(observer: +android.database.DataSetObserver) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#registerDataSetObserver(android.database.DataSetObserver)"
              },
              "unregisterDataSetObserver": {
                "!type": "fn(observer: +android.database.DataSetObserver) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#unregisterDataSetObserver(android.database.DataSetObserver)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "restoreState": {
                "!type": "fn(state: +android.os.Parcelable, loader: +java.lang.ClassLoader) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#restoreState(android.os.Parcelable, java.lang.ClassLoader)"
              },
              "getCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getCount()"
              },
              "startUpdate": {
                "!type": "fn(container: +android.view.ViewGroup) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#startUpdate(android.view.ViewGroup)"
              },
              "getItemPosition": {
                "!type": "fn(object: +java.lang.Object) -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/view/PagerAdapter.html#getItemPosition(java.lang.Object)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "instantiateItem": {
                "!type": "fn(container: +android.view.ViewGroup, position: number) -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html#instantiateItem(android.view.ViewGroup, int)"
              }
            }
          },
          "ShareCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html",
            "!type": "fn()",
            "IntentBuilder": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html",
              "from": {
                "!type": "fn(launchingActivity: +android.app.Activity) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#from(android.app.Activity)"
              },
              "prototype": {
                "addEmailCc": {
                  "!type": "fn(address: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#addEmailCc(java.lang.String)"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "createChooserIntent": {
                  "!type": "fn() -> +android.content.Intent",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#createChooserIntent()"
                },
                "addStream": {
                  "!type": "fn(streamUri: +android.net.Uri) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#addStream(android.net.Uri)"
                },
                "startChooser": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#startChooser()"
                },
                "setEmailBcc": {
                  "!type": "fn(addresses: +java.newArray) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setEmailBcc(java.lang.String[])"
                },
                "setHtmlText": {
                  "!type": "fn(htmlText: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setHtmlText(java.lang.String)"
                },
                "setEmailCc": {
                  "!type": "fn(addresses: +java.newArray) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setEmailCc(java.lang.String[])"
                },
                "setType": {
                  "!type": "fn(mimeType: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setType(java.lang.String)"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "addEmailTo": {
                  "!type": "fn(address: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#addEmailTo(java.lang.String)"
                },
                "setChooserTitle": {
                  "!type": "fn(title: +java.lang.CharSequence) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setChooserTitle(java.lang.CharSequence)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getIntent": {
                  "!type": "fn() -> +android.content.Intent",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#getIntent()"
                },
                "setText": {
                  "!type": "fn(text: +java.lang.CharSequence) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setText(java.lang.CharSequence)"
                },
                "setStream": {
                  "!type": "fn(streamUri: +android.net.Uri) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setStream(android.net.Uri)"
                },
                "setEmailTo": {
                  "!type": "fn(addresses: +java.newArray) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setEmailTo(java.lang.String[])"
                },
                "setSubject": {
                  "!type": "fn(subject: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#setSubject(java.lang.String)"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "addEmailBcc": {
                  "!type": "fn(address: string) -> +android.support.v4.app.ShareCompat.IntentBuilder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html#addEmailBcc(java.lang.String)"
                }
              }
            },
            "IntentReader": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html",
              "from": {
                "!type": "fn(activity: +android.app.Activity) -> +android.support.v4.app.ShareCompat.IntentReader",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#from(android.app.Activity)"
              },
              "prototype": {
                "getText": {
                  "!type": "fn() -> +java.lang.CharSequence",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getText()"
                },
                "getStreamCount": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getStreamCount()"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "getEmailBcc": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getEmailBcc()"
                },
                "getStream": {
                  "!type": "fn() -> +android.net.Uri",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getStream()"
                },
                "getHtmlText": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getHtmlText()"
                },
                "isSingleShare": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#isSingleShare()"
                },
                "getCallingPackage": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getCallingPackage()"
                },
                "isShareIntent": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#isShareIntent()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getCallingApplicationIcon": {
                  "!type": "fn() -> +android.graphics.drawable.Drawable",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getCallingApplicationIcon()"
                },
                "getEmailTo": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getEmailTo()"
                },
                "getSubject": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getSubject()"
                },
                "isMultipleShare": {
                  "!type": "fn() -> bool",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#isMultipleShare()"
                },
                "getCallingApplicationLabel": {
                  "!type": "fn() -> +java.lang.CharSequence",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getCallingApplicationLabel()"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getCallingActivityIcon": {
                  "!type": "fn() -> +android.graphics.drawable.Drawable",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getCallingActivityIcon()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getType": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getType()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "getCallingActivity": {
                  "!type": "fn() -> +android.content.ComponentName",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getCallingActivity()"
                },
                "getEmailCc": {
                  "!type": "fn() -> +java.newArray",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html#getEmailCc()"
                }
              }
            },
            "EXTRA_CALLING_ACTIVITY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html#EXTRA_CALLING_ACTIVITY"
            },
            "EXTRA_CALLING_PACKAGE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html#EXTRA_CALLING_PACKAGE"
            },
            "configureMenuItem": {
              "!type": "fn(item: +android.view.MenuItem, shareIntent: +android.support.v4.app.ShareCompat.IntentBuilder) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html#configureMenuItem(android.view.MenuItem, android.support.v4.app.ShareCompat.IntentBuilder)"
            },
            "getCallingActivity": {
              "!type": "fn(calledActivity: +android.app.Activity) -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html#getCallingActivity(android.app.Activity)"
            },
            "getCallingPackage": {
              "!type": "fn(calledActivity: +android.app.Activity) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ShareCompat.html#getCallingPackage(android.app.Activity)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "NotificationCompatExtras": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html",
            "EXTRA_ACTION_EXTRAS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_ACTION_EXTRAS"
            },
            "EXTRA_REMOTE_INPUTS": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_REMOTE_INPUTS"
            },
            "EXTRA_SORT_KEY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_SORT_KEY"
            },
            "EXTRA_GROUP_SUMMARY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_GROUP_SUMMARY"
            },
            "EXTRA_LOCAL_ONLY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_LOCAL_ONLY"
            },
            "EXTRA_GROUP_KEY": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html#EXTRA_GROUP_KEY"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "AppOpsManagerCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html",
            "!type": "fn()",
            "MODE_IGNORED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#MODE_IGNORED"
            },
            "MODE_DEFAULT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#MODE_DEFAULT"
            },
            "MODE_ALLOWED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#MODE_ALLOWED"
            },
            "noteProxyOp": {
              "!type": "fn(context: +android.content.Context, op: string, proxiedPackageName: string) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#noteProxyOp(android.content.Context, java.lang.String, java.lang.String)"
            },
            "permissionToOp": {
              "!type": "fn(permission: string) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#permissionToOp(java.lang.String)"
            },
            "noteOp": {
              "!type": "fn(context: +android.content.Context, op: string, uid: number, packageName: string) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html#noteOp(android.content.Context, java.lang.String, int, java.lang.String)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "SharedElementCallback": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html",
            "!type": "fn()",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "onMapSharedElements": {
                "!type": "fn(names: +java.util.List, sharedElements: +java.util.Map) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onMapSharedElements(java.util.List, java.util.Map)"
              },
              "onCaptureSharedElementSnapshot": {
                "!type": "fn(sharedElement: +android.view.View, viewToGlobalMatrix: +android.graphics.Matrix, screenBounds: +android.graphics.RectF) -> +android.os.Parcelable",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "onRejectSharedElements": {
                "!type": "fn(rejectedSharedElements: +java.util.List) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onRejectSharedElements(java.util.List)"
              },
              "onSharedElementEnd": {
                "!type": "fn(sharedElementNames: +java.util.List, sharedElements: +java.util.List, sharedElementSnapshots: +java.util.List) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onSharedElementEnd(java.util.List, java.util.List, java.util.List)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "onCreateSnapshotView": {
                "!type": "fn(context: +android.content.Context, snapshot: +android.os.Parcelable) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onCreateSnapshotView(android.content.Context, android.os.Parcelable)"
              },
              "onSharedElementStart": {
                "!type": "fn(sharedElementNames: +java.util.List, sharedElements: +java.util.List, sharedElementSnapshots: +java.util.List) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html#onSharedElementStart(java.util.List, java.util.List, java.util.List)"
              }
            }
          },
          "NotificationCompatWearableExtenderTest": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html",
            "!type": "fn()",
            "CUSTOM_CONTENT_HEIGHT_DP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#CUSTOM_CONTENT_HEIGHT_DP"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "setTestContext": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
              },
              "getTestContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
              },
              "assertWritingContentUriRequiresPermission": {
                "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
              },
              "testAndroidTestCaseSetupProperly": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
              },
              "testRealReadCompatEmptyValue": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#testRealReadCompatEmptyValue()"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
              },
              "testCompatReadRealEmptyValue": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#testCompatReadRealEmptyValue()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "assertReadingContentUriRequiresPermission": {
                "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
              },
              "assertActivityRequiresPermission": {
                "!type": "fn(packageName: string, className: string, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
              },
              "testRealReadCompatValue": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#testRealReadCompatValue()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "setContext": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
              },
              "testEmptyEquals": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#testEmptyEquals()"
              },
              "testCompatReadRealValue": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatWearableExtenderTest.html#testCompatReadRealValue()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              }
            }
          },
          "NotificationCompatActionWearableExtenderTest": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html",
            "!type": "fn()",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "setTestContext": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
              },
              "testDefaultActionExtenderNotification": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testDefaultActionExtenderNotification()"
              },
              "getTestContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
              },
              "assertWritingContentUriRequiresPermission": {
                "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
              },
              "testAndroidTestCaseSetupProperly": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
              },
              "testFullEquals": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testFullEquals()"
              },
              "testEmptyNotification": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testEmptyNotification()"
              },
              "getContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "testFullNotification": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testFullNotification()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "testMultipleActionsInANotification": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testMultipleActionsInANotification()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "assertReadingContentUriRequiresPermission": {
                "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
              },
              "assertActivityRequiresPermission": {
                "!type": "fn(packageName: string, className: string, permission: string) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "setContext": {
                "!type": "fn(context: +android.content.Context) -> void",
                "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
              },
              "testEmptyEquals": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testEmptyEquals()"
              },
              "testDefaultActionNotification": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/NotificationCompatActionWearableExtenderTest.html#testDefaultActionNotification()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              }
            }
          },
          "FragmentController": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html",
            "createController": {
              "!type": "fn(callbacks: +android.support.v4.app.FragmentHostCallback) -> +android.support.v4.app.FragmentController",
              "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#createController(android.support.v4.app.FragmentHostCallback)"
            },
            "prototype": {
              "dispatchOptionsMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchOptionsMenuClosed(android.view.Menu)"
              },
              "dumpLoaders": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "doLoaderDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#doLoaderDestroy()"
              },
              "retainNonConfig": {
                "!type": "fn() -> +java.util.List",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#retainNonConfig()"
              },
              "dispatchStop": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchStop()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "restoreLoaderNonConfig": {
                "!type": "fn(loaderManagers: +android.support.v4.util.SimpleArrayMap) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)"
              },
              "dispatchReallyStop": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchReallyStop()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "dispatchDestroy": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchDestroy()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "dispatchPause": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchPause()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "doLoaderStop": {
                "!type": "fn(retain: bool) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#doLoaderStop(boolean)"
              },
              "dispatchCreateOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
              },
              "dispatchDestroyView": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchDestroyView()"
              },
              "attachHost": {
                "!type": "fn(parent: +android.support.v4.app.Fragment) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#attachHost(android.support.v4.app.Fragment)"
              },
              "dispatchPrepareOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchPrepareOptionsMenu(android.view.Menu)"
              },
              "dispatchOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchOptionsItemSelected(android.view.MenuItem)"
              },
              "reportLoaderStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#reportLoaderStart()"
              },
              "getActiveFragmentsCount": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#getActiveFragmentsCount()"
              },
              "getActiveFragments": {
                "!type": "fn(actives: +java.util.List) -> +java.util.List",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#getActiveFragments(java.util.List)"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "restoreAllState": {
                "!type": "fn(state: +android.os.Parcelable, nonConfigList: +java.util.List) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#restoreAllState(android.os.Parcelable, java.util.List)"
              },
              "dispatchConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchConfigurationChanged(android.content.res.Configuration)"
              },
              "onCreateView": {
                "!type": "fn(parent: +android.view.View, name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)"
              },
              "doLoaderStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#doLoaderStart()"
              },
              "dispatchCreate": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchCreate()"
              },
              "dispatchResume": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchResume()"
              },
              "saveAllState": {
                "!type": "fn() -> +android.os.Parcelable",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#saveAllState()"
              },
              "dispatchStart": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchStart()"
              },
              "doLoaderRetain": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#doLoaderRetain()"
              },
              "noteStateNotSaved": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#noteStateNotSaved()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getSupportLoaderManager": {
                "!type": "fn() -> +android.support.v4.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#getSupportLoaderManager()"
              },
              "dispatchContextItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchContextItemSelected(android.view.MenuItem)"
              },
              "retainLoaderNonConfig": {
                "!type": "fn() -> +android.support.v4.util.SimpleArrayMap",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#retainLoaderNonConfig()"
              },
              "execPendingActions": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#execPendingActions()"
              },
              "getSupportFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#getSupportFragmentManager()"
              },
              "dispatchLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchLowMemory()"
              },
              "dispatchActivityCreated": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentController.html#dispatchActivityCreated()"
              }
            }
          },
          "RemoteInput": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html",
            "Builder": {
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html",
              "!type": "fn(resultKey: string)",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "setLabel": {
                  "!type": "fn(label: +java.lang.CharSequence) -> +android.support.v4.app.RemoteInput.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#setLabel(java.lang.CharSequence)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "setChoices": {
                  "!type": "fn(choices: +java.newArray) -> +android.support.v4.app.RemoteInput.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#setChoices(java.lang.CharSequence[])"
                },
                "addExtras": {
                  "!type": "fn(extras: +android.os.Bundle) -> +android.support.v4.app.RemoteInput.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#addExtras(android.os.Bundle)"
                },
                "setAllowFreeFormInput": {
                  "!type": "fn(allowFreeFormInput: bool) -> +android.support.v4.app.RemoteInput.Builder",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#setAllowFreeFormInput(boolean)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "build": {
                  "!type": "fn() -> +android.support.v4.app.RemoteInput",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#build()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "getExtras": {
                  "!type": "fn() -> +android.os.Bundle",
                  "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html#getExtras()"
                }
              }
            },
            "EXTRA_RESULTS_DATA": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#EXTRA_RESULTS_DATA"
            },
            "RESULTS_CLIP_LABEL": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#RESULTS_CLIP_LABEL"
            },
            "FACTORY": {
              "!type": "+android.support.v4.app.RemoteInputCompatBase.RemoteInput.Factory",
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#FACTORY"
            },
            "getResultsFromIntent": {
              "!type": "fn(intent: +android.content.Intent) -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getResultsFromIntent(android.content.Intent)"
            },
            "addResultsToIntent": {
              "!type": "fn(remoteInputs: +java.newArray, intent: +android.content.Intent, results: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#addResultsToIntent(android.support.v4.app.RemoteInput[], android.content.Intent, android.os.Bundle)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getLabel": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getLabel()"
              },
              "getResultKey": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getResultKey()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getChoices": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getChoices()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getExtras": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getExtras()"
              },
              "getAllowFreeFormInput": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/RemoteInput.html#getAllowFreeFormInput()"
              }
            }
          },
          "LoaderManager": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html",
            "!type": "fn()",
            "enableDebugLogging": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#enableDebugLogging(boolean)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "destroyLoader": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#destroyLoader(int)"
              },
              "getLoader": {
                "!type": "fn(id: number) -> +android.support.v4.content.Loader",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#getLoader(int)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "restartLoader": {
                "!type": "fn(id: number, args: +android.os.Bundle, callback: +android.support.v4.app.LoaderManager.LoaderCallbacks) -> +android.support.v4.content.Loader",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#restartLoader(int, android.os.Bundle, android.support.v4.app.LoaderManager.LoaderCallbacks)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "initLoader": {
                "!type": "fn(id: number, args: +android.os.Bundle, callback: +android.support.v4.app.LoaderManager.LoaderCallbacks) -> +android.support.v4.content.Loader",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#initLoader(int, android.os.Bundle, android.support.v4.app.LoaderManager.LoaderCallbacks)"
              },
              "hasRunningLoaders": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/LoaderManager.html#hasRunningLoaders()"
              }
            }
          },
          "AppOpsManagerCompat23": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat23.html",
            "!type": "fn()",
            "noteProxyOp": {
              "!type": "fn(context: +android.content.Context, op: string, proxiedPackageName: string) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat23.html#noteProxyOp(android.content.Context, java.lang.String, java.lang.String)"
            },
            "permissionToOp": {
              "!type": "fn(permission: string) -> string",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat23.html#permissionToOp(java.lang.String)"
            },
            "noteOp": {
              "!type": "fn(context: +android.content.Context, op: string, uid: number, packageName: string) -> number",
              "!url": "http://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat23.html#noteOp(android.content.Context, java.lang.String, int, java.lang.String)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ActivityManagerCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityManagerCompat.html",
            "isLowRamDevice": {
              "!type": "fn(am: +android.app.ActivityManager) -> bool",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityManagerCompat.html#isLowRamDevice(android.app.ActivityManager)"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ActivityOptionsCompat": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html",
            "makeSceneTransitionAnimation": {
              "!type": "fn(activity: +android.app.Activity, sharedElement: +android.view.View, sharedElementName: string) -> +android.support.v4.app.ActivityOptionsCompat",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String)"
            },
            "makeCustomAnimation": {
              "!type": "fn(context: +android.content.Context, enterResId: number, exitResId: number) -> +android.support.v4.app.ActivityOptionsCompat",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#makeCustomAnimation(android.content.Context, int, int)"
            },
            "makeThumbnailScaleUpAnimation": {
              "!type": "fn(source: +android.view.View, thumbnail: +android.graphics.Bitmap, startX: number, startY: number) -> +android.support.v4.app.ActivityOptionsCompat",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int)"
            },
            "makeScaleUpAnimation": {
              "!type": "fn(source: +android.view.View, startX: number, startY: number, startWidth: number, startHeight: number) -> +android.support.v4.app.ActivityOptionsCompat",
              "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#makeScaleUpAnimation(android.view.View, int, int, int, int)"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "update": {
                "!type": "fn(otherOptions: +android.support.v4.app.ActivityOptionsCompat) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#update(android.support.v4.app.ActivityOptionsCompat)"
              },
              "toBundle": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html#toBundle()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "FragmentActivity": {
            "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html",
            "!type": "fn()",
            "BIND_WAIVE_PRIORITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
            },
            "RESULT_FIRST_USER": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
            },
            "DEFAULT_KEYS_SHORTCUT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
            },
            "MEDIA_PROJECTION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
            },
            "ETHERNET_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
            },
            "WIFI_RTT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
            },
            "SENSOR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
            },
            "TELEPHONY_SUBSCRIPTION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
            },
            "CAPTIONING_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
            },
            "CAMERA_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
            },
            "BIND_DEBUG_UNBIND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
            },
            "STATUS_BAR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
            },
            "DEVICE_POLICY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
            },
            "BIND_IMPORTANT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
            },
            "NSD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
            },
            "DOWNLOAD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
            },
            "BIND_NOT_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
            },
            "CONTEXT_IGNORE_SECURITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
            },
            "USAGE_STATS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
            },
            "MODE_WORLD_READABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
            },
            "KEYGUARD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
            },
            "BIND_ADJUST_WITH_ACTIVITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
            },
            "UI_MODE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
            },
            "MODE_PRIVATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
            },
            "CONTEXT_INCLUDE_CODE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
            },
            "DEFAULT_KEYS_DISABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
            },
            "ACCESSIBILITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
            },
            "HDMI_CONTROL_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
            },
            "BIND_SHOWING_UI": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
            },
            "MODE_APPEND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
            },
            "AUDIO_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
            },
            "NETWORK_SCORE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
            },
            "UPDATE_LOCK_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
            },
            "MEDIA_ROUTER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
            },
            "JOB_SCHEDULER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
            },
            "DEVICE_IDLE_CONTROLLER": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
            },
            "INPUT_METHOD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
            },
            "RESULT_CANCELED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
            },
            "BIND_ABOVE_CLIENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
            },
            "INPUT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
            },
            "MODE_WORLD_WRITEABLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
            },
            "NETWORKMANAGEMENT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
            },
            "WINDOW_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
            },
            "MEDIA_SESSION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
            },
            "WIFI_P2P_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
            },
            "DEFAULT_KEYS_SEARCH_GLOBAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
            },
            "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
            },
            "WIFI_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
            },
            "PERSISTENT_DATA_BLOCK_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
            },
            "TV_INPUT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
            },
            "SIP_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
            },
            "FINGERPRINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
            },
            "LOCATION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
            },
            "LAUNCHER_APPS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
            },
            "NETWORK_STATS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
            },
            "VOICE_INTERACTION_MANAGER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
            },
            "TELECOM_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
            },
            "SEARCH_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
            },
            "RADIO_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
            },
            "BIND_VISIBLE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
            },
            "BIND_NOT_FOREGROUND": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
            },
            "CONTEXT_RESTRICTED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
            },
            "USER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
            },
            "DROPBOX_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
            },
            "BIND_TREAT_LIKE_ACTIVITY": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
            },
            "DEFAULT_KEYS_SEARCH_LOCAL": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
            },
            "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
            },
            "CLIPBOARD_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
            },
            "LAYOUT_INFLATER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
            },
            "WIFI_SCANNING_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
            },
            "PRINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
            },
            "WALLPAPER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
            },
            "ALARM_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
            },
            "ACCOUNT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
            },
            "TRUST_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
            },
            "VIBRATOR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
            },
            "RESULT_OK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
            },
            "NFC_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
            },
            "NOTIFICATION_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
            },
            "BLUETOOTH_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
            },
            "POWER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
            },
            "BIND_ALLOW_OOM_MANAGEMENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
            },
            "DEFAULT_KEYS_DIALER": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
            },
            "BACKUP_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
            },
            "COUNTRY_DETECTOR": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
            },
            "SERIAL_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
            },
            "WIFI_PASSPOINT_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
            },
            "CONSUMER_IR_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
            },
            "APP_OPS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
            },
            "ACTIVITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
            },
            "STORAGE_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
            },
            "BIND_FOREGROUND_SERVICE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
            },
            "RESTRICTIONS_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
            },
            "CONNECTIVITY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
            },
            "TEXT_SERVICES_MANAGER_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
            },
            "USB_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
            },
            "APPWIDGET_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
            },
            "CONTEXT_REGISTER_PACKAGE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
            },
            "CARRIER_CONFIG_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
            },
            "NETWORK_POLICY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
            },
            "MIDI_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
            },
            "BATTERY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
            },
            "MODE_MULTI_PROCESS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
            },
            "BIND_AUTO_CREATE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
            },
            "DISPLAY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
            },
            "TELEPHONY_SERVICE": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
            },
            "prototype": {
              "isBackgroundVisibleBehind": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
              },
              "setProgressBarVisibility": {
                "!type": "fn(visible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
              },
              "setFeatureDrawableResource": {
                "!type": "fn(featureId: number, resId: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
              },
              "dispatchEnterAnimationComplete": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
              },
              "finishActivityFromChild": {
                "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
              },
              "startPostponedEnterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
              },
              "onProvideAssistContent": {
                "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
              },
              "sendBroadcastMultiplePermissions": {
                "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
              },
              "getString": {
                "!type": "fn(resId: number) -> string",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
              },
              "onKeyDown": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onKeyDown(int, android.view.KeyEvent)"
              },
              "getResources": {
                "!type": "fn() -> +android.content.res.Resources",
                "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
              },
              "sendStickyBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
              },
              "startActivityFromFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#startActivityFromFragment(android.support.v4.app.Fragment, android.content.Intent, int)"
              },
              "onCreateThumbnail": {
                "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
              },
              "getOpPackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
              },
              "getCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
              },
              "onWindowDismissed": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
              },
              "getBaseContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
              },
              "checkCallingOrSelfPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "isVoiceInteractionRoot": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
              },
              "onDetachedFromWindow": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
              },
              "setResult": {
                "!type": "fn(resultCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
              },
              "onOptionsItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
              },
              "isChangingConfigurations": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
              },
              "getCodeCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
              },
              "createPendingResult": {
                "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
              },
              "getPackageResourcePath": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
              },
              "getSupportLoaderManager": {
                "!type": "fn() -> +android.support.v4.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getSupportLoaderManager()"
              },
              "getCurrentFocus": {
                "!type": "fn() -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
              },
              "triggerSearch": {
                "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
              },
              "convertToTranslucent": {
                "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
              },
              "startActivityForResult": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#startActivityForResult(android.content.Intent, int)"
              },
              "getLayoutInflater": {
                "!type": "fn() -> +android.view.LayoutInflater",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
              },
              "createPackageContext": {
                "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
              },
              "enforcePermission": {
                "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
              },
              "onWindowStartingActionMode": {
                "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
              },
              "registerForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
              },
              "setSecondaryProgress": {
                "!type": "fn(secondaryProgress: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
              },
              "onContentChanged": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
              },
              "finishAndRemoveTask": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
              },
              "setFinishOnTouchOutside": {
                "!type": "fn(finish: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
              },
              "requestWindowFeature": {
                "!type": "fn(featureId: number) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
              },
              "createConfigurationContext": {
                "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
              },
              "showDialog": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
              },
              "onSearchRequested": {
                "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
              },
              "onContextItemSelected": {
                "!type": "fn(item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
              },
              "onTrackballEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
              },
              "requestPermissions": {
                "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
              },
              "getVoiceInteractor": {
                "!type": "fn() -> +android.app.VoiceInteractor",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
              },
              "peekWallpaper": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
              },
              "onPrepareOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
              },
              "onSaveInstanceState": {
                "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
              },
              "registerReceiver": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
              },
              "setActionBar": {
                "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
              },
              "getIntent": {
                "!type": "fn() -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
              },
              "getObbDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
              },
              "getPackageManager": {
                "!type": "fn() -> +android.content.pm.PackageManager",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
              },
              "getSystemServiceName": {
                "!type": "fn(serviceClass: +java.lang.Class) -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
              },
              "obtainStyledAttributes": {
                "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
                "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
              },
              "supportInvalidateOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#supportInvalidateOptionsMenu()"
              },
              "onRetainCustomNonConfigurationInstance": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onRetainCustomNonConfigurationInstance()"
              },
              "getApplicationInfo": {
                "!type": "fn() -> +android.content.pm.ApplicationInfo",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
              },
              "setDefaultKeyMode": {
                "!type": "fn(mode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
              },
              "setProgressBarIndeterminate": {
                "!type": "fn(indeterminate: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
              },
              "isRestricted": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
              },
              "hasWindowFocus": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
              },
              "onConfigurationChanged": {
                "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onConfigurationChanged(android.content.res.Configuration)"
              },
              "getVolumeControlStream": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
              },
              "databaseList": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
              },
              "setTheme": {
                "!type": "fn(resid: number) -> void",
                "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
              },
              "isChild": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
              },
              "isResumed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
              },
              "setRequestedOrientation": {
                "!type": "fn(requestedOrientation: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
              },
              "onNewActivityOptions": {
                "!type": "fn(options: +android.app.ActivityOptions) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
              },
              "startActivity": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
              },
              "onGenericMotionEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
              },
              "onWindowAttributesChanged": {
                "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
              },
              "onPostCreate": {
                "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
              },
              "onKeyUp": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
              },
              "enforceCallingOrSelfUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
              },
              "grantUriPermission": {
                "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
              },
              "startActivityAsCaller": {
                "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
              },
              "onActivityReenter": {
                "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
              },
              "dispatchKeyShortcutEvent": {
                "!type": "fn(event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
              },
              "onNavigateUpFromChild": {
                "!type": "fn(child: +android.app.Activity) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
              },
              "onEnterAnimationComplete": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
              },
              "setContentView": {
                "!type": "fn(layoutResID: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
              },
              "getPackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
              },
              "getActionBar": {
                "!type": "fn() -> +android.app.ActionBar",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
              },
              "isDestroyed": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
              },
              "sendBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "runOnUiThread": {
                "!type": "fn(action: +java.lang.Runnable) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
              },
              "stopLockTask": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
              },
              "createApplicationContext": {
                "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
              },
              "finishAffinity": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
              },
              "openContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
              },
              "setTaskDescription": {
                "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
              },
              "setTitleColor": {
                "!type": "fn(textColor: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
              },
              "showAssist": {
                "!type": "fn(args: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
              },
              "onVisibleBehindCanceled": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
              },
              "finishAfterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
              },
              "startServiceAsUser": {
                "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "onNavigateUp": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
              },
              "getActivityToken": {
                "!type": "fn() -> +android.os.IBinder",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
              },
              "onAttachFragment": {
                "!type": "fn(fragment: +android.support.v4.app.Fragment) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onAttachFragment(android.support.v4.app.Fragment)"
              },
              "getApplication": {
                "!type": "fn() -> +android.app.Application",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
              },
              "applyOverrideConfiguration": {
                "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
                "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
              },
              "fileList": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
              },
              "getTaskId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
              },
              "openOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
              },
              "onBackgroundVisibleBehindChanged": {
                "!type": "fn(visible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
              },
              "startNextMatchingActivity": {
                "!type": "fn(intent: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
              },
              "onPrepareNavigateUpTaskStack": {
                "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
              },
              "onActionModeFinished": {
                "!type": "fn(mode: +android.view.ActionMode) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
              },
              "getLocalClassName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
              },
              "managedQuery": {
                "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
              },
              "checkPermission": {
                "!type": "fn(permission: string, pid: number, uid: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
              },
              "getWallpaperDesiredMinimumHeight": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
              },
              "startManagingCursor": {
                "!type": "fn(c: +android.database.Cursor) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
              },
              "revokeUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
              },
              "onRequestPermissionsResult": {
                "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
              },
              "startActivityIfNeeded": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
              },
              "moveTaskToBack": {
                "!type": "fn(nonRoot: bool) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
              },
              "unregisterForContextMenu": {
                "!type": "fn(view: +android.view.View) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
              },
              "setPersistent": {
                "!type": "fn(isPersistent: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
              },
              "onUserInteraction": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
              },
              "setFeatureDrawableUri": {
                "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
              },
              "onStateNotSaved": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onStateNotSaved()"
              },
              "sendStickyOrderedBroadcast": {
                "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "sendStickyOrderedBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "setContentTransitionManager": {
                "!type": "fn(tm: +android.transition.TransitionManager) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
              },
              "getLoaderManager": {
                "!type": "fn() -> +android.app.LoaderManager",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
              },
              "onRetainNonConfigurationInstance": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onRetainNonConfigurationInstance()"
              },
              "getExternalFilesDir": {
                "!type": "fn(type: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
              },
              "bindService": {
                "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
              },
              "startActivitiesAsUser": {
                "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
              },
              "onRestoreInstanceState": {
                "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
              },
              "recreate": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
              },
              "getDatabasePath": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
              },
              "setEnterSharedElementCallback": {
                "!type": "fn(callback: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "onCreateContextMenu": {
                "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
              },
              "onProvideAssistData": {
                "!type": "fn(data: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
              },
              "checkSelfPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
              },
              "onPanelClosed": {
                "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onPanelClosed(int, android.view.Menu)"
              },
              "onCreate": {
                "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
              },
              "enforceCallingOrSelfPermission": {
                "!type": "fn(permission: string, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
              },
              "onTouchEvent": {
                "!type": "fn(event: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
              },
              "getTheme": {
                "!type": "fn() -> +android.content.res.Resources.Theme",
                "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
              },
              "onKeyLongPress": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
              },
              "setMediaController": {
                "!type": "fn(controller: +android.media.session.MediaController) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
              },
              "getChangingConfigurations": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
              },
              "finishActivity": {
                "!type": "fn(requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
              },
              "onCreatePanelView": {
                "!type": "fn(featureId: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
              },
              "getSearchEvent": {
                "!type": "fn() -> +android.view.SearchEvent",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
              },
              "setVisible": {
                "!type": "fn(visible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
              },
              "startIntentSender": {
                "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
              },
              "getExternalFilesDirs": {
                "!type": "fn(type: string) -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
              },
              "stopServiceAsUser": {
                "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "unbindService": {
                "!type": "fn(conn: +android.content.ServiceConnection) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
              },
              "startActivityAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "onKeyShortcut": {
                "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
              },
              "getSharedPrefsFile": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
              },
              "getDir": {
                "!type": "fn(name: string, mode: number) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
              },
              "releaseInstance": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
              },
              "onKeyMultiple": {
                "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
              },
              "onPreparePanel": {
                "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
              },
              "bindServiceAsUser": {
                "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
              },
              "closeContextMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
              },
              "startSearch": {
                "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
              },
              "getComponentName": {
                "!type": "fn() -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
              },
              "showLockTaskEscapeMessage": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
              },
              "getContentTransitionManager": {
                "!type": "fn() -> +android.transition.TransitionManager",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
              },
              "onBackPressed": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onBackPressed()"
              },
              "getExternalCacheDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
              },
              "getDrawable": {
                "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
              },
              "setImmersive": {
                "!type": "fn(i: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
              },
              "openFileOutput": {
                "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
              },
              "getAssets": {
                "!type": "fn() -> +android.content.res.AssetManager",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
              },
              "onLowMemory": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onLowMemory()"
              },
              "getParentActivityIntent": {
                "!type": "fn() -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
              },
              "convertFromTranslucent": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
              },
              "dispatchTouchEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getContentScene": {
                "!type": "fn() -> +android.transition.Scene",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
              },
              "getCallingPackage": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
              },
              "deleteDatabase": {
                "!type": "fn(name: string) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
              },
              "checkCallingPermission": {
                "!type": "fn(permission: string) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
              },
              "dispatchGenericMotionEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
              },
              "getExternalMediaDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
              },
              "getSupportFragmentManager": {
                "!type": "fn() -> +android.support.v4.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getSupportFragmentManager()"
              },
              "getCallingActivity": {
                "!type": "fn() -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
              },
              "onAttachedToWindow": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
              },
              "clearWallpaper": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
              },
              "setTitle": {
                "!type": "fn(title: +java.lang.CharSequence) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
              },
              "enforceCallingUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
              },
              "getThemeResId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
              },
              "onWindowFocusChanged": {
                "!type": "fn(hasFocus: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
              },
              "registerComponentCallbacks": {
                "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
                "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
              },
              "getText": {
                "!type": "fn(resId: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
              },
              "enforceUriPermission": {
                "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
              },
              "onProvideReferrer": {
                "!type": "fn() -> +android.net.Uri",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "unregisterComponentCallbacks": {
                "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
                "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
              },
              "finish": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
              },
              "getWallpaperDesiredMinimumWidth": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
              },
              "onMenuItemSelected": {
                "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onMenuItemSelected(int, android.view.MenuItem)"
              },
              "getWallpaper": {
                "!type": "fn() -> +android.graphics.drawable.Drawable",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
              },
              "isVoiceInteraction": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
              },
              "navigateUpTo": {
                "!type": "fn(upIntent: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
              },
              "onCreatePanelMenu": {
                "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onCreatePanelMenu(int, android.view.Menu)"
              },
              "openOrCreateDatabase": {
                "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
              },
              "openFileInput": {
                "!type": "fn(name: string) -> +java.io.FileInputStream",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
              },
              "dump": {
                "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
              },
              "onCreateDescription": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
              },
              "invalidateOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
              },
              "sendOrderedBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
              },
              "canStartActivityForResult": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
              },
              "setProgress": {
                "!type": "fn(progress: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
              },
              "navigateUpToFromChild": {
                "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
              },
              "getContentResolver": {
                "!type": "fn() -> +android.content.ContentResolver",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
              },
              "isFinishing": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
              },
              "getFragmentManager": {
                "!type": "fn() -> +android.app.FragmentManager",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
              },
              "getParent": {
                "!type": "fn() -> +android.app.Activity",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "checkCallingUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
              },
              "setExitSharedElementCallback": {
                "!type": "fn(listener: +android.support.v4.app.SharedElementCallback) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)"
              },
              "checkUriPermission": {
                "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
              },
              "setFeatureDrawableAlpha": {
                "!type": "fn(featureId: number, alpha: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
              },
              "supportFinishAfterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#supportFinishAfterTransition()"
              },
              "registerReceiverAsUser": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
              },
              "getPackageCodePath": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
              },
              "getWindow": {
                "!type": "fn() -> +android.view.Window",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
              },
              "startIntentSenderFromChild": {
                "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
              },
              "postponeEnterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
              },
              "shouldUpRecreateTask": {
                "!type": "fn(targetIntent: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
              },
              "removeStickyBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "deleteFile": {
                "!type": "fn(name: string) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
              },
              "onContextMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
              },
              "getLastCustomNonConfigurationInstance": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getLastCustomNonConfigurationInstance()"
              },
              "onCreateOptionsMenu": {
                "!type": "fn(menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
              },
              "getClassLoader": {
                "!type": "fn() -> +java.lang.ClassLoader",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
              },
              "dispatchPopulateAccessibilityEvent": {
                "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
              },
              "setIntent": {
                "!type": "fn(newIntent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
              },
              "supportStartPostponedEnterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#supportStartPostponedEnterTransition()"
              },
              "setVolumeControlStream": {
                "!type": "fn(streamType: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
              },
              "getObbDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
              },
              "startInstrumentation": {
                "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
              },
              "reportFullyDrawn": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
              },
              "setProgressBarIndeterminateVisibility": {
                "!type": "fn(visible: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
              },
              "finishFromChild": {
                "!type": "fn(child: +android.app.Activity) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
              },
              "getColorStateList": {
                "!type": "fn(id: number) -> +android.content.res.ColorStateList",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
              },
              "getTitleColor": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
              },
              "getMediaController": {
                "!type": "fn() -> +android.media.session.MediaController",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
              },
              "sendBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
              },
              "overridePendingTransition": {
                "!type": "fn(enterAnim: number, exitAnim: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
              },
              "dispatchTrackballEvent": {
                "!type": "fn(ev: +android.view.MotionEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
              },
              "getNoBackupFilesDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
              },
              "startActionMode": {
                "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
              },
              "getApplicationContext": {
                "!type": "fn() -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
              },
              "onCreateNavigateUpTaskStack": {
                "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
              },
              "createDisplayContext": {
                "!type": "fn(display: +android.view.Display) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
              },
              "onActionModeStarted": {
                "!type": "fn(mode: +android.view.ActionMode) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
              },
              "dispatchKeyEvent": {
                "!type": "fn(event: +android.view.KeyEvent) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
              },
              "enforceCallingPermission": {
                "!type": "fn(permission: string, message: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
              },
              "createPackageContextAsUser": {
                "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
              },
              "setFeatureDrawable": {
                "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
              },
              "dismissDialog": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
              },
              "onMenuOpened": {
                "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
              },
              "getSystemService": {
                "!type": "fn(name: string) -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
              },
              "validateRequestPermissionsRequestCode": {
                "!type": "fn(requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#validateRequestPermissionsRequestCode(int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "startActivities": {
                "!type": "fn(intents: +java.newArray) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
              },
              "startService": {
                "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
              },
              "getFileStreamPath": {
                "!type": "fn(name: string) -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
              },
              "addContentView": {
                "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
              },
              "closeOptionsMenu": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
              },
              "sendStickyBroadcastAsUser": {
                "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
              },
              "takeKeyEvents": {
                "!type": "fn(get: bool) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
              },
              "getTitle": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
              },
              "getWindowManager": {
                "!type": "fn() -> +android.view.WindowManager",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
              },
              "checkCallingOrSelfUriPermission": {
                "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
              },
              "getBasePackageName": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
              },
              "stopManagingCursor": {
                "!type": "fn(c: +android.database.Cursor) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
              },
              "setWallpaper": {
                "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
              },
              "sendOrderedBroadcast": {
                "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
              },
              "unregisterReceiver": {
                "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
              },
              "getColor": {
                "!type": "fn(id: number) -> number",
                "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
              },
              "getMenuInflater": {
                "!type": "fn() -> +android.view.MenuInflater",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
              },
              "stopService": {
                "!type": "fn(name: +android.content.Intent) -> bool",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
              },
              "getMainLooper": {
                "!type": "fn() -> +android.os.Looper",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
              },
              "startActivityFromChild": {
                "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
              },
              "startLockTask": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
              },
              "removeStickyBroadcast": {
                "!type": "fn(intent: +android.content.Intent) -> void",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
              },
              "getExternalCacheDirs": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
              },
              "getReferrer": {
                "!type": "fn() -> +android.net.Uri",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
              },
              "isImmersive": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
              },
              "shouldShowRequestPermissionRationale": {
                "!type": "fn(permission: string) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
              },
              "supportPostponeEnterTransition": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#supportPostponeEnterTransition()"
              },
              "getPreferences": {
                "!type": "fn(mode: number) -> +android.content.SharedPreferences",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
              },
              "getFilesDir": {
                "!type": "fn() -> +java.io.File",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
              },
              "findViewById": {
                "!type": "fn(id: number) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
              },
              "getSharedPreferences": {
                "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
              },
              "isTaskRoot": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
              },
              "getLastNonConfigurationInstance": {
                "!type": "fn() -> +java.lang.Object",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
              },
              "getDisplayAdjustments": {
                "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
              },
              "getRequestedOrientation": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
              },
              "onTrimMemory": {
                "!type": "fn(level: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
              },
              "removeDialog": {
                "!type": "fn(id: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
              },
              "getUserId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
              },
              "requestVisibleBehind": {
                "!type": "fn(visible: bool) -> bool",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
              },
              "onOptionsMenuClosed": {
                "!type": "fn(menu: +android.view.Menu) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
              },
              "onCreateView": {
                "!type": "fn(parent: +android.view.View, name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
                "!url": "http://developer.android.com/reference/android/support/v4/app/BaseFragmentActivityHoneycomb.html#onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)"
              },
              "startActivityForResultAsUser": {
                "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
              },
              "startIntentSenderForResult": {
                "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              }
            }
          }
        }
      }
    }
  }
}