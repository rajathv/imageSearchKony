{
  "android": {
    "preference": {
      "BridgePreferenceInflater": {
        "!url": "http://developer.android.com/reference/android/preference/BridgePreferenceInflater.html",
        "!type": "fn(context: +android.content.Context, preferenceManager: +android.preference.PreferenceManager)",
        "prototype": {
          "setFactory": {
            "!type": "fn(factory: +android.preference.GenericInflater.Factory) -> void",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#setFactory(android.preference.GenericInflater.Factory)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getFactory": {
            "!type": "fn() -> +android.preference.GenericInflater.Factory",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#getFactory()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setDefaultPackage": {
            "!type": "fn(defaultPackage: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#setDefaultPackage(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "createItem": {
            "!type": "fn(name: string, prefix: string, attrs: +android.util.AttributeSet) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#createItem(java.lang.String, java.lang.String, android.util.AttributeSet)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "cloneInContext": {
            "!type": "fn(newContext: +android.content.Context) -> +android.preference.GenericInflater",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceInflater.html#cloneInContext(android.content.Context)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "inflate": {
            "!type": "fn(resource: number, root: +android.preference.GenericInflater.Parent) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#inflate(int, P)"
          },
          "getDefaultPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/GenericInflater.html#getDefaultPackage()"
          }
        }
      },
      "DialogPreference": {
        "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          }
        }
      },
      "PreferenceGroup": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "addItemFromInflater": {
            "!type": "fn(preference: +android.preference.Preference) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addItemFromInflater(android.preference.Preference)"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setOrderingAsAdded": {
            "!type": "fn(orderingAsAdded: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#setOrderingAsAdded(boolean)"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "addPreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addPreference(android.preference.Preference)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "removeAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removeAll()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "getPreferenceCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreferenceCount()"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#findPreference(java.lang.CharSequence)"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getPreference": {
            "!type": "fn(index: number) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreference(int)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "removePreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removePreference(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "isOrderingAsAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#isOrderingAsAdded()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "ListPreferenceTest": {
        "!url": "http://developer.android.com/reference/android/preference/ListPreferenceTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testListPreferenceSummaryFromEntries": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreferenceTest.html#testListPreferenceSummaryFromEntries()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "SeekBarPreference": {
        "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "getProgress": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#getProgress()"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setMax": {
            "!type": "fn(max: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#setMax(int)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "onStartTrackingTouch": {
            "!type": "fn(seekBar: +android.widget.SeekBar) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#onStartTrackingTouch(android.widget.SeekBar)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#setProgress(int)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "onStopTrackingTouch": {
            "!type": "fn(seekBar: +android.widget.SeekBar) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#onStopTrackingTouch(android.widget.SeekBar)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onProgressChanged": {
            "!type": "fn(seekBar: +android.widget.SeekBar, progress: number, fromUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#onProgressChanged(android.widget.SeekBar, int, boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarPreference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "ListPreference": {
        "!url": "http://developer.android.com/reference/android/preference/ListPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "setValue": {
            "!type": "fn(value: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#setValue(java.lang.String)"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "getEntry": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#getEntry()"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "getValue": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#getValue()"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getEntries": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#getEntries()"
          },
          "setValueIndex": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#setValueIndex(int)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setEntryValues": {
            "!type": "fn(entryValues: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#setEntryValues(java.lang.CharSequence[])"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "findIndexOfValue": {
            "!type": "fn(value: string) -> number",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#findIndexOfValue(java.lang.String)"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getEntryValues": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#getEntryValues()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setEntries": {
            "!type": "fn(entries: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/ListPreference.html#setEntries(java.lang.CharSequence[])"
          }
        }
      },
      "Preference_Delegate": {
        "!url": "http://developer.android.com/reference/android/preference/Preference_Delegate.html",
        "!type": "fn()",
        "inflatePreference": {
          "!type": "fn(context: +android.content.Context, parser: +org.xmlpull.v1.XmlPullParser, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/preference/Preference_Delegate.html#inflatePreference(android.content.Context, org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "MultiCheckPreference": {
        "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "setValue": {
            "!type": "fn(index: number, state: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#setValue(int, boolean)"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "getValue": {
            "!type": "fn(index: number) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#getValue(int)"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setValues": {
            "!type": "fn(values: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#setValues(boolean[])"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getEntries": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#getEntries()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setEntryValues": {
            "!type": "fn(entryValues: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#setEntryValues(java.lang.String[])"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "findIndexOfValue": {
            "!type": "fn(value: string) -> number",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#findIndexOfValue(java.lang.String)"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getEntryValues": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#getEntryValues()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setEntries": {
            "!type": "fn(entries: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#setEntries(java.lang.CharSequence[])"
          },
          "getValues": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/MultiCheckPreference.html#getValues()"
          }
        }
      },
      "PreferenceFragment": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html",
        "!type": "fn()",
        "instantiate": {
          "!type": "fn(context: +android.content.Context, fname: string) -> +android.app.Fragment",
          "!url": "http://developer.android.com/reference/android/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
        },
        "prototype": {
          "getReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReturnTransition()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#hashCode()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isResumed()"
          },
          "setSharedElementReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementReturnTransition(android.transition.Transition)"
          },
          "hasListView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#hasListView()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onResume()"
          },
          "getReenterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReenterTransition()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getString(int)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onDestroy()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTag()"
          },
          "isRemoving": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isRemoving()"
          },
          "onDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDetach()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getFragmentManager()"
          },
          "setHasOptionsMenu": {
            "!type": "fn(hasMenu: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu(boolean)"
          },
          "setEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterTransition(android.transition.Transition)"
          },
          "addPreferencesFromResource": {
            "!type": "fn(preferencesResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#addPreferencesFromResource(int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#getListView()"
          },
          "getParentFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getParentFragment()"
          },
          "setInitialSavedState": {
            "!type": "fn(state: +android.app.Fragment.SavedState) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setInitialSavedState(android.app.Fragment.SavedState)"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getId()"
          },
          "getSharedElementReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementReturnTransition()"
          },
          "setPreferenceScreen": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#setPreferenceScreen(android.preference.PreferenceScreen)"
          },
          "getAllowEnterTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowEnterTransitionOverlap()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "setMenuVisibility": {
            "!type": "fn(menuVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setMenuVisibility(boolean)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#getPreferenceManager()"
          },
          "isDetached": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isDetached()"
          },
          "getPreferenceScreen": {
            "!type": "fn() -> +android.preference.PreferenceScreen",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#getPreferenceScreen()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#equals(java.lang.Object)"
          },
          "onViewCreated": {
            "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
          },
          "getSharedElementEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementEnterTransition()"
          },
          "getEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getEnterTransition()"
          },
          "setUserVisibleHint": {
            "!type": "fn(isVisibleToUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setUserVisibleHint(boolean)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onCreate(android.os.Bundle)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onLowMemory()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getContext()"
          },
          "getExitTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getExitTransition()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAllowEnterTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onActivityResult(int, int, android.content.Intent)"
          },
          "setExitSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isHidden()"
          },
          "onViewStateRestored": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "getView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getView()"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "setArguments": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setArguments(android.os.Bundle)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getText(int)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onStop()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isInLayout()"
          },
          "setSharedElementEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementEnterTransition(android.transition.Transition)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onSaveInstanceState(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivity(android.content.Intent)"
          },
          "getTargetFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetFragment()"
          },
          "getArguments": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getArguments()"
          },
          "isAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isAdded()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onStart()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onTrimMemory(int)"
          },
          "setExitTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitTransition(android.transition.Transition)"
          },
          "onDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onDestroyView()"
          },
          "onCreateView": {
            "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
          },
          "getUserVisibleHint": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getUserVisibleHint()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLoaderManager()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#unregisterForContextMenu(android.view.View)"
          },
          "getRetainInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getRetainInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#toString()"
          },
          "getHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getHost()"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#requestPermissions(java.lang.String[], int)"
          },
          "onInflate": {
            "!type": "fn(attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onInflate(android.util.AttributeSet, android.os.Bundle)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu(android.view.View)"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getActivity()"
          },
          "getAllowReturnTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowReturnTransitionOverlap()"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#findPreference(java.lang.CharSequence)"
          },
          "setTargetFragment": {
            "!type": "fn(fragment: +android.app.Fragment, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setTargetFragment(android.app.Fragment, int)"
          },
          "onDestroyOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyOptionsMenu()"
          },
          "onActivityCreated": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onActivityCreated(android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onHiddenChanged": {
            "!type": "fn(hidden: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onHiddenChanged(boolean)"
          },
          "setReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReturnTransition(android.transition.Transition)"
          },
          "onAttach": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onAttach(android.content.Context)"
          },
          "setRetainInstance": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setRetainInstance(boolean)"
          },
          "setAllowReturnTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
          },
          "getTargetRequestCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetRequestCode()"
          },
          "getChildFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isVisible()"
          },
          "setEnterSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "onPreferenceTreeClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen, preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#onPreferenceTreeClick(android.preference.PreferenceScreen, android.preference.Preference)"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPause()"
          },
          "setReenterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReenterTransition(android.transition.Transition)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
          },
          "addPreferencesFromIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFragment.html#addPreferencesFromIntent(android.content.Intent)"
          },
          "onCreateAnimator": {
            "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.animation.Animator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateAnimator(int, boolean, int)"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getResources()"
          }
        }
      },
      "VolumePreference": {
        "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "VolumeStore": {
          "!url": "http://developer.android.com/reference/android/preference/VolumePreference.VolumeStore.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "onProgressChanged": {
            "!type": "fn(seekBar: +android.widget.SeekBar, progress: number, fromTouch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#onProgressChanged(android.widget.SeekBar, int, boolean)"
          },
          "createActionButtons": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarDialogPreference.html#createActionButtons()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setStreamType": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#setStreamType(int)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "onMuted": {
            "!type": "fn(muted: bool, zenMuted: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#onMuted(boolean, boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "onActivityStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#onActivityStop()"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "onSampleStarting": {
            "!type": "fn(volumizer: +android.preference.SeekBarVolumizer) -> void",
            "!url": "http://developer.android.com/reference/android/preference/VolumePreference.html#onSampleStarting(android.preference.SeekBarVolumizer)"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          }
        }
      },
      "PreferenceGroupAdapter": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html",
        "!type": "fn(preferenceGroup: +android.preference.PreferenceGroup)",
        "prototype": {
          "areAllItemsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#areAllItemsEnabled()"
          },
          "getView": {
            "!type": "fn(position: number, convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getView(int, android.view.View, android.view.ViewGroup)"
          },
          "getViewTypeCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getViewTypeCount()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "notifyDataSetChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#notifyDataSetChanged()"
          },
          "setHighlightedDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#setHighlightedDrawable(android.graphics.drawable.Drawable)"
          },
          "getDropDownView": {
            "!type": "fn(position: number, convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#getDropDownView(int, android.view.View, android.view.ViewGroup)"
          },
          "notifyDataSetInvalidated": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#notifyDataSetInvalidated()"
          },
          "getItem": {
            "!type": "fn(position: number) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getItem(int)"
          },
          "getItemId": {
            "!type": "fn(position: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getItemId(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#isEmpty()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/widget/BaseAdapter.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "onPreferenceHierarchyChange": {
            "!type": "fn(preference: +android.preference.Preference) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#onPreferenceHierarchyChange(android.preference.Preference)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreferenceChange": {
            "!type": "fn(preference: +android.preference.Preference) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#onPreferenceChange(android.preference.Preference)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getCount()"
          },
          "getItemViewType": {
            "!type": "fn(position: number) -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#getItemViewType(int)"
          },
          "hasStableIds": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#hasStableIds()"
          },
          "isEnabled": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#isEnabled(int)"
          },
          "setHighlighted": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroupAdapter.html#setHighlighted(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "PreferenceActivity": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html",
        "!type": "fn()",
        "Header": {
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#CREATOR"
          },
          "prototype": {
            "getBreadCrumbTitle": {
              "!type": "fn(res: +android.content.res.Resources) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#getBreadCrumbTitle(android.content.res.Resources)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#describeContents()"
            },
            "getBreadCrumbShortTitle": {
              "!type": "fn(res: +android.content.res.Resources) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#getBreadCrumbShortTitle(android.content.res.Resources)"
            },
            "getTitle": {
              "!type": "fn(res: +android.content.res.Resources) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#getTitle(android.content.res.Resources)"
            },
            "getSummary": {
              "!type": "fn(res: +android.content.res.Resources) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#getSummary(android.content.res.Resources)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(in: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.Header.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "EXTRA_SHOW_FRAGMENT_TITLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#EXTRA_SHOW_FRAGMENT_TITLE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "EXTRA_SHOW_FRAGMENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#EXTRA_SHOW_FRAGMENT"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "EXTRA_SHOW_FRAGMENT_SHORT_TITLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#EXTRA_SHOW_FRAGMENT_SHORT_TITLE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "HEADER_ID_UNDEFINED": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#HEADER_ID_UNDEFINED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "EXTRA_SHOW_FRAGMENT_ARGUMENTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#EXTRA_SHOW_FRAGMENT_ARGUMENTS"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "EXTRA_NO_HEADERS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#EXTRA_NO_HEADERS"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "onPreferenceTreeClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen, preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onPreferenceTreeClick(android.preference.PreferenceScreen, android.preference.Preference)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onGetInitialHeader": {
            "!type": "fn() -> +android.preference.PreferenceActivity.Header",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onGetInitialHeader()"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "setListAdapter": {
            "!type": "fn(adapter: +android.widget.ListAdapter) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setListAdapter(android.widget.ListAdapter)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "setListFooter": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#setListFooter(android.view.View)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "addPreferencesFromIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#addPreferencesFromIntent(android.content.Intent)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "onPreferenceStartFragment": {
            "!type": "fn(caller: +android.preference.PreferenceFragment, pref: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onPreferenceStartFragment(android.preference.PreferenceFragment, android.preference.Preference)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getSelectedItemId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemId()"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#getPreferenceManager()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "onIsHidingHeaders": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onIsHidingHeaders()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "setSelection": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setSelection(int)"
          },
          "onIsMultiPane": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onIsMultiPane()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "setParentTitle": {
            "!type": "fn(title: +java.lang.CharSequence, shortTitle: +java.lang.CharSequence, listener: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#setParentTitle(java.lang.CharSequence, java.lang.CharSequence, android.view.View.OnClickListener)"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "hasHeaders": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#hasHeaders()"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "switchToHeader": {
            "!type": "fn(fragmentName: string, args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#switchToHeader(java.lang.String, android.os.Bundle)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "invalidateHeaders": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#invalidateHeaders()"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "getListAdapter": {
            "!type": "fn() -> +android.widget.ListAdapter",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListAdapter()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onGetNewHeader": {
            "!type": "fn() -> +android.preference.PreferenceActivity.Header",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onGetNewHeader()"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "addPreferencesFromResource": {
            "!type": "fn(preferencesResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#addPreferencesFromResource(int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "onBuildStartFragmentIntent": {
            "!type": "fn(fragmentName: string, args: +android.os.Bundle, titleRes: number, shortTitleRes: number) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onBuildStartFragmentIntent(java.lang.String, android.os.Bundle, int, int)"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "startPreferenceFragment": {
            "!type": "fn(fragment: +android.app.Fragment, push: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#startPreferenceFragment(android.app.Fragment, boolean)"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "isMultiPane": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#isMultiPane()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "loadHeadersFromResource": {
            "!type": "fn(resid: number, target: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#loadHeadersFromResource(int, java.util.List)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "startWithFragment": {
            "!type": "fn(fragmentName: string, args: +android.os.Bundle, resultTo: +android.app.Fragment, resultRequestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#startWithFragment(java.lang.String, android.os.Bundle, android.app.Fragment, int)"
          },
          "getSelectedItemPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemPosition()"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "setPreferenceScreen": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#setPreferenceScreen(android.preference.PreferenceScreen)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "finishPreferencePanel": {
            "!type": "fn(caller: +android.app.Fragment, resultCode: number, resultData: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#finishPreferencePanel(android.app.Fragment, int, android.content.Intent)"
          },
          "startPreferencePanel": {
            "!type": "fn(fragmentClass: string, args: +android.os.Bundle, titleRes: number, titleText: +java.lang.CharSequence, resultTo: +android.app.Fragment, resultRequestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#startPreferencePanel(java.lang.String, android.os.Bundle, int, java.lang.CharSequence, android.app.Fragment, int)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onHeaderClick": {
            "!type": "fn(header: +android.preference.PreferenceActivity.Header, position: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onHeaderClick(android.preference.PreferenceActivity.Header, int)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "onBuildHeaders": {
            "!type": "fn(target: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#onBuildHeaders(java.util.List)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getHeaders": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#getHeaders()"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "showBreadCrumbs": {
            "!type": "fn(title: +java.lang.CharSequence, shortTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#showBreadCrumbs(java.lang.CharSequence, java.lang.CharSequence)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getPreferenceScreen": {
            "!type": "fn() -> +android.preference.PreferenceScreen",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#getPreferenceScreen()"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceActivity.html#findPreference(java.lang.CharSequence)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListView()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "CheckBoxPreference": {
        "!url": "http://developer.android.com/reference/android/preference/CheckBoxPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getSummaryOn": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOn()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getSummaryOff": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOff()"
          },
          "isChecked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#isChecked()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setDisableDependentsState": {
            "!type": "fn(disableDependentsState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setDisableDependentsState(boolean)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setChecked": {
            "!type": "fn(checked: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setChecked(boolean)"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setSummaryOn": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOn(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "setSummaryOff": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOff(java.lang.CharSequence)"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getDisableDependentsState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getDisableDependentsState()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "Preference": {
        "!url": "http://developer.android.com/reference/android/preference/Preference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "BaseSavedState": {
          "!url": "http://developer.android.com/reference/android/preference/Preference.BaseSavedState.html",
          "!type": "fn(source: +android.os.Parcel)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/preference/Preference.BaseSavedState.html#CREATOR"
          },
          "EMPTY_STATE": {
            "!type": "+android.view.AbsSavedState",
            "!url": "http://developer.android.com/reference/android/view/AbsSavedState.html#EMPTY_STATE"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/AbsSavedState.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/AbsSavedState.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getSuperState": {
              "!type": "fn() -> +android.os.Parcelable",
              "!url": "http://developer.android.com/reference/android/view/AbsSavedState.html#getSuperState()"
            }
          }
        },
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "MultiSelectListPreference": {
        "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setValues": {
            "!type": "fn(values: +java.util.Set) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#setValues(java.util.Set)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getEntries": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#getEntries()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setEntryValues": {
            "!type": "fn(entryValues: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#setEntryValues(java.lang.CharSequence[])"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "findIndexOfValue": {
            "!type": "fn(value: string) -> number",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#findIndexOfValue(java.lang.String)"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getEntryValues": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#getEntryValues()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setEntries": {
            "!type": "fn(entries: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#setEntries(java.lang.CharSequence[])"
          },
          "getValues": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/android/preference/MultiSelectListPreference.html#getValues()"
          }
        }
      },
      "PreferenceCategory": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceCategory.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "addItemFromInflater": {
            "!type": "fn(preference: +android.preference.Preference) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addItemFromInflater(android.preference.Preference)"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setOrderingAsAdded": {
            "!type": "fn(orderingAsAdded: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#setOrderingAsAdded(boolean)"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "addPreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addPreference(android.preference.Preference)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "removeAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removeAll()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "getPreferenceCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreferenceCount()"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#findPreference(java.lang.CharSequence)"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceCategory.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceCategory.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getPreference": {
            "!type": "fn(index: number) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreference(int)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "removePreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removePreference(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "isOrderingAsAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#isOrderingAsAdded()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "SwitchPreference": {
        "!url": "http://developer.android.com/reference/android/preference/SwitchPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getSummaryOn": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOn()"
          },
          "setSwitchTextOff": {
            "!type": "fn(offText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SwitchPreference.html#setSwitchTextOff(java.lang.CharSequence)"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getSummaryOff": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOff()"
          },
          "isChecked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#isChecked()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setDisableDependentsState": {
            "!type": "fn(disableDependentsState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setDisableDependentsState(boolean)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setChecked": {
            "!type": "fn(checked: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setChecked(boolean)"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "getSwitchTextOn": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/SwitchPreference.html#getSwitchTextOn()"
          },
          "setSummaryOn": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOn(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "getSwitchTextOff": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/SwitchPreference.html#getSwitchTextOff()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "setSummaryOff": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOff(java.lang.CharSequence)"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getDisableDependentsState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getDisableDependentsState()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setSwitchTextOn": {
            "!type": "fn(onText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SwitchPreference.html#setSwitchTextOn(java.lang.CharSequence)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "RingtonePreference": {
        "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getShowDefault": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#getShowDefault()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "getRingtoneType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#getRingtoneType()"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setRingtoneType": {
            "!type": "fn(type: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#setRingtoneType(int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getShowSilent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#getShowSilent()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#onActivityResult(int, int, android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "setShowDefault": {
            "!type": "fn(showDefault: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#setShowDefault(boolean)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setShowSilent": {
            "!type": "fn(showSilent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/RingtonePreference.html#setShowSilent(boolean)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "SeekBarDialogPreference": {
        "!url": "http://developer.android.com/reference/android/preference/SeekBarDialogPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "createActionButtons": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarDialogPreference.html#createActionButtons()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          }
        }
      },
      "PreferenceScreen": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "addPreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addPreference(android.preference.Preference)"
          },
          "getPreference": {
            "!type": "fn(index: number) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreference(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "addItemFromInflater": {
            "!type": "fn(preference: +android.preference.Preference) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#addItemFromInflater(android.preference.Preference)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "getRootAdapter": {
            "!type": "fn() -> +android.widget.ListAdapter",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html#getRootAdapter()"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "getPreferenceCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#getPreferenceCount()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "onItemClick": {
            "!type": "fn(parent: +android.widget.AdapterView, view: +android.view.View, position: number, id: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html#onItemClick(android.widget.AdapterView, android.view.View, int, long)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "removeAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removeAll()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#findPreference(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "bind": {
            "!type": "fn(listView: +android.widget.ListView) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceScreen.html#bind(android.widget.ListView)"
          },
          "removePreference": {
            "!type": "fn(preference: +android.preference.Preference) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#removePreference(android.preference.Preference)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "isOrderingAsAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#isOrderingAsAdded()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOrderingAsAdded": {
            "!type": "fn(orderingAsAdded: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceGroup.html#setOrderingAsAdded(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          }
        }
      },
      "PreferenceFrameLayout": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceFrameLayout.html",
        "!type": "fn(context: +android.content.Context)",
        "LayoutParams": {
          "!url": "http://developer.android.com/reference/android/preference/PreferenceFrameLayout.LayoutParams.html",
          "!type": "fn(c: +android.content.Context, attrs: +android.util.AttributeSet)",
          "WRAP_CONTENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#WRAP_CONTENT"
          },
          "MATCH_PARENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#MATCH_PARENT"
          },
          "FILL_PARENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#FILL_PARENT"
          },
          "DEFAULT_MARGIN_RELATIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#DEFAULT_MARGIN_RELATIVE"
          },
          "prototype": {
            "isLayoutRtl": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#isLayoutRtl()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setLayoutDirection": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setLayoutDirection(int)"
            },
            "setMarginStart": {
              "!type": "fn(start: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginStart(int)"
            },
            "copyMarginsFrom": {
              "!type": "fn(source: +android.view.ViewGroup.MarginLayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#copyMarginsFrom(android.view.ViewGroup.MarginLayoutParams)"
            },
            "resolveLayoutDirection": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#resolveLayoutDirection(int)"
            },
            "isMarginRelative": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#isMarginRelative()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setMarginEnd": {
              "!type": "fn(end: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginEnd(int)"
            },
            "debug": {
              "!type": "fn(output: string) -> string",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#debug(java.lang.String)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setMarginsRelative": {
              "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginsRelative(int, int, int, int)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "getMarginStart": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getMarginStart()"
            },
            "setMargins": {
              "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMargins(int, int, int, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onDebugDraw": {
              "!type": "fn(view: +android.view.View, canvas: +android.graphics.Canvas, paint: +android.graphics.Paint) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#onDebugDraw(android.view.View, android.graphics.Canvas, android.graphics.Paint)"
            },
            "getLayoutDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getLayoutDirection()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getMarginEnd": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getMarginEnd()"
            }
          }
        },
        "OVER_SCROLL_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
        },
        "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
        },
        "LAYOUT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
        },
        "ACCESSIBILITY_LIVE_REGION_POLITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
        },
        "SCROLL_INDICATOR_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
        },
        "TEXT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
        },
        "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
        },
        "LAYOUT_MODE_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
        },
        "ROTATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
        },
        "ROTATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
        },
        "STATUS_BAR_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
        },
        "SCROLL_AXIS_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
        },
        "TEXT_ALIGNMENT_VIEW_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
        },
        "TRANSLATION_Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
        },
        "FOCUS_BLOCK_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
        },
        "TRANSLATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
        },
        "INVISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
        },
        "TRANSLATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
        },
        "SCROLL_INDICATOR_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
        },
        "NO_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
        },
        "LAYOUT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
        },
        "SOUND_EFFECTS_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
        },
        "TEXT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
        },
        "ALPHA": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
        },
        "LAYER_TYPE_HARDWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
        },
        "TEXT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
        },
        "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
        },
        "DRAWING_CACHE_QUALITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
        },
        "FOCUS_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
        },
        "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
        },
        "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
        },
        "LAYER_TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
        },
        "TEXT_ALIGNMENT_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
        },
        "STATUS_BAR_DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
        },
        "PERSISTENT_ALL_CACHES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
        },
        "FOCUSABLES_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
        },
        "SCROLL_AXIS_VERTICAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
        },
        "STATUS_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
        },
        "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
        },
        "DEBUG_DRAW": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
        },
        "SCALE_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
        },
        "SCALE_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
        },
        "SCROLLBAR_POSITION_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
        },
        "STATUS_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
        },
        "LAYOUT_MODE_OPTICAL_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
        },
        "LAYOUT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
        },
        "NAVIGATION_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
        },
        "GONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
        },
        "SCROLLBARS_INSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
        },
        "FOCUS_BACKWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
        },
        "FOCUS_AFTER_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
        },
        "STATUS_BAR_DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
        },
        "STATUS_BAR_DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
        },
        "FOCUSABLES_TOUCH_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
        },
        "SYSTEM_UI_LAYOUT_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
        },
        "HAPTIC_FEEDBACK_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
        },
        "STATUS_BAR_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
        },
        "FOCUS_FORWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
        },
        "LAYOUT_MODE_CLIP_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
        },
        "DRAG_FLAG_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
        },
        "SYSTEM_UI_FLAG_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
        },
        "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
        },
        "STATUS_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
        },
        "MEASURED_STATE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
        },
        "ACCESSIBILITY_LIVE_REGION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
        },
        "SCROLLBARS_OUTSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
        },
        "TEXT_ALIGNMENT_GRAVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
        },
        "DRAWING_CACHE_QUALITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
        },
        "TEXT_ALIGNMENT_VIEW_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
        },
        "Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Z"
        },
        "Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Y"
        },
        "X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#X"
        },
        "SCROLL_INDICATOR_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
        },
        "VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
        },
        "TEXT_ALIGNMENT_TEXT_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
        },
        "SCROLL_AXIS_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
        },
        "OVER_SCROLL_IF_CONTENT_SCROLLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
        },
        "FOCUS_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
        },
        "OVER_SCROLL_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
        },
        "TEXT_DIRECTION_FIRST_STRONG_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
        },
        "SCROLL_INDICATOR_BOTTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
        },
        "NAVIGATION_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
        },
        "SYSTEM_UI_TRANSPARENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
        },
        "SCREEN_STATE_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
        },
        "PERSISTENT_ANIMATION_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
        },
        "TEXT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
        },
        "SCROLLBARS_INSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
        },
        "ROTATION": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
        },
        "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
        },
        "SCROLL_INDICATOR_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
        },
        "NAVIGATION_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
        },
        "MEASURED_HEIGHT_STATE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
        },
        "TEXT_DIRECTION_FIRST_STRONG_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
        },
        "KEEP_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
        },
        "TEXT_DIRECTION_FIRST_STRONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
        },
        "STATUS_BAR_DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
        },
        "STATUS_BAR_DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
        },
        "FOCUS_BEFORE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
        },
        "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
        },
        "SCREEN_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
        },
        "TEXT_ALIGNMENT_TEXT_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
        },
        "SYSTEM_UI_FLAG_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
        },
        "FIND_VIEWS_WITH_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
        },
        "PERSISTENT_NO_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
        },
        "STATUS_BAR_DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
        },
        "STATUS_BAR_DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
        },
        "DRAWING_CACHE_QUALITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
        },
        "PERSISTENT_SCROLLING_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
        },
        "SCROLL_INDICATOR_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
        },
        "MEASURED_STATE_TOO_SMALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
        },
        "TEXT_ALIGNMENT_CENTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
        },
        "SCROLLBARS_OUTSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
        },
        "TEXT_DIRECTION_ANY_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
        },
        "LAYER_TYPE_SOFTWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
        },
        "MEASURED_SIZE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
        },
        "mDebugViewAttributes": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
        },
        "SCROLLBAR_POSITION_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
        },
        "LAYOUT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
        },
        "LAYOUT_DIRECTION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
        },
        "SCROLLBAR_POSITION_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
        },
        "RECENT_APPS_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
        },
        "DEBUG_LAYOUT_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
        },
        "SYSTEM_UI_CLEARABLE_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
        },
        "FOCUS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
        },
        "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
        },
        "SYSTEM_UI_FLAG_LOW_PROFILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
        },
        "FOCUS_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
        },
        "getDefaultSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
        },
        "combineMeasuredStates": {
          "!type": "fn(curState: number, newState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
        },
        "getChildMeasureSpec": {
          "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
        },
        "resolveSizeAndState": {
          "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
        },
        "resolveSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
        },
        "generateViewId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
        },
        "isLayoutModeOptical": {
          "!type": "fn(o: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
        },
        "inflate": {
          "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
        },
        "prototype": {
          "setFitsSystemWindows": {
            "!type": "fn(fitSystemWindows: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
          },
          "dispatchSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "isScrollbarFadingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
          },
          "setPressed": {
            "!type": "fn(pressed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
          },
          "startAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
          },
          "getDrawingTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
          },
          "setHorizontalScrollBarEnabled": {
            "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
          },
          "setTagInternal": {
            "!type": "fn(key: number, tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
          },
          "removeCallbacks": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
          },
          "isShown": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)"
          },
          "cancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
          },
          "setTransitionVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
          },
          "getClipChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
          },
          "setVerticalScrollBarEnabled": {
            "!type": "fn(verticalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
          },
          "getRawLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
          },
          "setRight": {
            "!type": "fn(right: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
          },
          "getAccessibilityClassName": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#getAccessibilityClassName()"
          },
          "getNextFocusDownId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
          },
          "onRequestSendAccessibilityEventInternal": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "getTransitionName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
          },
          "getTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
          },
          "dispatchNestedFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "setScrollContainer": {
            "!type": "fn(isScrollContainer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
          },
          "getVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
          },
          "requestFitSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
          },
          "setAccessibilitySelection": {
            "!type": "fn(start: number, end: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
          },
          "getLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
          },
          "dispatchWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowFocusChanged(boolean)"
          },
          "findViewByPredicateInsideOut": {
            "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
          },
          "getForeground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
          },
          "requestChildRectangleOnScreen": {
            "!type": "fn(child: +android.view.View, rectangle: +android.graphics.Rect, immediate: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
          },
          "performAccessibilityActionInternal": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
          },
          "getClipToOutline": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
          },
          "setMeasureAllChildren": {
            "!type": "fn(measureAll: bool) -> void",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#setMeasureAllChildren(boolean)"
          },
          "isSelected": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
          },
          "scrollBy": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
          },
          "hasNestedScrollingParent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
          },
          "getGlobalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
          },
          "setKeepScreenOn": {
            "!type": "fn(keepScreenOn: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
          },
          "setTranslationZ": {
            "!type": "fn(translationZ: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
          },
          "setTranslationY": {
            "!type": "fn(translationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
          },
          "setTranslationX": {
            "!type": "fn(translationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
          },
          "setDuplicateParentStateEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
          },
          "onFilterTouchEventForSecurity": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
          },
          "setTop": {
            "!type": "fn(top: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
          },
          "getHardwareRenderer": {
            "!type": "fn() -> +android.view.HardwareRenderer",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
          },
          "onInterceptHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
          },
          "getLocationInWindow": {
            "!type": "fn(location: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
          },
          "pointInView": {
            "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
          },
          "setAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
          },
          "getConsiderGoneChildrenWhenMeasuring": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#getConsiderGoneChildrenWhenMeasuring()"
          },
          "setAnimationMatrix": {
            "!type": "fn(matrix: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
          },
          "getApplicationWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
          },
          "resetRtlProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
          },
          "getMeasuredHeightAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
          },
          "getDrawingCacheBackgroundColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
          },
          "resolveRtlPropertiesIfNeeded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
          },
          "transformMatrixToGlobal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
          },
          "setClickable": {
            "!type": "fn(clickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
          },
          "offsetLeftAndRight": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
          },
          "getFilterTouchesWhenObscured": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
          },
          "performAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
          },
          "isHorizontalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
          },
          "setBackgroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "createContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
          },
          "getCameraDistance": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
          },
          "isPressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
          },
          "getScrollBarStyle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
          },
          "setSoundEffectsEnabled": {
            "!type": "fn(soundEffectsEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
          },
          "setLayoutMode": {
            "!type": "fn(layoutMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
          },
          "performHapticFeedback": {
            "!type": "fn(feedbackConstant: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "getLayoutMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
          },
          "getWindowSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
          },
          "getPersistentDrawingCache": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
          },
          "animate": {
            "!type": "fn() -> +android.view.ViewPropertyAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
          },
          "addView": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFrameLayout.html#addView(android.view.View)"
          },
          "getOnFocusChangeListener": {
            "!type": "fn() -> +android.view.View.OnFocusChangeListener",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
          },
          "isPaddingRelative": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
          },
          "hasOverlappingRendering": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
          },
          "setBottom": {
            "!type": "fn(bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
          },
          "isTextAlignmentInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
          },
          "onHoverChanged": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
          },
          "sendAccessibilityEventInternal": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
          },
          "canHaveDisplayList": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
          },
          "dispatchStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
          },
          "onResolveDrawables": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
          },
          "setLongClickable": {
            "!type": "fn(longClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
          },
          "dispatchNestedScroll": {
            "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
          },
          "getScrollBarFadeDuration": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
          },
          "removeAllViewsInLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
          },
          "setOnKeyListener": {
            "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
          },
          "sendAccessibilityEventUnchecked": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
          },
          "onCreateInputConnection": {
            "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
          },
          "performContextClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
          },
          "isHovered": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
          },
          "getScrollBarDefaultDelayBeforeFade": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
          },
          "setVerticalScrollbarPosition": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
          },
          "setVerticalFadingEdgeEnabled": {
            "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
          },
          "setVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
          },
          "suppressLayout": {
            "!type": "fn(suppress: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
          },
          "getTranslationZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
          },
          "getKeepScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
          },
          "getTranslationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
          },
          "getAnimation": {
            "!type": "fn() -> +android.view.animation.Animation",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
          },
          "getTranslationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
          },
          "setForeground": {
            "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "dispatchWindowVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
          },
          "setForegroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
          },
          "shouldDelayChildPressedState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#shouldDelayChildPressedState()"
          },
          "onInitializeAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "postOnAnimationDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
          },
          "postInvalidateOnAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
          },
          "resetResolvedLayoutDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
          },
          "getInverseMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
          },
          "setSystemUiVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
          },
          "isScrollContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
          },
          "onNestedScrollAccepted": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
          },
          "getLabelFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
          },
          "isSaveEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
          },
          "onNestedPreFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
          },
          "setRotationY": {
            "!type": "fn(rotationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
          },
          "setRotationX": {
            "!type": "fn(rotationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
          },
          "findViewWithTag": {
            "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
          },
          "getOutlineProvider": {
            "!type": "fn() -> +android.view.ViewOutlineProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
          },
          "setDisabledSystemUiVisibility": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
          },
          "dispatchWindowSystemUiVisiblityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
          },
          "onStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
          },
          "invalidate": {
            "!type": "fn(dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
          },
          "getForegroundGravity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
          },
          "toGlobalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "clearChildFocus": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
          },
          "setAccessibilityDelegate": {
            "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "hackTurnOffWindowResizeAnim": {
            "!type": "fn(off: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
          },
          "onDrawForeground": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
          },
          "onNestedScroll": {
            "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
          },
          "isMotionEventSplittingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
          },
          "notifyViewAccessibilityStateChangedIfNeeded": {
            "!type": "fn(changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
          },
          "getMeasuredWidthAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
          },
          "setLeft": {
            "!type": "fn(left: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
          },
          "setDrawingCacheBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
          },
          "resolvePadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
          },
          "isLaidOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
          },
          "outputDirtyFlags": {
            "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
          },
          "hasFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
          },
          "getWindowVisibleDisplayFrame": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
          },
          "setDrawingCacheQuality": {
            "!type": "fn(quality: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
          },
          "onFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
          },
          "isNestedScrollingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
          },
          "getOpticalInsets": {
            "!type": "fn() -> +android.graphics.Insets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
          },
          "setOnFocusChangeListener": {
            "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
          },
          "setOnDragListener": {
            "!type": "fn(l: +android.view.View.OnDragListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
          },
          "cancelLongPress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
          },
          "getMeasuredState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
          },
          "setHorizontalFadingEdgeEnabled": {
            "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
          },
          "dispatchDrawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
          },
          "dispatchSetSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
          },
          "onDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
          },
          "requestApplyInsets": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
          },
          "setScrollIndicators": {
            "!type": "fn(indicators: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
          },
          "onStopNestedScroll": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
          },
          "setScaleY": {
            "!type": "fn(scaleY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
          },
          "setScaleX": {
            "!type": "fn(scaleX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getChildCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
          },
          "setNextFocusForwardId": {
            "!type": "fn(nextFocusForwardId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
          },
          "setAccessibilityTraversalBefore": {
            "!type": "fn(beforeId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
          },
          "findFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
          },
          "getTag": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
          },
          "setFocusable": {
            "!type": "fn(focusable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
          },
          "isVerticalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
          },
          "getNextFocusLeftId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
          },
          "onStartNestedScroll": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
          },
          "isVerticalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "generateLayoutParams": {
            "!type": "fn(attrs: +android.util.AttributeSet) -> +android.preference.PreferenceFrameLayout.LayoutParams",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceFrameLayout.html#generateLayoutParams(android.util.AttributeSet)"
          },
          "setTransitionAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
          },
          "getMeasuredWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
          },
          "getLocationOnScreen": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
          },
          "encode": {
            "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
          },
          "getTransientView": {
            "!type": "fn(position: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
          },
          "addChildrenForAccessibility": {
            "!type": "fn(outChildren: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
          },
          "isTextDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
          },
          "setRotation": {
            "!type": "fn(rotation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
          },
          "getTransientViewCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
          },
          "resolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
          },
          "getPaddingRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
          },
          "getZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
          },
          "getNestedScrollAxes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
          },
          "getY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
          },
          "getX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
          },
          "setPadding": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
          },
          "setLayoutAnimationListener": {
            "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
          },
          "damageChildDeferred": {
            "!type": "fn(child: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
          },
          "setForegroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "gatherTransparentRegion": {
            "!type": "fn(region: +android.graphics.Region) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
          },
          "showContextMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
          },
          "isHorizontalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
          },
          "onCheckIsTextEditor": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
          },
          "setLayoutTransition": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
          },
          "setOnSystemUiVisibilityChangeListener": {
            "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
          },
          "setBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
          },
          "captureTransitioningViews": {
            "!type": "fn(transitioningViews: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
          },
          "setOnHierarchyChangeListener": {
            "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
          },
          "setNextFocusRightId": {
            "!type": "fn(nextFocusRightId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
          },
          "makeOptionalFitsSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
          },
          "setTag": {
            "!type": "fn(tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
          },
          "onInitializeAccessibilityNodeInfo": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "willNotDraw": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
          },
          "setCameraDistance": {
            "!type": "fn(distance: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
          },
          "removeViewInLayout": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
          },
          "setTransitionGroup": {
            "!type": "fn(isTransitionGroup: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "startActionModeForChild": {
            "!type": "fn(originalView: +android.view.View, callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback)"
          },
          "getPaddingEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
          },
          "getRootWindowInsets": {
            "!type": "fn() -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
          },
          "onNestedPreScroll": {
            "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
          },
          "setContentDescription": {
            "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasWindowFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
          },
          "getRootView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
          },
          "addOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "getParentForAccessibility": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
          },
          "isDirty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
          },
          "requestDisallowInterceptTouchEvent": {
            "!type": "fn(disallowIntercept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
          },
          "focusSearch": {
            "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
          },
          "findNamedViews": {
            "!type": "fn(namedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
          },
          "post": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
          },
          "announceForAccessibility": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
          },
          "getTouchscreenBlocksFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
          },
          "getRawTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
          },
          "canResolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
          },
          "setClipToOutline": {
            "!type": "fn(clipToOutline: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
          },
          "getFitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
          },
          "getRawTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
          },
          "getDescendantFocusability": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
          },
          "isAlwaysDrawnWithCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
          },
          "buildLayer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
          },
          "getOutsets": {
            "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
          },
          "setTransitionName": {
            "!type": "fn(transitionName: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
          },
          "getRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
          },
          "getNextFocusUpId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
          },
          "onWindowSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
          },
          "onScreenStateChanged": {
            "!type": "fn(screenState: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
          },
          "setZ": {
            "!type": "fn(z: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
          },
          "setY": {
            "!type": "fn(y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
          },
          "setX": {
            "!type": "fn(x: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
          },
          "setPivotY": {
            "!type": "fn(pivotY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
          },
          "getPaddingBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
          },
          "setPivotX": {
            "!type": "fn(pivotX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
          },
          "setOnContextClickListener": {
            "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
          },
          "setScrollBarFadeDuration": {
            "!type": "fn(scrollBarFadeDuration: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
          },
          "setActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
          },
          "getDrawingCacheQuality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
          },
          "getBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
          },
          "setPersistentDrawingCache": {
            "!type": "fn(drawingCacheToKeep: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
          },
          "includeForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
          },
          "startLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
          },
          "getLayoutAnimationListener": {
            "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
          },
          "resolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
          },
          "setOnApplyWindowInsetsListener": {
            "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
          },
          "setStateListAnimator": {
            "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
          },
          "canScrollVertically": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
          },
          "setContextClickable": {
            "!type": "fn(contextClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
          },
          "updateDisplayListIfDirty": {
            "!type": "fn() -> +android.view.RenderNode",
            "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
          },
          "resolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
          },
          "dispatchKeyEventPreIme": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
          },
          "removeTransientView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
          },
          "setScrollY": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
          },
          "setScrollX": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
          },
          "setWillNotCacheDrawing": {
            "!type": "fn(willNotCacheDrawing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
          },
          "setHapticFeedbackEnabled": {
            "!type": "fn(hapticFeedbackEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
          },
          "performLongClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performLongClick()"
          },
          "onHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "requestFocus": {
            "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestFocus(int, android.graphics.Rect)"
          },
          "getMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
          },
          "hasTransientState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
          },
          "setAddStatesFromChildren": {
            "!type": "fn(addsStates: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
          },
          "postOnAnimation": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
          },
          "onInitializeAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setOpticalInsets": {
            "!type": "fn(insets: +android.graphics.Insets) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
          },
          "isClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
          },
          "isLayoutRtl": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
          },
          "setLayoutDirection": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
          },
          "postInvalidateDelayed": {
            "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
          },
          "isInScrollingContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
          },
          "jumpDrawablesToCurrentState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
          },
          "notifySubtreeAccessibilityStateChangedIfNeeded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
          },
          "setScrollBarDefaultDelayBeforeFade": {
            "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
          },
          "getDrawingRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
          },
          "getBackgroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
          },
          "getTouchables": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
          },
          "getAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
          },
          "onNestedPrePerformAccessibilityAction": {
            "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
          },
          "onKeyPreIme": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setScrollBarStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
          },
          "getLocalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
          },
          "getSolidColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
          },
          "offsetRectIntoDescendantCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
          },
          "toLocalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
          },
          "requestTransitionStart": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
          },
          "removeAllViews": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
          },
          "onCloseSystemDialogs": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
          },
          "getVerticalScrollbarWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
          },
          "isAccessibilitySelectionExtendable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
          },
          "getAccessibilityTraversalAfter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
          },
          "onProvideVirtualStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
          },
          "canResolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
          },
          "scheduleLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
          },
          "getScrollIndicators": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
          },
          "getScrollBarSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
          },
          "dispatchApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
          },
          "getAccessibilityViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
          },
          "isTransitionGroup": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
          },
          "transformPointToViewLocal": {
            "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
          },
          "onPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "isDrawingCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
          },
          "getOverlay": {
            "!type": "fn() -> +android.view.ViewGroupOverlay",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
          },
          "onProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
          },
          "setNextFocusDownId": {
            "!type": "fn(nextFocusDownId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
          },
          "getVerticalScrollbarPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
          },
          "childHasTransientStateChanged": {
            "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
          },
          "setFilterTouchesWhenObscured": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
          },
          "getMeasuredHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
          },
          "getFocusables": {
            "!type": "fn(direction: number) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
          },
          "setOnTouchListener": {
            "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
          },
          "getOverScrollMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
          },
          "endViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
          },
          "refreshDrawableState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
          },
          "requestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "isInEditMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
          },
          "canResolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
          },
          "startViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "dispatchUnhandledMove": {
            "!type": "fn(focused: +android.view.View, direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
          },
          "setImportantForAccessibility": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
          },
          "setMotionEventSplittingEnabled": {
            "!type": "fn(split: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
          },
          "focusableViewAvailable": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
          },
          "isLayoutRequested": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
          },
          "invalidateChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
          },
          "setSaveFromParentEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getLayerType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
          },
          "getHotspotBounds": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
          },
          "setScrollbarFadingEnabled": {
            "!type": "fn(fadeScrollbars: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
          },
          "getLayoutTransition": {
            "!type": "fn() -> +android.animation.LayoutTransition",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
          },
          "removeViewAt": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
          },
          "recomputeViewAttributes": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
          },
          "getMeasureAllChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#getMeasureAllChildren()"
          },
          "setBackground": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
          },
          "getRotation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
          },
          "drawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
          },
          "getNextFocusRightId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
          },
          "getFocusedChild": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
          },
          "isHardwareAccelerated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
          },
          "setAlwaysDrawnWithCacheEnabled": {
            "!type": "fn(always: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
          },
          "getBackground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
          },
          "requestAccessibilityFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
          },
          "removeViews": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
          },
          "setAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
          },
          "getAccessibilityNodeProvider": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
          },
          "resetResolvedPadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
          },
          "getScaleY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
          },
          "forceLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
          },
          "isLayoutDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
          },
          "getScaleX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
          },
          "setFocusableInTouchMode": {
            "!type": "fn(focusableInTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
          },
          "updateViewLayout": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "addStatesFromChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
          },
          "setAnimationCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
          },
          "getTransitionAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
          },
          "getWindowId": {
            "!type": "fn() -> +android.view.WindowId",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
          },
          "transformMatrixToLocal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
          },
          "dispatchFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
          },
          "getViewTreeObserver": {
            "!type": "fn() -> +android.view.ViewTreeObserver",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
          },
          "onPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "clearAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
          },
          "unscheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
          },
          "getVerticalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
          },
          "onViewRemoved": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
          },
          "requestLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setLayoutAnimation": {
            "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
          },
          "dispatchNestedPreFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
          },
          "setOnClickListener": {
            "!type": "fn(l: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
          },
          "isTextDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
          },
          "onApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
          },
          "setNextFocusUpId": {
            "!type": "fn(nextFocusUpId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getChildAt": {
            "!type": "fn(index: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
          },
          "getBackgroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
          },
          "onCancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
          },
          "getHorizontalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
          },
          "sendAccessibilityEvent": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
          },
          "getPaddingLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
          },
          "setRevealClip": {
            "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
          },
          "isFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
          },
          "removeViewsInLayout": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
          },
          "onInitializeAccessibilityNodeInfoInternal": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "isAssistBlocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
          },
          "showContextMenuForChild": {
            "!type": "fn(originalView: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
          },
          "getWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
          },
          "startDrag": {
            "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
          },
          "scheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
          },
          "canScrollHorizontally": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
          },
          "invalidateChildInParent": {
            "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
          },
          "dispatchNestedPreScroll": {
            "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
          },
          "getLayoutParams": {
            "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
          },
          "getScrollY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
          },
          "getScrollX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
          },
          "postDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
          },
          "getKeyDispatcherState": {
            "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
          },
          "setMinimumHeight": {
            "!type": "fn(minHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
          },
          "hasFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
          },
          "scrollTo": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
          },
          "setAccessibilityTraversalAfter": {
            "!type": "fn(afterId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
          },
          "getClipToPadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
          },
          "isHapticFeedbackEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
          },
          "isFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
          },
          "getTransientViewIndex": {
            "!type": "fn(position: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
          },
          "requestRectangleOnScreen": {
            "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
          },
          "isSoundEffectsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
          },
          "findViewByPredicate": {
            "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
          },
          "setLayerPaint": {
            "!type": "fn(paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
          },
          "setLayoutParams": {
            "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
          },
          "isContextClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
          },
          "isImportantForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
          },
          "dispatchPointerEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
          },
          "invalidateOutline": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
          },
          "getTouchDelegate": {
            "!type": "fn() -> +android.view.TouchDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
          },
          "setHasTransientState": {
            "!type": "fn(hasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
          },
          "getIterableTextForAccessibility": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
          },
          "checkInputConnectionProxy": {
            "!type": "fn(view: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
          },
          "getChildVisibleRect": {
            "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
          },
          "findViewByAccessibilityIdTraversal": {
            "!type": "fn(accessibilityId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
          },
          "clearFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
          },
          "findViewsWithText": {
            "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
          },
          "addTransientView": {
            "!type": "fn(view: +android.view.View, index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
          },
          "invalidateDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
          },
          "getViewRootImpl": {
            "!type": "fn() -> +android.view.ViewRootImpl",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
          },
          "setOnHoverListener": {
            "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
          },
          "getForegroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
          },
          "setNestedScrollingEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
          },
          "clearAccessibilityFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
          },
          "buildDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
          },
          "getTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
          },
          "getWindowVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
          },
          "onInterceptTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
          },
          "clearDisappearingChildren": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
          },
          "setDescendantFocusability": {
            "!type": "fn(focusability: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
          },
          "setId": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
          },
          "setAccessibilityLiveRegion": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
          },
          "getTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
          },
          "setMinimumWidth": {
            "!type": "fn(minWidth: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
          },
          "bringToFront": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
          },
          "isTextAlignmentResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
          },
          "hasOnClickListeners": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
          },
          "getSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
          },
          "getPivotY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
          },
          "getPivotX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
          },
          "getStateListAnimator": {
            "!type": "fn() -> +android.animation.StateListAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
          },
          "getPaddingStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
          },
          "resolveLayoutParams": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
          },
          "dispatchActivityResult": {
            "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
          },
          "setScrollBarSize": {
            "!type": "fn(scrollBarSize: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
          },
          "dispatchDisplayHint": {
            "!type": "fn(hint: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
          },
          "debug": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
          },
          "getBoundsOnScreen": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
          },
          "setOutlineProvider": {
            "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
          },
          "measure": {
            "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "getMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
          },
          "setOnScrollChangeListener": {
            "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
          },
          "isActionableForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
          },
          "dispatchProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
          },
          "draw": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
          },
          "callOnClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
          },
          "resetPaddingToInitialValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
          },
          "getRotationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
          },
          "setClipBounds": {
            "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
          },
          "getRotationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
          },
          "getHitRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
          },
          "removeView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
          },
          "getAccessibilitySelectionEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
          },
          "sendAccessibilityEventUncheckedInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getClipBounds": {
            "!type": "fn() -> +android.graphics.Rect",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
          },
          "addTouchables": {
            "!type": "fn(views: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
          },
          "getLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "isAttachedToWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "resetResolvedTextDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
          },
          "hasShadow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
          },
          "setLeftTopRightBottom": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
          },
          "resetResolvedTextAlignment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
          },
          "isSaveFromParentEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
          },
          "willNotCacheDrawing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
          },
          "removeOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "offsetTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
          },
          "isRootNamespace": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
          },
          "setOverScrollMode": {
            "!type": "fn(overScrollMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
          },
          "getDrawableState": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
          },
          "stopNestedScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
          },
          "addOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "onRequestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "dispatchPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getAccessibilitySelectionStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
          },
          "setOnGenericMotionListener": {
            "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
          },
          "postInvalidate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
          },
          "dispatchNestedPrePerformAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
          },
          "isActivated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
          },
          "setWillNotDraw": {
            "!type": "fn(willNotDraw: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
          },
          "getNextFocusForwardId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
          },
          "isAnimationCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
          },
          "setNextFocusLeftId": {
            "!type": "fn(nextFocusLeftId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
          },
          "requestChildFocus": {
            "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
          },
          "isLongClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
          },
          "childDrawableStateChanged": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
          },
          "applyDrawableToTransparentRegion": {
            "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
          },
          "addFocusables": {
            "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
          },
          "isAccessibilityFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
          },
          "getDrawingCache": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
          },
          "computeScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
          },
          "getAccessibilityLiveRegion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
          },
          "isFocusableInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
          },
          "indexOfChild": {
            "!type": "fn(child: +android.view.View) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
          },
          "getMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
          },
          "dispatchSetActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
          },
          "setLayerType": {
            "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
          },
          "isInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
          },
          "isLayoutDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
          },
          "isDuplicateParentStateEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
          },
          "offsetChildrenTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
          },
          "setTouchscreenBlocksFocus": {
            "!type": "fn(touchscreenBlocksFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
          },
          "getIteratorForGranularity": {
            "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
          },
          "getForegroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
          },
          "getBaseline": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
          },
          "setFadingEdgeLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
          },
          "fitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
          },
          "setSaveEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
          },
          "setClipChildren": {
            "!type": "fn(clipChildren: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
          },
          "createAccessibilityNodeInfo": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
          },
          "getParent": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
          },
          "bringChildToFront": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
          },
          "setHovered": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "getAccessibilityWindowId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
          },
          "requestUnbufferedDispatch": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
          },
          "onNestedFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
          },
          "startNestedScroll": {
            "!type": "fn(axes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
          },
          "onRtlPropertiesChanged": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
          },
          "requestFocusFromTouch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
          },
          "createAccessibilityNodeInfoInternal": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
          },
          "playSoundEffect": {
            "!type": "fn(soundConstant: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
          },
          "setClipToPadding": {
            "!type": "fn(clipToPadding: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
          },
          "isLayoutSuppressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
          },
          "setIsRootNamespace": {
            "!type": "fn(isRoot: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
          },
          "destroyDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
          },
          "setForegroundGravity": {
            "!type": "fn(foregroundGravity: number) -> void",
            "!url": "http://developer.android.com/reference/android/widget/FrameLayout.html#setForegroundGravity(int)"
          },
          "getContentDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
          },
          "setTouchDelegate": {
            "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
          },
          "setOnCreateContextMenuListener": {
            "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
          },
          "getAccessibilityTraversalBefore": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getAccessibilityDelegate": {
            "!type": "fn() -> +android.view.View.AccessibilityDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
          },
          "setLabelFor": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
          },
          "setOnLongClickListener": {
            "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
          },
          "setBackgroundDrawable": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "damageChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
          },
          "notifySubtreeAccessibilityStateChanged": {
            "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
          },
          "computeSystemWindowInsets": {
            "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
          },
          "offsetDescendantRectToMyCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
          },
          "getLayoutAnimation": {
            "!type": "fn() -> +android.view.animation.LayoutAnimationController",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
          },
          "removeOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "setPaddingRelative": {
            "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
          },
          "isOpaque": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
          },
          "performClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
          },
          "setTextDirection": {
            "!type": "fn(textDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
          },
          "getFocusedRect": {
            "!type": "fn(r: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
          },
          "setBackgroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
          },
          "setDrawingCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
          },
          "onViewAdded": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
          },
          "setAssistBlocked": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
          },
          "layout": {
            "!type": "fn(l: number, t: number, r: number, b: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
          },
          "dispatchDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
          },
          "isForegroundInsidePadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
          },
          "setTextAlignment": {
            "!type": "fn(textAlignment: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
          },
          "setBackgroundResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
          },
          "getImportantForAccessibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
          },
          "getPaddingTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
          },
          "requestTransparentRegion": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
          }
        }
      },
      "PreferenceManager": {
        "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html",
        "!type": "fn(activity: +android.app.Activity, firstRequestCode: number)",
        "KEY_HAS_SET_DEFAULT_VALUES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#KEY_HAS_SET_DEFAULT_VALUES"
        },
        "METADATA_KEY_PREFERENCES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#METADATA_KEY_PREFERENCES"
        },
        "setDefaultValues": {
          "!type": "fn(context: +android.content.Context, resId: number, readAgain: bool) -> void",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#setDefaultValues(android.content.Context, int, boolean)"
        },
        "getDefaultSharedPreferences": {
          "!type": "fn(context: +android.content.Context) -> +android.content.SharedPreferences",
          "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferences(android.content.Context)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getSharedPreferencesName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesName()"
          },
          "unregisterOnActivityStopListener": {
            "!type": "fn(listener: +android.preference.PreferenceManager.OnActivityStopListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#unregisterOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)"
          },
          "setSharedPreferencesName": {
            "!type": "fn(sharedPreferencesName: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesName(java.lang.String)"
          },
          "findPreference": {
            "!type": "fn(key: +java.lang.CharSequence) -> +android.preference.Preference",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#findPreference(java.lang.CharSequence)"
          },
          "inflateFromResource": {
            "!type": "fn(context: +android.content.Context, resId: number, rootPreferences: +android.preference.PreferenceScreen) -> +android.preference.PreferenceScreen",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#inflateFromResource(android.content.Context, int, android.preference.PreferenceScreen)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferences()"
          },
          "getSharedPreferencesMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesMode()"
          },
          "setSharedPreferencesMode": {
            "!type": "fn(sharedPreferencesMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesMode(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "createPreferenceScreen": {
            "!type": "fn(context: +android.content.Context) -> +android.preference.PreferenceScreen",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#createPreferenceScreen(android.content.Context)"
          },
          "registerOnActivityStopListener": {
            "!type": "fn(listener: +android.preference.PreferenceManager.OnActivityStopListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/PreferenceManager.html#registerOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)"
          }
        }
      },
      "SeekBarVolumizer": {
        "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html",
        "!type": "fn(context: +android.content.Context, streamType: number, defaultUri: +android.net.Uri, callback: +android.preference.SeekBarVolumizer.Callback)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "handleMessage": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#handleMessage(android.os.Message)"
          },
          "onSaveInstanceState": {
            "!type": "fn(volumeStore: +android.preference.VolumePreference.VolumeStore) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#onSaveInstanceState(android.preference.VolumePreference.VolumeStore)"
          },
          "onProgressChanged": {
            "!type": "fn(seekBar: +android.widget.SeekBar, progress: number, fromTouch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#onProgressChanged(android.widget.SeekBar, int, boolean)"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#start()"
          },
          "stopSample": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#stopSample()"
          },
          "startSample": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#startSample()"
          },
          "onRestoreInstanceState": {
            "!type": "fn(volumeStore: +android.preference.VolumePreference.VolumeStore) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#onRestoreInstanceState(android.preference.VolumePreference.VolumeStore)"
          },
          "changeVolumeBy": {
            "!type": "fn(amount: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#changeVolumeBy(int)"
          },
          "onStartTrackingTouch": {
            "!type": "fn(seekBar: +android.widget.SeekBar) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#onStartTrackingTouch(android.widget.SeekBar)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSeekBar": {
            "!type": "fn() -> +android.widget.SeekBar",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#getSeekBar()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isSamplePlaying": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#isSamplePlaying()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#stop()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setSeekBar": {
            "!type": "fn(seekBar: +android.widget.SeekBar) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#setSeekBar(android.widget.SeekBar)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "muteVolume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#muteVolume()"
          },
          "revertVolume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#revertVolume()"
          },
          "onStopTrackingTouch": {
            "!type": "fn(seekBar: +android.widget.SeekBar) -> void",
            "!url": "http://developer.android.com/reference/android/preference/SeekBarVolumizer.html#onStopTrackingTouch(android.widget.SeekBar)"
          }
        }
      },
      "TwoStatePreference": {
        "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getSummaryOn": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOn()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "getSummaryOff": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getSummaryOff()"
          },
          "isChecked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#isChecked()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "setDisableDependentsState": {
            "!type": "fn(disableDependentsState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setDisableDependentsState(boolean)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setChecked": {
            "!type": "fn(checked: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setChecked(boolean)"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          },
          "setSummaryOn": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOn(java.lang.CharSequence)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "setSummaryOff": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#setSummaryOff(java.lang.CharSequence)"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#shouldDisableDependents()"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getDisableDependentsState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/TwoStatePreference.html#getDisableDependentsState()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          }
        }
      },
      "EditTextPreference": {
        "!url": "http://developer.android.com/reference/android/preference/EditTextPreference.html",
        "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet, defStyleAttr: number, defStyleRes: number)",
        "DEFAULT_ORDER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/preference/Preference.html#DEFAULT_ORDER"
        },
        "prototype": {
          "getNegativeButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getNegativeButtonText()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getDialogTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogTitle()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onDependencyChanged": {
            "!type": "fn(dependency: +android.preference.Preference, disableDependent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onDependencyChanged(android.preference.Preference, boolean)"
          },
          "isSelectable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isSelectable()"
          },
          "shouldDisableDependents": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/EditTextPreference.html#shouldDisableDependents()"
          },
          "getEditor": {
            "!type": "fn() -> +android.content.SharedPreferences.Editor",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getEditor()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialog()"
          },
          "setSelectable": {
            "!type": "fn(selectable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSelectable(boolean)"
          },
          "getLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getLayoutResource()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setEnabled(boolean)"
          },
          "getOrder": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOrder()"
          },
          "getOnPreferenceChangeListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceChangeListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceChangeListener()"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onDismiss(android.content.DialogInterface)"
          },
          "setDefaultValue": {
            "!type": "fn(defaultValue: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDefaultValue(java.lang.Object)"
          },
          "getEditText": {
            "!type": "fn() -> +android.widget.EditText",
            "!url": "http://developer.android.com/reference/android/preference/EditTextPreference.html#getEditText()"
          },
          "setLayoutResource": {
            "!type": "fn(layoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setLayoutResource(int)"
          },
          "getPreferenceManager": {
            "!type": "fn() -> +android.preference.PreferenceManager",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getPreferenceManager()"
          },
          "notifyDependencyChange": {
            "!type": "fn(disableDependents: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#notifyDependencyChange(boolean)"
          },
          "setOnPreferenceClickListener": {
            "!type": "fn(onPreferenceClickListener: +android.preference.Preference.OnPreferenceClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setPositiveButtonText": {
            "!type": "fn(positiveButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setPositiveButtonText(java.lang.CharSequence)"
          },
          "setText": {
            "!type": "fn(text: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/EditTextPreference.html#setText(java.lang.String)"
          },
          "setIntent": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIntent(android.content.Intent)"
          },
          "setOnPreferenceChangeListener": {
            "!type": "fn(onPreferenceChangeListener: +android.preference.Preference.OnPreferenceChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)"
          },
          "onParentChanged": {
            "!type": "fn(parent: +android.preference.Preference, disableChild: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onParentChanged(android.preference.Preference, boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitle()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getContext()"
          },
          "setFragment": {
            "!type": "fn(fragment: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setFragment(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#saveHierarchyState(android.os.Bundle)"
          },
          "setDialogLayoutResource": {
            "!type": "fn(dialogLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogLayoutResource(int)"
          },
          "setNegativeButtonText": {
            "!type": "fn(negativeButtonText: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setNegativeButtonText(java.lang.CharSequence)"
          },
          "getView": {
            "!type": "fn(convertView: +android.view.View, parent: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getView(android.view.View, android.view.ViewGroup)"
          },
          "performClick": {
            "!type": "fn(preferenceScreen: +android.preference.PreferenceScreen) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#performClick(android.preference.PreferenceScreen)"
          },
          "getText": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/EditTextPreference.html#getText()"
          },
          "compareTo": {
            "!type": "fn(another: +android.preference.Preference) -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#compareTo(android.preference.Preference)"
          },
          "getSummary": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSummary()"
          },
          "getDialogLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogLayoutResource()"
          },
          "hasKey": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#hasKey()"
          },
          "setKey": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setKey(java.lang.String)"
          },
          "onKey": {
            "!type": "fn(v: +android.view.View, keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#onKey(android.view.View, int, android.view.KeyEvent)"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onClick(android.content.DialogInterface, int)"
          },
          "setShouldDisableView": {
            "!type": "fn(shouldDisableView: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setShouldDisableView(boolean)"
          },
          "setIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setIcon(android.graphics.drawable.Drawable)"
          },
          "getTitleRes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getTitleRes()"
          },
          "getFragment": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getFragment()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getKey()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#toString()"
          },
          "getDialogMessage": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogMessage()"
          },
          "setOrder": {
            "!type": "fn(order: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setOrder(int)"
          },
          "setDialogMessage": {
            "!type": "fn(dialogMessage: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogMessage(java.lang.CharSequence)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIntent()"
          },
          "setWidgetLayoutResource": {
            "!type": "fn(widgetLayoutResId: number) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setWidgetLayoutResource(int)"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isEnabled()"
          },
          "getShouldDisableView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getShouldDisableView()"
          },
          "getSharedPreferences": {
            "!type": "fn() -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getSharedPreferences()"
          },
          "getIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getIcon()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onActivityDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#onActivityDestroy()"
          },
          "getDialogIcon": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getDialogIcon()"
          },
          "setDialogIcon": {
            "!type": "fn(dialogIcon: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogIcon(android.graphics.drawable.Drawable)"
          },
          "setDependency": {
            "!type": "fn(dependencyKey: string) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setDependency(java.lang.String)"
          },
          "getOnPreferenceClickListener": {
            "!type": "fn() -> +android.preference.Preference.OnPreferenceClickListener",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getOnPreferenceClickListener()"
          },
          "getWidgetLayoutResource": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getWidgetLayoutResource()"
          },
          "getPositiveButtonText": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#getPositiveButtonText()"
          },
          "setSummary": {
            "!type": "fn(summary: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setSummary(java.lang.CharSequence)"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#restoreHierarchyState(android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setDialogTitle": {
            "!type": "fn(dialogTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/DialogPreference.html#setDialogTitle(java.lang.CharSequence)"
          },
          "isPersistent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#isPersistent()"
          },
          "peekExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#peekExtras()"
          },
          "getDependency": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getDependency()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#getExtras()"
          },
          "shouldCommit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#shouldCommit()"
          },
          "setPersistent": {
            "!type": "fn(persistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setPersistent(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/preference/Preference.html#setTitle(java.lang.CharSequence)"
          }
        }
      }
    }
  }
}